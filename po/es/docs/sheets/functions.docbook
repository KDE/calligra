<chapter id="functions">
<!--
*************************** DO NOT EDIT MANUALLY ************************

This file is autogenerated from *.xml files in calligra/tables/functions/
all changes will be overwritten on the next script run
-->
<title
>Funciones</title>
<para
>&sheets; dispone de una amplia gama de funciones matemáticas y de otros tipos predefinidas que se pueden utilizar en la fórmula de una celda.</para>
<sect1 id="supported-functions">
<title
>Funciones soportadas</title>
<para
>Este capítulo contiene una breve descripción de todas las funciones soportadas en los siguientes grupos:</para>
<simplelist>
<member
><link linkend="Bit-Operations"
>Operaciones a nivel de bits</link
>&nbsp;</member>
<member
><link linkend="Conversion"
>Conversión</link
>&nbsp;</member>
<member
><link linkend="Database"
>Base de datos</link
>&nbsp;</member>
<member
><link linkend="Date---Time"
>Fecha &amp; Hora</link
>&nbsp;</member>
<member
><link linkend="Engineering"
>Ingeniería</link
>&nbsp;</member>
<member
><link linkend="Financial"
>Finanzas</link
>&nbsp;</member>
<member
><link linkend="Information"
>Información</link
>&nbsp;</member>
<member
><link linkend="Logical"
>Lógica</link
>&nbsp;</member>
<member
><link linkend="Lookup---Reference"
>Búsqueda &amp; referencia</link
>&nbsp;</member>
<member
><link linkend="Math"
>Matemáticas</link
>&nbsp;</member>
<member
><link linkend="Statistical"
>Estadística</link
>&nbsp;</member>
<member
><link linkend="Text"
>Texto</link
>&nbsp;</member>
<member
><link linkend="Trigonometric"
>Trigonométricas</link
>&nbsp;</member>
</simplelist>
<!--
<para
>OpenFormula groups (small, medium, and large, more)? Which are supported by Sheets?</para>
<para
>Something about interoperablity / spread sheet exchange / known issues, incompabitilites, errors?</para>
-->
<sect2 id="Bit-Operations">
<title
>Operaciones a nivel de bits</title>

<sect3 id="BITAND">
<title
>BITAND</title>
<para
>La función BITAND() realiza una operación «Y» bit a bit entre los dos parámetros enteros.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BITAND(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BITAND(12;10) devuelve 8 (porque 12 en decimal es 1100 en binario, y 10 en decimal es 1010 en binario; y 1100 «y» 1010 es 1000, que es el entero 8).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITLSHIFT">
<title
>BITLSHIFT</title>
<para
>La función BITLSHIFT() realiza una operación de desplazamiento hacia la izquierda sobre los bits del primer parámetro. El número de bits a desplazar se indica con el segundo parámetro. Tenga en cuenta que un número negativo de bits a desplazar hacia la izquierda se convierte en un desplazamiento hacia la derecha.  </para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BITLSHIFT(valor; tamaño del desplazamiento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Posiciones a desplazar a la izquierda</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITOR">
<title
>BITOR</title>
<para
>La función BITOR() realiza una operación «O» bit a bit entre los dos parámetros enteros. </para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BITOR(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BITOR(12;10) devuelve 14 (porque 12 en decimal es 1100 en binario, y 10 en decimal es 1010 en binario; y 1100 «o» 1010 es 1110, que es el entero 14).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITRSHIFT">
<title
>BITRSHIFT</title>
<para
>La función BITRSHIFT() realiza una operación de desplazamiento hacia la derecha sobre los bits del primer parámetro. El número de bits a desplazar se indica con el segundo parámetro. Tenga en cuenta que un número negativo de bits a desplazar hacia la derecha se convierte en un desplazamiento hacia la izquierda.  </para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BITRSHIFT(valor; tamaño del desplazamiento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Posiciones a desplazar a la derecha</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITXOR">
<title
>BITXOR</title>
<para
>La función BITXOR() realiza una operación O-exclusivo bit a bit entre los dos parámetros enteros.  </para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BITXOR(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BITXOR(12;10) devuelve 6 (porque 12 en decimal es 1100 en binario, y 10 en decimal es 1010 en binario; y 1100 «o exclusivo» 1010 es 0110, que es el entero 6).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Conversion">
<title
>Conversión</title>

<sect3 id="ARABIC">
<title
>ARABIC</title>
<para
>La función ARABIC() convierte un número en numeración romana a la arábiga.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ARABIC(Número romano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ARABIC("IV") devuelve 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ARABIC("XCIX") devuelve 99</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROMAN"
>ROMAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASCIITOCHAR">
<title
>ASCIITOCHAR</title>
<para
>La función ASCIITOCHAR() devuelve el carácter de cada uno de los códigos ASCII dados</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ASCIITOCHAR(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Los valores ASCII a convertir</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ASCIITOCHAR(118) devuelve "v"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ASCIITOCHAR(75; 68; 69) devuelve "KDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2INT">
<title
>BOOL2INT</title>
<para
>La función BOOL2INT() devuelve un valor entero para un valor booleano dado. Este método está pensado para usar un valor booleano en métodos que requieren un entero.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BOOL2INT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor booleano a convertir</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BOOL2INT(True) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BOOL2INT(False) devuelve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="INT2BOOL"
>INT2BOOL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2STRING">
<title
>BOOL2STRING</title>
<para
>La función BOOL2STRING() devuelve un valor de texto para un valor booleano dado. Este método está pensado para usar un booleano en métodos que requieren una cadena</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BOOL2STRING(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor booleano a convertir</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BOOL2STRING(true) devuelve "True"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BOOL2STRING(false) devuelve "False"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>upper(BOOL2STRING(find("nan";"banana"))) devuelve TRUE</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARX">
<title
>CARX</title>
<para
>La función CARX() devuelve la posición X correspondiente a la posición de un punto en coordenadas polares.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CARX(Radio;Ángulo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Radio</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CARX(12;1.5707) devuelve 0.00115592</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CARX(12;0) devuelve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARY">
<title
>CARY</title>
<para
>La función CARY() devuelve la posición Y correspondiente a la posición de un punto en coordenadas polares.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CARY(Radio;Ángulo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Radio</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CARY(12;1.5707) devuelve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CARY(12;0) devuelve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHARTOASCII">
<title
>CHARTOASCII</title>
<para
>La función CHARTOASCII() devuelve el código ASCII del carácter dado.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CHARTOASCII(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Una cadena de un carácter a convertir</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CHARTOASCII("v") devuelve 118</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CHARTOASCII(r) es un error. El carácter debe estar entrecomillado.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DECSEX">
<title
>DECSEX</title>
<para
>La función DECSEX() convierte un valor doble en un valor de hora.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DECSEX(doble)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DECSEX(1.6668) devuelve 1:40 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DECSEX(7.8) devuelve 7:47</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT2BOOL">
<title
>INT2BOOL</title>
<para
>La función INT2BOOL() devuelve un valor booleano para un número entero dado. Este método está pensado para usar un entero en métodos que requieren un booleano. solo acepta 0 o 1. Si se da otro valor, se devuelve falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>INT2BOOL(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor entero a convertir</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INT2BOOL(1) devuelve verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INT2BOOL(0) devuelve falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>OR(INT2BOOL(1); false) devuelve verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BOOL2INT"
>BOOL2INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NUM2STRING">
<title
>NUM2STRING</title>
<para
>La función NUM2STRING() devuelve un valor numérico dado en formato de cadena de texto. Tenga en cuenta que &sheets; puede convertir automáticamente números a cadenas de texto si es necesario, así que esta función rara vez será necesaria.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NUM2STRING(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número a convertir en una cadena</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NUM2STRING(10) devuelve "10"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NUM2STRING(2.05) devuelve "2.05"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>=find("101";NUM2STRING(A1)) (A1 = 2.010102) devuelve True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STRING"
>STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLA">
<title
>POLA</title>
<para
>La funcion POLA() devuelve el ángulo (en radianes) correspondiente a la posición de un punto en coordenadas cartesianas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>POLA(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor en X</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valor en Y</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POLA(12;12) devuelve 0.78539816</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POLA(12;0) devuelve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POLA(0;12) devuelve 1.5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLR">
<title
>POLR</title>
<para
>La función POLR() devuelve el radio correspondiente a la posición de un punto en coordenadas cartesianas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>POLR(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor en X</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valor en Y</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POLR(12;12) devuelve 16.9705</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POLR(12;0) devuelve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROMAN">
<title
>ROMAN</title>
<para
>La función ROMAN() devuelve el número en formato romano. Solo se pueden convertir números enteros positivos. El argumento opcional Formato indica el nivel de concisión, y por omisión es 0.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ROMAN(Número)</para
></listitem>

</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Formato</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROMAN(99) devuelve "XCIX"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROMAN(-55) devuelve "Err"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ARABIC"
>ARABIC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEXDEC">
<title
>SEXDEC</title>
<para
>La función SEXDEC() devuelve un valor decimal. También puede suministrar un valor de hora.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SEXDEC(valor horario) o SEXDEC(horas;minutos;segundos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Horas</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minutos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SEXDEC(1;5;7) devuelve 1.0852778 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DECSEX("8:05") devuelve 8.08333333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STRING">
<title
>STRING</title>
<para
>La función STRING() devuelve un valor de texto del número dado. Es lo mismo que la función NUM2STRING.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número a convertir en una cadena</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="NUM2STRING"
>NUM2STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Database">
<title
>Base de datos</title>

<sect3 id="DAVERAGE">
<title
>DAVERAGE</title>
<para
>Calcula la media de una columna de una base de datos indicada por un conjunto de condiciones para valores numéricos</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DAVERAGE(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAVERAGE(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNT">
<title
>DCOUNT</title>
<para
>Cuenta las celdas que contienen valores numéricos en una columna de una base de datos indicada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DCOUNT(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DCOUNT(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNTA"
>DCOUNTA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNTA">
<title
>DCOUNTA</title>
<para
>Cuenta las celdas que contienen valores numéricos o alfanuméricos en una columna de una base de datos indicada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DCOUNTA(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DCOUNTA(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNT"
>DCOUNT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DGET">
<title
>DGET</title>
<para
>Devuelve un valor único de una columna de una base de datos indicada por un conjunto de condiciones. Esta función devuelve un error si no hay ningún valor o hay más de uno.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DGET(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DGET(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMAX">
<title
>DMAX</title>
<para
>Devuelve el mayor valor de una columna de una base de datos indicada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DMAX(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DMAX(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DMIN"
>DMIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMIN">
<title
>DMIN</title>
<para
>Devuelve los valores más pequeños de una columna de una base de datos indicada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DMIN(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DMIN(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DMAX"
>DMAX</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DPRODUCT">
<title
>DPRODUCT</title>
<para
>Devuelve el producto de todos los valores numéricos de una columna de una base de datos especificada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DPRODUCT(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DPRODUCT(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEV">
<title
>DSTDEV</title>
<para
>Devuelve la estimación de la desviación estándar de una población basada en una muestra usando todos los valores numéricos que haya en una columna de una base de datos indicada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DSTDEV(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DSTDEV(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEVP"
>DSTDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEVP">
<title
>DSTDEVP</title>
<para
>Devuelve la desviación estándar de una población basada en la población completa usando todos los valores numéricos que haya en una columna de una base de datos indicada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DSTDEVP(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DSTDEVP(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEV"
>DSTDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSUM">
<title
>DSUM</title>
<para
>Suma los números de una columna de una base de datos indicada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DSUM(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DSUM(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVAR">
<title
>DVAR</title>
<para
>Devuelve la estimación de la varianza de una población basada en una muestra usando todos los valores numéricos que haya en una columna de una base de datos indicada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DVAR(Base de datos; "Cabecera"; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DVAR(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DVARP"
>DVARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVARP">
<title
>DVARP</title>
<para
>Devuelve la varianza de una población basada en un la población completa usando todos los valores numéricos que haya en una columna de una base de datos indicada por un conjunto de condiciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DVARP(Base de datos; «Cabecera»; Condiciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que marca la base de datos</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Cadena que marca la columna de la base de datos</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Intervalo que marca las condiciones</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DVARP(A1:C5; «Salario»; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DVAR"
>DVAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GETPIVOTDATA">
<title
>GETPIVOTDATA</title>
<para
>Obtiene los datos resumen de una tabla dinámica.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>GETPIVOTDATA(Base de datos; "Ventas")</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo que contiene la tabla dinámica</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Nombre del campo del que desea los datos resumen</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Date---Time">
<title
>Fecha &amp; hora</title>

<sect3 id="CURRENTDATE">
<title
>CURRENTDATE</title>
<para
>La función CURRENTDATE() devuelve la fecha actual. Es equivalente a la función TODAY.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CURRENTDATE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CURRENTDATE() devuelve «Sábado 13 de abril de 2002»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTDATETIME">
<title
>CURRENTDATETIME</title>
<para
>La función CURRENTDATETIME() devuelve la fecha y hora actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CURRENTDATETIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CURRENTDATETIME() devuelve «Sábado 13 abril 2002 19:12:01»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTTIME">
<title
>CURRENTTIME</title>
<para
>La función CURRENTTIME() devuelve la hora actual, formateada según los parámetros locales.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CURRENTTIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CURRENTTIME() devuelve «19:12:01»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE">
<title
>DATE</title>
<para
>La función DATE() devuelve la fecha formateada según los parámetros locales.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DATE(año;mes;día)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Año</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mes</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Dia</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DATE(2000;5;5) devuelve Viernes 05 de Mayo de 2000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE2UNIX">
<title
>DATE2UNIX</title>
<para
>La función DATE2UNIX() convierte una fecha y una hora a hora unix.</para>
<para
>La hora unix es el número de segundos desde la medianoche del 1 de enero de 1970.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DATE2UNIX(fecha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DATE2UNIX(«01/01/2000») devuelve 946,684,800</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEDIF">
<title
>DATEDIF</title>
<para
>La función DATEDIF() devuelve la diferencia entre dos fechas.</para>
<para
>El intervalo debe ser uno de los siguientes: «m»: mes; «d»: días; «y»: años enteros; «ym»: mes excluyendo años; «yd»: días excluyendo años; «md»: días excluyendo meses y años</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DATEDIF(primera fecha; segunda fecha; intervalo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primera fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segunda fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>intervalo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DATEDIF(A1;A2;«d»), si A1 es «1 enero 1995» y A2 es «15 junio 1999», devuelve el número de días 1626</para
></listitem>
</varlistentry>

<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DATEDIF(A1;A2;«m»), si A1 es «1 de enero de 1995» y A2 es «15 de junio de 1999», devuelve 53 meses</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEVALUE">
<title
>DATEVALUE</title>
<para
>La función DATEVALUE devuelve un número que representa al día, es decir, el número días transcurridos desde el 31 de diciembre de 1899.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DATEVALUE(fecha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DATEVALUE(«2/22/2002») devuelve 37309</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TIMEVALUE"
>TIMEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAY">
<title
>DAY</title>
<para
>La función DAY devuelve el día de una fecha. Si no se indica ningún parámetro se devuelve el día actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DIA(fecha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAY(«2/22/2002») devuelve 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAY(2323.1285) devuelve 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYNAME">
<title
>DAYNAME</title>
<para
>La función DAYNAME() devuelve el nombre del día de la semana (1..7). En algunos países el primer día de la semana es el lunes, mientras que en otros es el domingo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DAYNAME(día de la semana)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de día de la semana (1..7)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAYNAME(1) devuelve lunes (si la semana empieza el lunes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="WEEKDAY"
>WEEKDAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYOFYEAR">
<title
>DAYOFYEAR</title>
<para
>La función DAYOFYEAR() devuelve el número del día en el año (1... 365).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DAYOFYEAR(año;mes;día)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Año</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mes</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Dia</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAYOFYEAR(2000;12;1) devuelve 336</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAYOFYEAR(2000;2;29) devuelve 60</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS">
<title
>DAYS</title>
<para
>La función DAYS() devuelve la diferencia en días entre dos fechas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DAYS(fecha2; fecha1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer (anterior) valor de fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de fecha</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAYS(«2002-02-22»; «2002-02-26») devuelve 4</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS360">
<title
>DAYS360</title>
<para
>La función DAYS360() devuelve el número de días desde la fecha1 hasta la fecha2 usando un calendario de 360 días en el que se supone que todos los meses tienen 30 días. Si el método es false (por omisión) se usará el método de los EEUU, en caso contrario, el europeo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DAYS360(fecha1; fecha2; método)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha1</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Fecha2</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Método</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAYS360(«2/22/2002»; «4/21/2002»; FALSE) devuelve 59</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAYS"
>DAYS</link
>&nbsp;</member>
<member
><link linkend="MONTHS"
>MONTHS</link
>&nbsp;</member>
<member
><link linkend="WEEKS"
>WEEKS</link
>&nbsp;</member>
<member
><link linkend="YEARS"
>YEARS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINMONTH">
<title
>DAYSINMONTH</title>
<para
>La función DAYSINMONTH() devuelve el número de días que hay en el año y mes indicados.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DAYSINMONTH(año;mes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Año</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mes</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAYSINMONTH(2000;2) devuelve 29</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINYEAR">
<title
>DAYSINYEAR</title>
<para
>La función DAYSINYEAR() devuelve el número de días que hay en el mes indicado.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DAYSINYEAR(año)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Año</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DAYSINYEAR(2000) devuelve 366</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EASTERSUNDAY">
<title
>EASTERSUNDAY</title>
<para
>La función EASTERSUNDAY() devuelve la fecha correspondiente al domingo de Pascua del año dado como parámetro.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EASTERSUNDAY(año)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Año</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EASTERSUNDAY(2003) devuelve «20th April 2003»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EDATE">
<title
>EDATE</title>
<para
>La función EDATE devuelve la fecha indicada por una fecha dada y un número de meses antes o después de esa fecha.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EDATE(fecha; meses)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Meses</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EDATE(«2/22/2002»; 3) devuelve «5/22/2002»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EDATE(«3/31/2002»; -1) devuelve «2/28/2002»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DATE"
>DATE</link
>&nbsp;</member>
<member
><link linkend="EOMONTH"
>EOMONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EOMONTH">
<title
>EOMONTH</title>
<para
>La función EOMONTH devuelve el último día del mes indicado por una fecha y un número de meses a partir de esa fecha.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EOMONTH(fecha; meses)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Meses</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EOMONTH(«2/22/2002»; 3) devuelve «5/31/2002»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EOMONTH(«3/12/2002»; -1) devuelve «2/28/2002»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EOMONTH(«3/12/2002»; 0) devuelve «3/31/2002»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EDATE"
>EDATE</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOUR">
<title
>HOUR</title>
<para
>La función HOUR devuelve la hora de una hora dada. Si no se indica ningún parámetro se devuelve la hora actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>HOUR(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HOUR(«22:10:12») devuelve 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HOUR(0.1285) devuelve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOURS">
<title
>HOURS</title>
<para
>La función HOURS() devuelve el valor de las horas de una expresión horaria.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>HOURS(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HOURS(«10:5:2») devuelve 10</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLEAPYEAR">
<title
>ISLEAPYEAR</title>
<para
>La función ISLEAPYEAR() devuelve True si el año dado es bisiesto.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISLEAPYEAR(año)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Año</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISLEAPYEAR(2000) devuelve True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISOWEEKNUM">
<title
>ISOWEEKNUM</title>
<para
>La función ISOWEEKNUM() devuelve la semana en que cae la fecha. Observe que esta función sigue el estándar ISO8601: las semanas siempre empiezan en lunes, y terminan en domingo. La primera semana del año es aquella que contiene el primer jueves del año.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISOWEEKNUM(fecha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISOWEEKNUM(A1) devuelve 51 cuando A1 es «21 de dic».</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="WEEKNUM"
>WEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTE">
<title
>MINUTE</title>
<para
>La función MINUTE devuelve los minutos de una hora dada. Si no se indica ningún parámetro, se devuelve el minuto actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MINUTE(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MINUTE("22:10:12") devuelve 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MINUTE(0.1234) devuelve 57</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTES">
<title
>MINUTES</title>
<para
>La función MINUTES() deveuelve el valor de los minutos que hay en una expresión horaria.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MINUTES(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MINUTES("10:5:2") devuelve 5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTH">
<title
>MONTH</title>
<para
>La función MONTH devuelve el mes de una fecha. Si no se indica ningún parámetro se devuelve el mes actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MONTH(fecha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MONTH(«2/22/2002») devuelve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MONTH(2323.1285) devuelve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHNAME">
<title
>MONTHNAME</title>
<para
>La función MONTHNAME() devuelve el nombre del mes (1-12).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MONTHNAME(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de mes (1..12)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MONTHNAME(5) devuelve mayo</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHS">
<title
>MONTHS</title>
<para
>La función MONTHS() devuelve la diferencia entre dos fechas en meses. El tercer parámetro indica el modo de cálculo: si el modo es 0, MONTHS() devuelve el máximo número posible de meses entre esos días. Si el modo es 1, solo devuelve el número de meses completos entre ellos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MONTHS(fecha2; fecha1; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer (anterior) valor de fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Modo de cálculo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MONTHS(«2002-01-18»; «2002-02-26»; 0) devuelve 1, porque hay un mes y 8 días entre ellos</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MONTHS(«2002-01-19»; «2002-02-26»; 1) devuelve 0, porque no hay ningún mes completo entre las fechas, empezando por el primer día del mes</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NETWORKDAY">
<title
>NETWORKDAY</title>
<para
>La función NETWORKDAY() devuelve el número de días laborales entre la fecha inicial y la final.</para>
<para
>Las vacaciones deben ser uno de los siguientes: número = días a añadir, una fecha única o una serie de fechas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NETWORKDAY(fecha de inicio; fecha de fin; vacaciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha de inicio</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Fecha de fin</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Vacaciones</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NETWORKDAY(«01/01/2001»;«01/08/2001») devuelve 5 días laborales</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NETWORKDAY(«01/01/2001»;«01/08/2001»;2) devuelve 3 días laborales</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOW">
<title
>NOW</title>
<para
>La función NOW() devuelve la fecha y hora actual. Es idéntica a CURRENTDATETIME y se proporciona por compatibilidad con otras aplicaciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NOW()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NOW() devuelve «Sábado 13 abril 2002 19:12:01»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECOND">
<title
>SECOND</title>
<para
>La función SECOND devuelve los segundos de una hora dada. Si no se indica ningún parámetro se devuelve el segundo actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SECOND(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SECOND(«22:10:12») devuelve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SECOND(0.1234) devuelve 42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECONDS">
<title
>SECONDS</title>
<para
>La función SEGUNDOS() devuelve el valor de los segundos de una expresión horaria.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SECONDS(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SECONDS(«10:5:2») devuelve 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIME">
<title
>TIME</title>
<para
>La función TIME() devuelve la hora formateada según los parámetros locales.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TIME(horas;minutos;segundos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Horas</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minutos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TIME(10;2;2) devuelve 10:02:02</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TIME(10;70;0) devuelve 11:10:0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TIME(10;-40;0) devuelve 9:20:0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIMEVALUE">
<title
>TIMEVALUE</title>
<para
>La función TIMEVALUE() devuelve un número (entre 0 y 1) que representa la hora del día.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TIMEVALUE(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TIMEVALUE(«10:05:02») devuelve 0.42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DATEVALUE"
>DATEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TODAY">
<title
>TODAY</title>
<para
>La función TODAY() devuelve la fecha actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TODAY()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TODAY() devuelve «Sábado 13 de abril de 2002»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="NOW"
>NOW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNIX2DATE">
<title
>UNIX2DATE</title>
<para
>La función UNIX2DATE() convierte una hora unix en un valor de fecha y hora.</para>
<para
>La hora unix es el número de segundos desde la medianoche del 1 de enero de 1970.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>UNIX2DATE(hora Unix)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Unixtime</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>UNIX2DATE(0) devuelve 1970-01-01</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKDAY">
<title
>WEEKDAY</title>
<para
>La función WEEKDAY() devuelve el día de la semana de la fecha dada. Si el método es 1 (por omisión) WEEKDAY() devuelve 1 para el domingo, 2 para el lunes, ... Si el método es 2, el lunes es 1, el martes es 2, ... y si el método es 3 WEEKDAY() devuelve 0 para el lunes, 1 para el martes, ...</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>WEEKDAY(fecha; método)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Método (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>WEEKDAY(«2002-02-22»; 2) devuelve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAYNAME"
>DAYNAME</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKNUM">
<title
>WEEKNUM</title>
<para
>La función WEEKNUM() devuelve el número de semana no ISO en la que cae la fecha.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>WEEKNUM(fecha; método)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Método (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>WEEKNUM(A1; 1) devuelve 11 cuando A1 es «9 marzo 2008». El número de semana dentro del año, con las semanas empezando en domingo (1, este es el método predeterminado si no se indica ninguno).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>WEEKNUM(A1; 2) devuelve 10 cuando A1 es «9 marzo 2008». El número de semana dentro del año, con las semanas empezando en lunes (2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISOWEEKNUM"
>ISOWEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKS">
<title
>WEEKS</title>
<para
>La funcióin WEEKS() devuelve la diferencia entre dos fechas en semanas. El tercer parámetro indica el módo de cálculo: si el modo es 0, WEEKS() devuelve el máximo número posible de semanas entre esos días. Si el modo es 1, solo devuelve el número de semanas enteras que hay entre ellas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>WEEKS(fecha2; fecha1; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer (anterior) valor de fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Modo de cálculo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>WEEKS(«2002-02-18»; «2002-02-26»; 0) devuelve 1, porque hay una semana y un día entre ellas</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>WEEKS(«2002-19-02»; «2002-19-02»; 1) devuelve 0, porque no hay ninguna semana entera entre ellas, comenzando por el primer día de la semana (lunes o domingo, según sus ajustes locales)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKSINYEAR">
<title
>WEEKSINYEAR</title>
<para
>La función WEEKSINYEAR() devuelve el número de semanas que hay en el año indicado.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>WEEKSINYEAR(año)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Año</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>WEEKSINYEAR(2000) devuelve 52</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WORKDAY">
<title
>WORKDAY</title>
<para
>La función WORKDAY() devuelve la fecha que está a un número de días laborales a partir de la fecha inicial.</para>
<para
>Las vacaciones deben ser uno de los siguientes: número = días a añadir, una fecha única o una serie de fechas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>WORKDAY(fecha inicial; días; vacaciones)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha de inicio</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Días laborables</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Vacaciones</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>Si B9 es «01/01/2001», D3 es «01/03/2001», y D4 es «01/04/2003», entonces WORKDAY(B9;2;D3:D4) devuelve «Vie 5 ene 2001»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEAR">
<title
>YEAR</title>
<para
>La función YEAR devuelve el año de una fecha. Si no se indica ningún parámetro, se devuelve el año actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>YEAR(fecha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>YEAR(«2/22/2002») devuelve 2002</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>YEAR(2323.1285) devuelve 1906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARFRAC">
<title
>YEARFRAC</title>
<para
>La función YEARFRAC() devuelve el número de días completos entre la fecha inicial y la fecha final, según la base.</para>
<para
>La base puede ser una de las siguientes: 0 = 30/360, 1 = Real/real, 2 = Real/360, 3 = Real/365, 4 = 30/360 europea</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>YEARFRAC(fecha inicial; fecha final, base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primera fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segunda fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>intervalo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARS">
<title
>YEARS</title>
<para
>La función YEARS() devuelve la diferencia en años entre dos fechas. El tercer parámetro indica el modo de cálculo: si el modo es 0, YEARS() devuelve el máximo número posible de años entre esos días. Si el modo es 1, solo devuelve los años completos, empezando el 1 de enero y terminando el 31 de diciembre.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>YEARS(fecha2; fecha1; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer (anterior) valor de fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de fecha</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Modo de cálculo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>YEARS(«2001-02-19»; «2002-02-26»; 0) devuelve 1, porque hay 1 año y 7 días entre ellas</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>YEARS(«2002-02-19»; «2002-02-26»; 1) devuelve 0, porque no hay un año completo entre ellas, empezando por el primer día del año</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Engineering">
<title
>Ingeniería</title>

<sect3 id="BASE">
<title
>BASE</title>
<para
>La función BASE() convierte un número de base 10 en una cadena en una base entre 2 y 36.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BASE(número;base;precisión)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>LongitudMin</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BASE(128;8) devuelve «200»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELI">
<title
>BESSELI</title>
<para
>La función BESSELI() devuelve la función Bessel modificada ln(x).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BESSELI(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dónde se evalúa la función</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Orden de la función</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BESSELI(0.7;3) devuelve 0.007367374</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELJ">
<title
>BESSELJ</title>
<para
>La función BESSELJ() devuelve la función Bessel.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BESSELJ(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dónde se evalúa la función</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Orden de la función</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BESSELJ(0.89;3) devuelve 0.013974004</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELK">
<title
>BESSELK</title>
<para
>La función BESSELK() devuelve la función Bessel modificada, que es equivalente a la función Bessel evaluada con argumentos puramente imaginarios.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BESSELK(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dónde se evalúa la función</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Orden de la función</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BESSELK(3;9) devuelve 397.95880</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELY">
<title
>BESSELY</title>
<para
>La función BESSELY() devuelve la función Bessel, que también es conocida como función Weber o función Neumann.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BESSELY(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dónde se evalúa la función</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Orden de la función</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BESSELY(4;2) es igual a 0.215903595</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="BIN2DEC">
<title
>BIN2DEC</title>
<para
>La función BIN2DEC() devuelve el valor formateado como número decimal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BIN2DEC(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BIN2DEC(«1010») devuelve 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BIN2DEC(«11111») devuelve 31 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2HEX">
<title
>BIN2HEX</title>
<para
>La función BIN2HEX() devuelve el valor formateado como número hexadecimal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BIN2HEX(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>La longitud mínima de la salida</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BIN2HEX(«1010») devuelve «a»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BIN2HEX(«11111») devuelve «1f»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2OCT">
<title
>BIN2OCT</title>
<para
>La función BIN2OCT() devuelve el valor formateado como número octal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BIN2OCT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>La longitud mínima de la salida</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BIN2OCT(«1010») devuelve «12» </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BIN2OCT(«11111») devuelve «37» </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPLEX">
<title
>COMPLEX</title>
<para
>COMPLEX(real;imaginario) devuelve un número complejo en la forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COMPLEX(real;imaginario)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Coeficiente real</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Coeficiente imaginario</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMPLEX(1.2;3.4) devuelve «1.2+3.4i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMPLEX(0;-1) devuelve «-i»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONVERT">
<title
>CONVERT</title>
<para
>La función CONVERT() devuelve una conversión de un sistema de medidas a otro.</para>
<para
>Las unidades de masa admitidas son: g (gramo), sg (piezas), lbm (libra), u (masa atómica), ozm (onza), stone, ton (tonelada), grain (grano), pweight (pennyweight), hweight (hundredweight).</para>
<para
>Las unidades de distancia admitidas son: m (metro), in (pulgada), ft (pie), mi (milla), Nmi (milla náutica), ang (Angstrom), parsec, lightyear (año luz).</para>
<para
>Unidades de presión admitidas: Pa (Pascal), atm (atmósfera), mmHg (milímetros de mercurio), psi (libras por pulgada cuadrada), Torr.</para>
<para
>Unidades de fuerza admitidas: N (Newton), dyn (dina), pound (libra).</para>
<para
>Unidades de energía admitidas: J (Julio), e (ergio), c (caloría termodinámica), cal (caloría IT), eV (electronvoltio), HPh (caballo de potencia hora), Wh (vatio hora), flb (pie libra), BTU.</para>
<para
>Unidades de potencia admitidas: W (vatio), HP (caballo de potencia), PS (Pferdestaerke).</para>
<para
>Unidades de magnetismo admitidas: T (Tesla), ga (Gauss).</para>
<para
>Unidades de temperatura admitidas: C (Celsius), F (Fahrenheit), K (Kelvin).</para>
<para
>Unidades de volumen admitidas: l (litro), tsp (cucharadita), tbs (cucharada), oz (onza líquida), cup (taza), pt (pinta), qt (quart), gal (galón), barril, m3 (metro cúbico), mi3 (milla cúbica), Nmi3 (milla náutica cúbica), in3 (pulgada cúbica), ft3 (pie cúbico), yd3 (yarda cúbica), GRT o regton (tonelada de registro bruto).</para>
<para
>Unidades de superficie admitidas: m2 (metro cuadrado), mi2 (milla cuadrada), Nmi2 (milla náutica cuadrada), in2 (pulgada cuadrada), ft2 (pie cuadrado), yd2 (yarda cuadrada), acre, ha (hectárea).</para>
<para
>Unidades de velocidad admitidas: m/s (metros por segundo), m/h (metros por hora), mph (millas por hora), kn (nudo).</para>
<para
>Para las unidades métricas se puede usar cualquiera de los siguientes prefijos:  E (exa, 1E+18), P (peta, 1E+15), T (tera, 1E+12), G (giga, 1E+09), M (mega, 1E+06), k (kilo, 1E+03), h (hecto, 1E+02), e (deca, 1E+01), d (deci, 1E-01), c (centi, 1E-02), m (mili, 1E-03), u (micro, 1E-06), n (nano, 1E-09), p (pico, 1E-12), f (femto, 1E-15), a (atto, 1E-18).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CONVERT(Número; Unidad de origen; Unidad de destino)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Unidad de origen</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Unidad de destino</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CONVERT(32;«C»;«F») es igual a 89.6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CONVERT(3;"lbm";"kg") es igual a 1.3608</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CONVERT(7.9;"cal";"J") es igual a 33.0757</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2BIN">
<title
>DEC2BIN</title>
<para
>La función DEC2BIN() devuelve el valor formateado como número binario.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DEC2BIN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La longitud mínima de la salida</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEC2BIN(12) devuelve "1100"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEC2BIN(55) devuelve "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2HEX">
<title
>DEC2HEX</title>
<para
>La función DEC2HEX() devuelve el valor formateado como número hexadecimal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DEC2HEX(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La longitud mínima de la salida</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEC2HEX(12) devuelve "c"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEC2HEX(55) devuelve "37"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2OCT">
<title
>DEC2OCT</title>
<para
>La función DEC2OCT() devuelve el valor formateado como número octal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DEC2OCT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La longitud mínima de la salida</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEC2OCT(12) devuelve "14"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEC2OCT(55) devuelve "67"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DELTA">
<title
>DELTA</title>
<para
>La función DELTA() devuelve 1 si x es igual a y, y 0 en caso contrario. Por omisión, y es 0.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DELTA(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DELTA(1.2; 3.4) devuelve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DELTA(3; 3) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DELTA(1; TRUE) devuelve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERF">
<title
>ERF</title>
<para
>La función ERF() devuelve la funcción de error. Con un único argumento, ERF() devuelve la función de error entre 0 y ese argumento.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ERF(límite inferior; límite superior)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Límite inferior</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Límite superior</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ERF(0.4) es igual a 0.42839236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ERFC"
>ERFC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERFC">
<title
>ERFC</title>
<para
>La función ERFC() devuelve la función de error complementaria.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ERFC(límite inferior; límite superior)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Límite inferior</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Límite superior</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ERFC(0.4) es igual a 0.57160764</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ERF"
>ERF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GESTEP">
<title
>GESTEP</title>
<para
>La función GESTEP() devuelve 1 si x es mayor o igual que y, y en caso contrario devuelve 0. Por omisión, y es igual a 0.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>GESTEP(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GESTEP(1.2; 3.4) devuelve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GESTEP(3; 3) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GESTEP(0.4; TRUE) devuelve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GESTEP(4; 3) devuelve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2BIN">
<title
>HEX2BIN</title>
<para
>La función HEX2BIN() devuelve el valor formateado como número binario.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>HEX2BIN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HEX2BIN(«a») devuelve «1010»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HEX2BIN(«37») devuelve «110111»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2DEC">
<title
>HEX2DEC</title>
<para
>La función HEX2DEC() devuelve el valor formateado como número decimal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>HEX2DEC(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HEX2DEC(«a») devuelve 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HEX2DEC(«37») devuelve 55 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2OCT">
<title
>HEX2OCT</title>
<para
>La función HEX2OCT() devuelve el valor formateado como número octal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>HEX2OCT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HEX2OCT(«a») devuelve «12» </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HEX2OCT(«37») devuelve «67» </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMABS">
<title
>IMABS</title>
<para
>La función IMABS(número complejo) devuelve el módulo de un número complejo en la forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMABS(número complejo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMABS(«1.2+5i») devuelve 5.1419</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMABS(«-i») devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMABS(«12») devuelve 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMAGINARY">
<title
>IMAGINARY</title>
<para
>IMAGINARY(cadena) devuelve el coeficiente imaginario de un complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMAGINARY(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMAGINARY(«1.2+3.4i») devuelve 3.4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMAGINARY(«1.2») devuelve 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMARGUMENT">
<title
>IMARGUMENT</title>
<para
>La función IMARGUMENT(número complejo) devuelve el argumento de un número complejo en la forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMARGUMENT(número complejo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMARGUMENT(«1.2+5i») devuelve 0.6072</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMARGUMENT(«-i») devuelve -1.57079633 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMARGUMENT(«12») devuelve «#Div/0»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCONJUGATE">
<title
>IMCONJUGATE</title>
<para
>La función IMCONJUGATE(número complejo) devuelve el conjugado de un número complejo en la forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMCONJUGATE(número complejo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCONJUGATE(«1.2+5i») devuelve «1.2-5i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCONJUGATE(«-i») devuelve «i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCONJUGATE(«12») devuelve «12»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOS">
<title
>IMCOS</title>
<para
>La función IMCOS(cadena) devuelve el coseno de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMCOS(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCOS(«1+i») devuelve «0.83373-0.988898i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCOS(«12i») devuelve 81 377.4 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOSH">
<title
>IMCOSH</title>
<para
>La función IMCOSH(cadena) devuelve el coseno hiperbólico de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>

<listitem
><para
>IMCOSH(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCOSH(«1+i») devuelve «0.83373+0.988898i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCOSH(«12i») devuelve 0.84358 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOT">
<title
>IMCOT</title>
<para
>La función IMCOT(cadena) devuelve la cotangente de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMCOT(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCOT(«1+i») devuelve «0.21762-0.86801i»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSC">
<title
>IMCSC</title>
<para
>La función IMCSC(cadena) devuelve la cosecante de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMCSC(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCSC(«1+i») devuelve  «0.62151-0.30393i»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSCH">
<title
>IMCSCH</title>
<para
>La función IMCSCH(cadena) devuelve la cosecante hiperbólica de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMCSCH(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMCSCH(«1+i») devuelve «0.30393-i0.62151»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMDIV">
<title
>IMDIV</title>
<para
>La función IMDIV() devuelve la división de varios números complejos en la forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMDIV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMDIV(1.2;«3.4+5i») devuelve «0.111597-0.164114i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMDIV(«12+i»;«12-i») devuelve «0.986207+0.16551i»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMEXP">
<title
>IMEXP</title>
<para
>La función IMEXP(cadena) el exponencial de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMEXP(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMEXP(«2-i») devuelve «3.99232-6.21768i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMEXP(«12i») devuelve «0.843854-0.536573i» </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLN">
<title
>IMLN</title>
<para
>La función IMLN(cadena) devuelve el logaritmo natural de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMLN(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMLN(«3-i») devuelve «1.15129-0.321751i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMLN(«12») devuelve 2.48491 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG10">
<title
>IMLOG10</title>
<para
>La función IMLOG10(cadena) devuelve el logaritmo en base 10 de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMLOG10(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMLOG10(«3+4i») devuelve «0.69897+0.402719i»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG2">
<title
>IMLOG2</title>
<para
>La función IMLOG2(cadena) devuelve el logaritmo en base 2 de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMLOG2(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMLOG2(«3+4i») devuelve «2.321928+1.337804i»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPOWER">
<title
>IMPOWER</title>
<para
>IMPOWER(cadena) devuelve un número complejo elevado a una potencia.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMPOWER(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Potencia</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMPOWER(«4-i»;2) devuelve «15-8i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMPOWER(«1.2»;2) devuelve 1.44 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPRODUCT">
<title
>IMPRODUCT</title>
<para
>La función IMPRODUCT() devuelve el producto de varios números complejos en la forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMPRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMPRODUCT(1.2;«3.4+5i») devuelve «4.08+6i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMPRODUCT(1.2;«1i») devuelve «+1.2i»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMREAL">
<title
>IMREAL</title>
<para
>IMREAL(cadena) devuelve el coeficiente real de un complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMREAL(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMREAL(«1.2+3.4i») devuelve 1.2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMREAL(«1.2i») devuelve 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSEC">
<title
>IMSEC</title>
<para
>La función IMSEC(cadena) devuelve la secante de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMSEC(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSEC(«1+i») devuelve «0.49833+i0.59108»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSECH">
<title
>IMSECH</title>
<para
>La función IMSECH(cadena) devuelve la secante hiperbólica de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMSECH(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSECH(«1+i») devuelve «0.49833-i0.59108»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSIN">
<title
>IMSIN</title>
<para
>La función IMSIN(cadena) devuelve el seno de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMSIN(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSIN(«1+i») devuelve «1.29846+0.634964i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSIN(«1.2») devuelve -0.536573 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSINH">
<title
>IMSINH</title>
<para
>La función IMSINH(cadena) devuelve el seno hiperbólico de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMSINH(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSINH(«1+i») devuelve «0.63496+1.29846i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSINH(«1.2») devuelve 1.50946 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSQRT">
<title
>IMSQRT</title>
<para
>La función IMSQRT(cadena) devuelve la raíz cuadrada de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMSQRT(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSQRT(«1+i») devuelve «1.09868+0.45509i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSQRT(«1.2i») devuelve «0.774597+0.774597i» </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUB">
<title
>IMSUB</title>
<para
>La función IMSUB() devuelve la diferencia de varios números complejos en la forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMSUB(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSUB(1.2;«3.4+5i») devuelve «-2.2-5i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSUB(1.2;«1i») devuelve «1.2-i»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUM">
<title
>IMSUM</title>
<para
>La función IMSUM() devuelve la suma de varios número complejos en la forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMSUM(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Número complejo</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSUM(1.2;«3.4+5i») devuelve «4.6+5i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMSUM(1.2;«1i») devuelve «1.2+i»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTAN">
<title
>IMTAN</title>
<para
>La función IMTAN(cadena) devuelve la tangente de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMTAN(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMTAN(«1+i») devuelve «0.27175+1.08392i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMTAN(«1.2») devuelve 2.57215</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTANH">
<title
>IMTANH</title>
<para
>La función IMTANH(cadena) devuelve la tangente hiperbólica de un número complejo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IMTANH(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complejo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMTANH(«1+i») devuelve «1.08392+0.27175i»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IMTANH(«1.2») devuelve 0.83365</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2BIN">
<title
>OCT2BIN</title>
<para
>La función OCT2BIN() devuelve el valor formateado como número binario.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>OCT2BIN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>La longitud mínima de la salida</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>OCT2BIN(«12») devuelve «1010»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>OCT2BIN(«55») devuelve «101101»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2DEC">
<title
>OCT2DEC</title>
<para
>La función OCT2DEC() devuelve el valor formateado como número decimal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>OCT2DEC(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>OCT2DEC(«12») devuelve 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>OCT2DEC(«55») devuelve 45 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2HEX">
<title
>OCT2HEX</title>
<para
>La función OCT2HEX() devuelve el valor formateado como número hexadecimal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>

<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>OCT2HEX(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor a convertir</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>La longitud mínima de la salida</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>OCT2HEX(«12») devuelve «A»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>OCT2HEX(«55») devuelve «2D»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Financial">
<title
>Finanzas</title>

<sect3 id="ACCRINT">
<title
>ACCRINT</title>
<para
>La función ACCRINT devuelve el interés acumulado para un título que paga un interés periódico. Las frecuencias permitidas son 1 - anual, 2 - semestral, 4 - cuatrimestral. La base es el tipo de conteo de días que desee usar: 0: 30/360 de EEUU (predeterminado), 1: días reales; 2: días reales/360, 3: días reales/365 o 4: 30/365 europeo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ACCRINT(emisión; primer interés; liquidación; tasa; nominal; frecuencia; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha de emisión</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Primer interés</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Tasa anual del título</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor nominal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Número de pagos por año</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de conteo de días</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ACCRINT(«2/28/2001»; «8/31/2001»; «5/1/2001»; 0.1; 1000; 2; 0) devuelve 16,944</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINTM"
>ACCRINTM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACCRINTM">
<title
>ACCRINTM</title>
<para
>La función ACCRINTM devuelve el interés acumulado para un título que paga los intereses en la fecha de vencimiento. La base es el tipo de conteo de días que desee usar: 0: 30/360 de EEUU (predeterminado), 1: días reales; 2: días reales/360, 3: días reales/365 o 4: 30/365 europeo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ACCRINTM(emisión; liquidación; tasa; nominal; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Fecha de emisión</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Tasa anual del título</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor nominal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de conteo de días</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ACCRINTM(«2/28/2001»; «8/31/2001»; 0.1; 100) devuelve 5.0278</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINT"
>ACCRINT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORDEGRC">
<title
>AMORDEGRC</title>
<para
>La función AMORDEGRC calcula el valor de amortización para el sistema de contabilidad francés usando una depreciación degresiva.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>AMORDEGRC(coste; fecha de compra; fecha de finalización del primer periodo; coste_residual; periodo; tasa; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Coste</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AMORDEGRC( 1000; «2006-02-01»; «2006-12-31»; 10; 0; 0.1; 1 ) devuelve 228</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="AMORLINC"
>AMORLINC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORLINC">
<title
>AMORLINC</title>
<para
>La función AMORLINC calcula el valor de amortización para el sistema de contabilidad francés usando una depreciación lineal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>AMORLINC(coste; fecha de compra; fecha de finalización del primer periodo; coste residual; periodo; tasa; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AMORLINC( 1000; «2004-02-01»; «2004-12-31»; 10; 0; 0.1; 1 ) devuelve 91.256831</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="AMORDEGRC"
>AMORDEGRC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPOUND">
<title
>COMPOUND</title>
<para
>La función COMPOUND() devuelve el valor de una inversión, dados el principal, tasa de interés nominal, frecuencia de composición y tiempo. Por ejemplo: 5000 € a un 12% de interés compuesto trimestral durante 5 años será COMPOUND(5000;0.12;4;5) o 9030.56 €.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COMPOUND(inicial;interés;periodos;periodos_por_año)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Principal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasa de interés</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Períodos por año</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Años</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMPOUND(5000;0.12;4;5) es igual a 9030.56</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONTINUOUS">
<title
>CONTINUOUS</title>
<para
>La función CONTINUOUS() calcula el rendimiento de un interés compuesto continuo, dado el principal, la tasa nominal y el tiempo en años. Por ejemplo: 1000 € devengando un 10% durante 1 año se vuelve CONTINUOUS(1000;.1;1) o $1105.17.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CONTINOUS(principal;interés;años)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Principal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasa de interés</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Años</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CONTINUOUS(1000;0.1;1) es igual a 1105.17</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUPNUM">
<title
>COUPNUM</title>
<para
>La función COUPNUM devuelve el número de cupones a pagar entre la liquidación y el vencimiento. La base es el tipo de conteo de días que desee usar: 0: 30/360 de EEUU (predeterminado), 1: días reales; 2: días reales/360, 3: días reales/365 o 4: 30/365 europeo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COUPNUM(liquidación; vencimiento; frecuencia; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Frecuencia</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de conteo de días</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COUPNUM(«2/28/2001»; «8/31/2001»; 2; 0) devuelve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMIPMT">
<title
>CUMIPMT</title>
<para
>Calcula el pago de interés acumulativo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CUMIPMT(tasa, periodos,valor, inicio, fin, tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>periodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>valor</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>comienzo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>fin</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CUMIPMT( 0.06/12; 5*12; 100000; 5; 12; 0 ) es igual a -3562,187023</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="CUMPRINC"
>CUMPRINC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMPRINC">
<title
>CUMPRINC</title>
<para
>Calcula el pago del principal acumulativo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CUMPRINC(tasa, periodos, valor, inicio, fin, tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>periodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>valor</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>comienzo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>fin</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CUMPRINC( 0.06/12; 5*12; 100000; 5; 12; 0 ) es igual a -11904.054201</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="CUMIPMT"
>CUMIPMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DB">
<title
>DB</title>
<para
>La función DB() calculará la depreciación de un activo para un periodo dado usando el método de depreciación fija. El mes es opcional, si se omite se supone que es 12.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DB(coste; valor del coste residual; vida; periodo [;mes])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Coste</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Coste residual</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Mes</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DB(8000;400;6;3) es igual a 1158.40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DB(8000;400;6;3;2) es igual a 1783.41</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DDB">
<title
>DDB</title>
<para
>La función DDB() calcula la depreciación de un activo para un periodo dado usando el método de depreciación aritmético. El factor es opcional, si se omite se supone que es 2. Todos los parámetros deben ser mayores que cero.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DDB(coste; valor del coste residual; vida; periodo [;factor])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Coste</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Coste residual</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Factor</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DDB(75000;1;60;12;2) devuelve 1721.81</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DISC">
<title
>DISC</title>
<para
>La función DISC devuelve la tasa de descuento de un título. La base es el tipo de conteo de días que desee usar: 0: 30/360 de EEUU (predeterminado), 1: días reales; 2: días reales/360, 3: días reales/365 o 4: 30/365 europeo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DISC(liquidación; vencimiento; nominal; reembolso [; base ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Precio por el valor facial de 100 €</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Reembolso</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de conteo de días</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DISC(«2/28/2001»; «8/31/2001»; 12; 14) devuelve 0.2841</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARDE">
<title
>DOLLARDE</title>
<para
>La función DOLLARDE() devuelve un precio en dólares expresado como un número decimal. El dolar fraccionario es el el número a convertir y la fracción es el denominador de la fracción</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DOLLARDE(dolar fraccionario; fracción)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dólar fraccionario</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fracción</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DOLLARDE(1.02; 16) - significa 1 y 2/16 - devuelve 1.125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARFR"
>DOLLARFR</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARFR">
<title
>DOLLARFR</title>
<para
>La función DOLLARFR() devuelve un precio en dólares expresado como una fracción. El dólar decimal es el número a convertir y la fracción es el denominador de la fracción</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DOLLARFR(dólar fraccionario; fracción)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dólar decimal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fracción</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DOLLARFR(1.125; 16) devuelve 1.02. (1 + 2/16)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARDE"
>DOLLARDE</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION">
<title
>DURATION</title>
<para
>Devuelve el número de periodos necesario para que una inversión retenga un valor deseado.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DURATION(tasa; pv; fv)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor actual (PV)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (FV)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DURATION(0.1; 1000; 2000) devuelve 7.27</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION_ADD">
<title
>DURATION_ADD</title>
<para
>Devuelve la duración de Macauley de un título a interés fijo en años.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DURATION_ADD(Liquidación; Vencimiento; Cupón; Rendimiento; Frecuencia; Base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Cupón</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendimiento</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Frecuencia</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DURATION_ADD( «1998-01-01»; «2006-01-01»; 0.08; 0.09; 2; 1 ) devuelve 5.9937749555</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MDURATION"
>MDURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EFFECT">
<title
>EFFECT</title>
<para
>La función EFFECT() calcula el rendimiento efectivo para una tasa de interés nominal (tasa anual). Por ejemplo, un interés del 8% compuesto mensualmente proporciona un rendimiento efectivo de EFFECT(.08; 12) o 8.3%.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EFFECT(nominal;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo de interés nominal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EFFECT(0.08;12) es igual a 0.083</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EFFECTIVE"
>EFFECTIVE</link
>&nbsp;</member>
<member
><link linkend="NOMINAL"
>NOMINAL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="EFFECTIVE">
<title
>EFFECTIVE</title>
<para
>La función EFFECTIVE() calcula el rendimiento efectivo para una tasa de interés nominal (tasa anual). Es lo mismo que la función EFFECT.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EFFECTIVE(nominal;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo de interés nominal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EURO">
<title
>EURO</title>
<para
>La función EURO() convierte un euro a una divisa nacional dada en la unión monetaria europea. La divisa es una de las siguientes: ATS (Austria), BEF (Bélgica), DEM (Alemania), ESP (España), EUR (Euro), FIM (Finlandia), FRF (Francia), GRD (Grecia), IEP (Irlanda), ITL (Italia), LUF (Luxemburgo), NLG (Países Bajos), o PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EURO(divisa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Divisa</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EURO(«DEM») es igual a 1.95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EUROCONVERT"
>EUROCONVERT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EUROCONVERT">
<title
>EUROCONVERT</title>
<para
>La función EUROCONVERT() convierte un número de una divisa nacional a otra divisa de la unión monetaria europea usando el Euro como intermediario. La divisa es una de las siguientes: ATS (Austria), BEF (Bélgica), DEM (Alemania), ESP (España), EUR (Euro), FIM (Finlandia), FRF (Francia), GRD (Grecia), IEP (Irlanda), ITL (Italia), LUF (Luxemburgo), NLG (Países Bajos), o PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EUROCONVERT(número; divisa de origen; divisa de destino)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Divisa de origen</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Divisa de destino</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EUROCONVERT(1; «EUR»; «DEM») es igual a 1.95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EURO"
>EURO</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV">
<title
>FV</title>
<para
>La función FV() devuelve el valor futuro de una inversión, dado el rendimiento y el tiempo transcurrido. Si tiene 1000 € es una cuenta bancaria produciendo un interés del 8%, tras dos años tendrá FV(1000;0.03;2) o 1166.40 €.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FV(valor actual;rendimiento;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor actual</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FV(1000;0.08;2) es igual a 1166.40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV_ANNUITY">
<title
>FV_ANNUITY</title>
<para
>La función FV_ANNUITY() devuelve el valor futuro de un flujo de pagos dados el importe del pago, la tasa de interés y el número de periodos. Por ejemplo: si recibe 500 € por año durante 20 años, y los invierte al 8%, el total al cabo de 20 años será FV_annuity(500;0.08;20) o 22,880.98 €. Esta función supone que los pagos se hacen al final de cada periodo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FV_ANNUITY(importe;interés;periodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Pago por periodo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasa de interés</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FV_ANNUITY(1000;0.05;5) es igual a 5525.63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTRATE">
<title
>INTRATE</title>
<para
>La función INTRATE devuelve la tasa de interés para un título totalmente invertido. La base es el tipo de conteo de días que desee usar: 0: 30/360 de EEUU (predeterminado), 1: días reales; 2: días reales/360, 3: días reales/365 o 4: 30/365 europeo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>INTRATE(liquidación; vencimiento; inversión; reembolso; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Inversión</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Reembolso</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de conteo de días</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INTRATE(«2/28/2001»; «8/31/2001»; 1000000; 2000000; 1) devuelve 1.98</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IPMT">
<title
>IPMT</title>
<para
>IPMT calcula la cantidad del pago de una anualidad que se dedica al interés.</para>
<para
>La tasa es la tasa de interés periódico.</para>
<para
>El periodo es el periodo de amortización. 1 para el primero y NPER para el último periodo.</para>
<para
>NPER es el número total de periodos durante los que se paga la anualidad.</para>
<para
>PV es el valor actual de la secuencia de pagos.</para>
<para
>FV (opcional) es el valor (futuro) deseado. Por omisión: 0.</para>
<para
>El tipo (opcional) define la fecha de pago.. 1 si el pago es al principio del periodo, y 0 (predeterminado) si el pago es al final del periodo.</para>
<para
>El ejemplo muestra el interés a pagar en el último año de un préstamo a tres años. La tasa de interés es del 10 por ciento.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IPMT(Tasa; Periodo; NPer; PV; FV; Tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores actuales</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (opcional)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IPMT(0.1;3;3;8000) es igual a -292.45</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IRR">
<title
>IRR</title>
<para
>La función IRR calcula la tasa interna de devolución para una serie de flujos monetarios.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IRR( Valores[; Estimación = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Adivinar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="XIRR"
>XIRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISPMT">
<title
>ISPMT</title>
<para
>Calcula el interés pagado en un periodo dado de una inversión.</para>
<para
>La tasa es la tasa de interés periódico.</para>
<para
>El periodo es el periodo de amortización. 1 para el primero y NPer para el último periodo.</para>
<para
>NPer es el número total de periodos durante los que se paga la anualidad.</para>
<para
>PV es el valor actual de la secuencia de pagos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISPMT(Tasa; Periodo; NPer; PV)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valores actuales (PV)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISPMT(0.1; 1; 3; 8000000) es igual a -533333</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEVEL_COUPON">
<title
>LEVEL_COUPON</title>
<para
>La función LEVEL_COUPON() calcula el valor de un bono con una corriente de pagos de cupones que son iguales durante la vida del bono. Por ejemplo: si la tasa de interés es del 10%, un bono de 1000 € con cupones semestrales a una tasa del 13% que vece en 4 años vale LEVEL_COUPON(1000;.13;2;4;.1) o 1096.95 €.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LEVEL_COUPON(valor nominal; cupón; cupones por año; años; tipo del mercado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor facial</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasa del cupón</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Cupones por año</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Años</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo de interés del mercado</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LEVEL_COUPON(1000;.13;2;4;.1) es igual a 1096.95</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDURATION">
<title
>MDURATION</title>
<para
>La función MDURATION() calculará la duración de Macauley modificada de un título a interés fijo en años.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MDURATION( Liquidación; Vencimiento; Cupón; Rendimiento; Frecuencia; [ Base=0 ])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Cupón</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendimiento</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Frecuencia</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MDURATION(«2004-02-01»; «2004-05-31»; 0.08; 0.09; 2; 0) devuelve 0.316321106</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DURATION"
>DURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIRR">
<title
>MIRR</title>
<para
>La función MIRR() calculará la tasa de rentabilidad interna modificada (TRI) de una serie de inversiones periódicas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MIRR(valores; inversión; reinversión)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Inversión</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Reinversión</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MIRR({100;200;-50;300;-200}, 5%, 6%) es igual a 34.2823387842%</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOMINAL">
<title
>NOMINAL</title>
<para
>La función NOMINAL() calcula el tipo de interés nominal (declarado) para un tipo de interés efectivo (anualizado) compuesto en ciertos intervalos. Por ejemplo: para ganar un 8% en una cuenta compuesta mensualmente, necesita un retorno de NOMINAL(.08;12) o 7.72%.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NOMINAL(efectivo;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo de interés efectivo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NOMINAL(0.08;12) es igual a 0.0772</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPER">
<title
>NPER</title>
<para
>Devuelve el número de periodos de una inversión.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NPER(tasa;pago;pv;fv;tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Pago</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor actual (PV)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (FV - opcional)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NPER(0.1; -100; 1000) es igual a 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NPER(0.06; 0; -10000; 20000 ;0) es igual a 11.906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPV">
<title
>NPV</title>
<para
>El valor actual neto (NPV) de una serie de flujos monetarios periódicos.</para>
<para
>Calcula el valor actual neto para una serie de flujos monetarios periódicos con la tasa de descuento Tasa. Los valores deben ser positivos si se reciben como ingresos, y negativos si los importes son gastos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NPV(Tasa; Valores)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NPV(100%;4;5;7) = 4.125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLPRICE">
<title
>ODDLPRICE</title>
<para
>La función ODDLPRICE calcula el valor del título por cien unidades de divisa de valor facial. El título tiene una fecha de último interés irregular.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ODDLPRICE( Liquidación; Vencimiento; Último; Tasa; RendimientoAnual; Reembolso; Frecuencia [; Base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Último</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>RendimientoAnual</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Reembolso</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Frecuencia</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ODDLPRICE(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;5%;100;2) devuelve 90.991042345</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLYIELD">
<title
>ODDLYIELD</title>
<para
>La función ODDYIELD calcula el rendimiento del título que tiene una fecha de último interés irregular.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ODDLYIELD( Liquidación; Vencimiento; Último; Tasa; Precio; Reembolso; Frecuencia [; Base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Último</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Precio</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Reembolso</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Frecuencia</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ODDLYIELD(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;91;100;2) devuelve 4.997775351</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ODDLPRICE"
>ODDLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PMT">
<title
>PMT</title>
<para
>PMT devuelve el importe del pago para un préstamo basado en una tasa de interés constante y pagos constantes (todos los pagos son del mismo importe).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PMT(tasa; nper ; pv [; fv = 0 [; tipo = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos (NPer)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor actual (PV)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (FV - opcional)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PMT(0.1; 4; 10000) es igual a -3154.71</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PPMT">
<title
>PPMT</title>
<para
>PPMT calcula la cantidad del pago de una anualidad que se destina al principal.</para>
<para
>La tasa es la tasa de interés periódico.</para>
<para
>El periodo es el periodo de amortización. 1 para el primero y NPER para el último periodo.</para>
<para
>NPER es el número total de periodos durante los que se paga la anualidad.</para>
<para
>PV es el valor actual de la secuencia de pagos.</para>
<para
>FV (opcional) es el valor (futuro) deseado. Por omisión: 0.</para>
<para
>El tipo (opcional) define la fecha de pago.. 1 si el pago es al principio del periodo, y 0 (predeterminado) si el pago es al final del periodo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PPMT(Tasa; Periodo; NPer; PV [; FV = 9 [; Tipo = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor actual</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (opcional)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PPMT(0.0875;1;36;5000;8000;1) es igual a -18.48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRICEMAT">
<title
>PRICEMAT</title>
<para
>PRICEMAT calcula el precio por 100 unidades de divisa de valor facial del título que paga interés en la fecha de vencimiento.</para>
<para
>Método de cálculo de la base</para>
<para
>0 Método de EEUU. 12 meses, de 30 días cada uno</para>
<para
>1 Número real de días del año, número real de días de cada mes  </para>
<para
>2 360 días en un año, número real de días en los meses</para>
<para
>4 365 días en un año, número real de días en los meses</para>
<para
>5 Método europeo. 12 meses, cada uno de 30 días</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PRICEMAT(liquidación; vencimiento; emisión; tasa; rendimiento [; base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Emisión</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Tipo de descuento</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendimiento</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PRICEMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);6%;5%) devuelve 103.819218241</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV">
<title
>PV</title>
<para
>La función PV() devuelve el valor actual de una inversión -- el valor de hoy de una suma de dinero en el futuro, dada la tasa de interés o inflación. Por ejemplo, si necesita 1166.40 € para su nueva computadora y quiere comprarla en dos años mientras obtiene un 8% de interés, necesita empezar con PV(1166.4,0.08;2) o 1000 €.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PV(valor futuro;tasa;periodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor futuro</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasa de interés</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PV(1166.4;0.08;2) es igual a 1000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV_ANNUITY">
<title
>PV_ANNUITY</title>
<para
>La función PV_ANNUITY() devuelve el valor actual de una anualidad o flujo de pagos. Por ejemplo: un boleto de lotería de «un millón de euros» que pague 50000 € al año durante 20 años, con una tasa de interés del 5%, en realidad vale PV_ANNUITY(50000;0.05;20) o 623111 €. Esta función supone que los pagos se hacen al final de cada periodo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PV_ANNUITY(importe;interés;periodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Pago por periodo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasa de interés</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PV_ANNUITY(1000;0.05;5) es igual a 4329.48</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RATE">
<title
>RATE</title>
<para
>La función RATE() calcula la tasa de interés constante por periodo de de una inversión.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RATE(nper;pmt;pv;fv;tipo;estimación)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Periodo de pago</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Pagos regulares</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor actual</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Adivinar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RATE(4*12;-200;8000) es igual a 0.007701472</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RECEIVED">
<title
>RECEIVED</title>
<para
>La función RECEIVED devuelve el importe recibido en la fecha de vencimiento de un título invertido. La base es el tipo de conteo de días que desee usar: 0: 30/360 estadounidense (predeterminado), 1: días reales, 2: días reales/360, 3: días reales/365 o 4: 30/365 europeo. La fecha de liquidación debe ser anterior a la fecha de vencimiento.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RECEIVED(liquidación; vencimiento; inversión; descuento; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Inversión</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo de descuento</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RECEIVED(«2/28/2001»; «8/31/2001»; 1000; 0.05; 0) devuelve 1,025.787</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RRI">
<title
>RRI</title>
<para
>La función RRI calcula la tasa de interés resultante del beneficio (retorno) de una inversión.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RRI( P; Pv; Fv)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RRI(1;100;200) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLN">
<title
>SLN</title>
<para
>La función SLN() determinará la depreciación en línea recta de un activo durante un único periodo. El coste es el importe que pagó por el activo. El coste residual es el valor del activo al final del periodo. La vida es el número de periodos a lo largo de los cuales se deprecia el activo. SLN divide el coste equitativamente a lo largo de la vida del activo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SLN(coste; coste residual; vida)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Coste</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Coste residual</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SLN(10000;700;10) es igual a 930</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SYD"
>SYD</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SYD">
<title
>SYD</title>
<para
>La función SYD() calculará la depreciación de los suma-de-años dígitos de un activo basándose en su coste, valor del coste residual, vida estimada, y un periodo concreto. Este método acelera la tasa de depreciación, de modo que se produce una mayor depreciación en los primeros periodos que en los últimos. El coste despreciable es el coste actual menos el valor del coste residual. La vida útil es el número de periodos (normalmente años) a lo largo de los cuales se deprecia el activo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SYD(coste; valor del coste residual; vida; periodo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Coste</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Coste residual</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SYD(5000; 200; 5; 2) es igual a 1280</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLEQ">
<title
>TBILLEQ</title>
<para
>La función TBILLEQ devuelve el bono equivalente a un título del tesoro. La fecha de vencimiento debe ser posterior a la de liquidación, en un intervalo de 365 días.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TBILLEQ(liquidación; vencimiento; descuento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Tipo de descuento</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TBILLEQ(«2/28/2001»; «8/31/2001»; 0.1) devuelve 0.1068</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLPRICE">
<title
>TBILLPRICE</title>
<para
>La función TBILLPRICE devuelve el precio por valor de 100 € de un título del tesoro. La fecha de vencimiento debe ser posterior a la de liquidación, pero dentro de los 365 días siguientes. La tasa de descuento debe ser positiva.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TBILLPRICE(liquidación; vencimiento; descuento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Tipo de descuento</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TBILLPRICE(«2/28/2001»; «8/31/2001»; 0.05) devuelve 97.4444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLYIELD">
<title
>TBILLYIELD</title>
<para
>La función TBILLYIELD devuelve el rendimiento de un título del tesoro. La fecha de vencimiento debe ser posterior a la de liquidación, pero dentro de los siguientes 365 días. El precio debe ser positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TBILLYIELD(liquidación; vencimiento; precio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Precio por el valor facial de 100 €</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TBILLYIELD(«2/28/2001»; «8/31/2001»; 600) devuelve -1.63</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VDB">
<title
>VDB</title>
<para
>VDB calcula la provisión para depreciación de un activo con un valor inicial, una vida útil esperada, y un valor final de coste residual para un periodo indicado, usando el método de equilibrio de tasa variable decreciente.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>VDB(coste; coste residual; vida; periodo inicial; periodo final; [; factor de depreciación = 2 [; cambio = falso ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Precio</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Reembolso</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VDB(10000;600;10;0;0.875;1.5) devuelve 1312.5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XIRR">
<title
>XIRR</title>
<para
>La función XIRR calcula la tasa de rentabilidad interna para una serie no periódica de flujos monetarios.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>XIRR( Valores; Fechas[; Adivinar = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fechas</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Adivinar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>XIRR(B1:B4;C1:C4) Suponiendo que B1:B4 contiene -20000, 4000, 12000, 8000 mientras que C1:C4 contiene «=DATE(2000;1;1)», «=DATE(2000;6;1)», «=DATE(2000;12;30)», «=DATE(2001;3;1)» devuelve 0.2115964</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XNPV">
<title
>XNPV</title>
<para
>La función XNPV calcula el valor actual neto de una serie de flujos monetarios.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>XNPV( Tasa; Valores; Fechas )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fechas</seg
><seg
>Fecha</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>XNPV(5%;B1:B4;C1:C4) suponiendo que B1:B4 contiene -20000, 4000, 12000, 8000 mientras C1:C4 contiene «=DATE(2000;1;1)», «=DATE(2000;6;1)», «=DATE(2000;12;30)», «=DATE(2001;3;1)» devuelve 2907.83187</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="NPV"
>NPV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDDISC">
<title
>YIELDDISC</title>
<para
>La función YIELDDISC calcula el rendimiento de un título descontado por 100 unidades monetarias de valor facial.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>YIELDDISC(liquidación; vencimiento; precio, redención, base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Precio</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Reembolso</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>YIELDDISC(DATE(1990;6;1);DATE(1990;12;31);941.66667;1000) devuelve 0.106194684</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDMAT">
<title
>YIELDMAT</title>
<para
>La función YIELDMAT calcula el rendimiento del título que paga intereses en la fecha de vencimiento.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>YIELDMAT( Liquidación; Vencimiento; Emisión; Tasa; Precio; Base )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidación</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Vencimiento</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Emisión</seg
><seg
>Fecha</seg
></seglistitem>
<seglistitem
><seg
>Tipo de descuento</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Precio</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>YIELDMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990; 1; 1); 6%;103.819218241) devuelve 0.050000000</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="YIELDDISC"
>YIELDDISC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZERO_COUPON">
<title
>ZERO_COUPON</title>
<para
>La función ZERO_COUPON() calcula el valor de un bono sin cupón (descuento puro). Por ejemplo: si la tasa de interés es del 10%, un bono de 1000 € que vence en 20 años tiene un valor de ZERO_COUPON(1000;.1;20) o 148.64 €.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ZERO_COUPON(valor facial; tasa; años)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor facial</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasa de interés</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Años</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ZERO_COUPON(1000;.1;20) es igual a 148.64</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2
><sect2 id="Information">
<title
>Información</title>

<sect3 id="ERRORTYPE">
<title
>ERRORTYPE</title>
<para
>La función ERRORTYPE() convierte un error en un número. Si el valor no es un error, se devuelve un error. En caso contrario, se devuelve un código numérico. Los códigos de error están modelados según Excel.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ERRORTYPE(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Error</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ERRORTYPE(NA()) devuelve 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ERRORTYPE(0) devuelve un error</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FILENAME">
<title
>FILENAME</title>
<para
>Devuelve el nombre de archivo actual. Si el documento actual no está guardado, se devuelve una cadena vacía.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FILENAME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FORMULA">
<title
>FORMULA</title>
<para
>La función FORMULA() devuelve la fórmula de una celda como una cadena.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Referencia</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FORMULA(A1) devuelve «=SUM(1+2)» si la celda A1 contiene esa fórmula.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INFO">
<title
>INFO</title>
<para
>La función INFO() devuelve información sobre el entorno operativo actual. El parámetro tipo indica qué tipo de información desea obtener. Es uno de los siguientes: "directory" devuelve la ruta del directorio actual, "numfile" devuelve el número de documentos activos, "release" devuelve la versión de &sheets; como texto, "recalc" devuelve el método de recálculo actual: ("Automatic" o "Manual"), "system" devuelve el nombre del entorno operativo, "osversion" devuelve el sistema operativo actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>INFO(tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo de información</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISBLANK">
<title
>ISBLANK</title>
<para
>La función ISBLANK() devuelve Verdadero si el parámetro está vacío. En caso contrario devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISBLANK(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISBLANK(A1) devuelve Verdadero si A1 está vacío.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISBLANK(A1) devuelve Falso si A1 contiene un valor</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISDATE">
<title
>ISDATE</title>
<para
>La función ISDATE() devuelve Verdadero si el parámetro es una valor de fecha. En caso contrario devuelve Falso</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISDATE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISDATE(«2000-2-2») devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISDATE(«hola») devuelve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERR">
<title
>ISERR</title>
<para
>La función ISERR() devuelve Verdadero si el parámetro es un error distinto a N/A. En caso contrario devuelve Falso. Use ISERROR() si desea incluir también el error N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISERR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERROR">
<title
>ISERROR</title>
<para
>La función ISERROR() devuelve Verdadero si el parámetro es un error de cualquier tipo. En caso contrario devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISERROR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISEVEN">
<title
>ISEVEN</title>
<para
>La función ISEVEN() devuelve Verdadero si el número es par. En caso contrario devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISEVEN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISEVEN(12) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISEVEN(-7) devuelve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISFORMULA">
<title
>ISFORMULA</title>
<para
>La función ISFORMULA() devuelve «true» si la celda referenciada contiene una fórmula. En caso contrario devuelve «false»</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISFORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Referencia</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLOGICAL">
<title
>ISLOGICAL</title>
<para
>La función ISLOGICAL() devuelve Verdadero si el parámetro es un valor booleano. En caso contrario devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISLOGICAL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISLOGICAL(A1
>A2) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISLOGICAL(12) devuelve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNA">
<title
>ISNA</title>
<para
>La función ISNA() devuelve Verdadero si el parámetro es un error N/A. En todos los demás casos devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISNA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNONTEXT">
<title
>ISNONTEXT</title>
<para
>La función ISNONTEXT() devuelve Verdadero si el parámetro no es una cadena. En caso contrario devuelve Falso. Es lo mismo que ISNOTTEXT.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISNONTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISNONTEXT(12) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISNONTEXT(«hola») devuelve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNOTTEXT"
>ISNOTTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNOTTEXT">
<title
>ISNOTTEXT</title>
<para
>La función ISNOTTEXT() devuelve Verdadero si el parámetro no es una cadena. En caso contrario devuelve Falso. Es lo mismo que ISNONTEXT.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISNOTTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISNOTTEXT(12) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISNOTTEXT(«hola») devuelve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNONTEXT"
>ISNONTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUM">
<title
>ISNUM</title>
<para
>La función ISNUM() devuelve Verdadero si el parámetro es un valor numérico. En caso contrario devuelve Falso. Es lo mismo que ISNUMBER.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISNUM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISNUM(12) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISNUM(hola) devuelve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNUMBER"
>ISNUMBER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUMBER">
<title
>ISNUMBER</title>
<para
>La función ISNUMBER() devuelve Verdadero si el parámetro es un valor numérico. En caso contrario devuelve Falso. Es lo mismo que ISNUM.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISNUMBER(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISNUMBER(12) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISNUMBER(hola) devuelve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNUM"
>ISNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISODD">
<title
>ISODD</title>
<para
>La función ISODD() devuelve Verdadero si el número es impar. En caso contrario devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISODD(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISODD(12) devuelve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISODD(-7) devuelve Verdadero</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISREF">
<title
>ISREF</title>
<para
>La función ISREF() devuelve Verdadero si el parámetro se refiere a una referencia. En caso contrario devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISREF(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISREF(A12) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISREF(«hola») devuelve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTEXT">
<title
>ISTEXT</title>
<para
>La función ISTEXT() devuelve Verdadero si el parámetro es una cadena. En caso contrario devuelve Falso</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISTEXT(12) devuelve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISTEXT(«hola») devuelve Verdadero</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTIME">
<title
>ISTIME</title>
<para
>La función ISTIME() devuelve Verdadero si el parámetro es un valor de hora. En caso contrario devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ISTIME(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISTIME(«12:05») devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ISTIME(«hola») devuelve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="N">
<title
>N</title>
<para
>La función N() convierte un valor en un número. Si el valor es o se refiere a un número, esta función devuelve el número. Si el valor es Verdadero, esta función devuelve 1. Si el valor es una fecha, esta función devuelve el número de serie de esa fecha. Cualquier otra cosa hará que la función devuelva 0.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>N(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>N(3.14) devuelve 3.14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>N(«7») devuelve 0 (porque «7» es texto)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NA">
<title
>NA</title>
<para
>La función NA() devuelve el valor de error constante, N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Error</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NA()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TYPE">
<title
>TYPE</title>
<para
>La función TYPE() devuelve 1 si el valor es un número, 2 si es texto, 4 si el valor es un valor lógico, 16 si es un valor de error o 64 si el valor es un array. Si la celda que representa el valor contiene una fórmula obtiene el tipo que devuelve.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>

<listitem
><para
>TYPE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TYPE(A1) devuelve 2, si A1 contiene «Texto»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TYPE(-7) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TYPE(A2) devuelve 1, si A2 contiene «=CURRENTDATE()»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Logical">
<title
>Lógica</title>

<sect3 id="AND">
<title
>AND</title>
<para
>La función AND() devuelve Verdadero si todos los valores son verdaderos. En caso contrario devuelve Falso (salvo que alguno de los valores sea un error - entonces devuelve un error).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>AND(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AND(verdadero;verdadero;verdadero) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AND(verdadero;falso) devuelve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FALSE">
<title
>FALSE</title>
<para
>La función FALSE() devuelve el valor booleano FALSE.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FALSE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FALSE() devuelve FALSE («falso»)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IF">
<title
>IF</title>
<para
>La función IF() es una función condicional. Esta función devuelve el segundo parámetro si la condición es Verdadera. En caso contrario devuelve el tercer parámetro (que por omisión es Falso).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IF(condición;si_verdadero;si_falso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Condición</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Si es verdadero</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem>
<seglistitem
><seg
>Si es falso</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>A1=4;A2=6;IF(A1
>A2;5;3) devuelve 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFERROR">
<title
>IFERROR</title>
<para
>Devuelve X a menos de que sea un error, en cuyo caso devuelve un valor alternativo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IFERROR(CualquierX;CualquierAlternativa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier X</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem>
<seglistitem
><seg
>Cualquier alternativa</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IFERROR(A1;A2) devuelve el contenido de A1 si dicho contenido no es un valor error, sino devuelve el contenido de A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFNA">
<title
>IFNA</title>
<para
>Devuelve X a menos de que este sea un valor NA, en cuyo caso devuelve un valor alternativo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>IFNA(CualquierX;CualquierAlternativa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cualquier X</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem>
<seglistitem
><seg
>Cualquier alternativa</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>IFNA(A1;A2) devuelve el contenido de A1 si dicho contenido no es un valor error #N/A, sino devuelve el contenido de A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NAND">
<title
>NAND</title>
<para
>La función NAND() devuelve Verdadero si al menos un valor no es verdadero. En caso contrario devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NAND(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NAND(verdadero;falso;falso) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NAND(verdadero;verdadero) devuelve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOR">
<title
>NOR</title>
<para
>La función NOR() devuelve Verdadero si todos los valores dados como parámetros son de tipo booleano y tienen el valor Falso. En caso contrario devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NOR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NOR(verdadero;falso;falso) devuelve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NOR(falso;falso) devuelve Verdadero</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOT">
<title
>NOT</title>
<para
>La función NOT() devuelve Verdadero si el valor es Falso y devuelve Falso si el valor es Verdadero. Devuelve un error si la entrada es un error.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NOT(bool)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor booleano</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NOT(falso) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NOT(verdadero) devuelve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OR">
<title
>OR</title>
<para
>La función OR() devuelve Verdadero si al menos uno de los valores es verdadero. En caso contrario devuelve Falso (salvo que alguno de los valores sea un error, en cuyo caso devuelve un error).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>OR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>OR(falso;falso;falso) devuelve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>OR(verdadero;falso) devuelve Verdadero</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUE">
<title
>TRUE</title>
<para
>La función TRUE() devuelve el valor booleano TRUE.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TRUE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TRUE() devuelve TRUE («verdadero»)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XOR">
<title
>XOR</title>
<para
>La función XOR() devuelve Falso si el número de valores Verdadero es par. En caso contrario devuelve Verdadero. Devuelve un error si algún argumento es un error.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>XOR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Un intervalo de valores lógicos (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>XOR(falso;falso;falso) devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>XOR(verdadero;falso) devuelve Verdadero</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Lookup---Reference">
<title
>Búsqueda &amp; referencia</title>

<sect3 id="ADDRESS">
<title
>ADDRESS</title>
<para
>La función ADDRESS crea una dirección de celda. El parámetro fila es el número de fila, y columna es el número de columna.</para>
<para
>El número absoluto indica el tipo de referencia: 1 u omitido = Absoluto, 2 = Fila absoluta, columna relativa, 3 = Fila relativa; columna absoluta, y 4 = Relativa.</para>
<para
>El estilo A1 indica el estilo de la dirección a devolver. Si A1 es TRUE (por omisión) la dirección se devuelve en estilo A1, y si es FALSE se devuelve en estilo R1C1.</para>
<para
>El nombre de la hoja es el texto que indica el nombre de la hoja.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ADDRESS(fila; columna; absoluto; estilo; nombre de la hoja)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de fila</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de columna</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número absoluto (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Estilo de A1 (opcional)</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de la hoja</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ADDRESS(6; 4) devuelve $D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ADDRESS(6; 4; 2) devuelve D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ADDRESS(6; 4; 2; FALSE; «Hoja1») devuelve Hoja1!R6C[4]</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ADDRESS(6; 4; 1; FALSE; «Hoja1») devuelve Hoja1!R6C4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ADDRESS(6; 4; 4; TRUE; «Hoja1») devuelve Hoja1!D6</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AREAS">
<title
>AREAS</title>
<para
>Devuelve el número de áreas en la cadena de referencia. Un área puede ser una única celda o un conjunto de celdas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>AREAS(referencia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AREAS(A1) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AREAS((A1; A2:A4)) devuelve 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CELL">
<title
>CELL</title>
<para
>Devuelve información sobre la posición, el formato o el contenido de una referencia.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CELL(tipo; referencia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Referencia</seg
><seg
>Referencia</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CELL("COL", C7) devuelve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CELL("ROW", C7) devuelve 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CELL("ADDRESS", C7) devuelve $C$7</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHOOSE">
<title
>CHOOSE</title>
<para
>Devuelve el parámetro indicado por el índice.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CHOOSE(índice; parámetro1; parámetro2;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Índice</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Argumentos</seg
><seg
></seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CHOOSE(1; «1º»; «2º») returns «1º»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CHOOSE(2; 3; 2; 4) devuelve 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMN">
<title
>COLUMN</title>
<para
>La función COLUMN devuelve la columna de la referencia de la celda dada. Si no se indica ningún parámetro se devuelve la columna de la celda actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COLUMN(referencia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COLUMN(A1) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COLUMN(D2) devuelve 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMNS">
<title
>COLUMNS</title>
<para
>La función COLUMNS devuelve el número de columnas de una referencia.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COLUMNS(referencia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COLUMNS(A1:C3) devuelve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COLUMNS(D2) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HLOOKUP">
<title
>HLOOKUP</title>
<para
>Buscar un valor que coincida en la primera fila de la tabla dada, y devuelve el valor de la fila indicada.</para>
<para
>Busca el «valor de búsqueda» en la primera fila de la «fuente de datos». Si un valor coincide, se devuelve el valor de la «fila» y columna en que se encontró. Si «ordenado» es verdadero (por omisión), se supone que la primera fila está ordenada. La búsqueda finalizará si el «valor de búsqueda» es menor que el valor con el que se esté comparando en ese momento.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>String/Numérico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>HLOOKUP(Valor de búsqueda; fuente de datos; Fila; Ordenado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de búsqueda</seg
><seg
>String/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Fuente de datos</seg
><seg
>Array</seg
></seglistitem>
<seglistitem
><seg
>Fila</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Ordenado (opcional)</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDEX">
<title
>INDEX</title>
<para
>Si se indica un intervalo, devuelve el valor almacenado en una fila/columna dada. Si se indica una celda que contiene un array, se devuelve un elemento del array.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>INDEX(celda, fila, columna)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Fila</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Columna</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INDEX(A1:C3;2;2), devuelve el contenido de B2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INDEX(A1;2;2), si A1 es el resultado del cálculo de un array, devuelve su elemento (2,2).</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDIRECT">
<title
>INDIRECT</title>
<para
>Devuelve el contenido de la celda indicada por el texto de referencia. El segundo parámetro es opcional.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>INDIRECT(textoReferencia, estilo a1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Estilo de A1 (opcional)</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INDIRECT(A1), A1 contiene «B1», y B1 1 =
> devuelve 1</para
></listitem>

</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INDIRECT(«A1»), devuelve el contenido de A1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOOKUP">
<title
>LOOKUP</title>
<para
>La función LOOKUP busca el primer parámetro en el vector de búsqueda. Devuelve un valor en el vector resultado con el mismo índice que el valor correspondiente en el vector de búsqueda. Si el valor no aparece en el vector resultado toma el siguiente más bajo. Si ningún valor del vector de búsqueda coincide, se devuelve un error. El vector de búsqueda debe estar en orden ascendiente, y los vectores de búsqueda y resultado deben tener el mismo tamaño. Se reconocen los valores numéricos, las cadenas y los booleanos. La comparación entre cadenas diferencia entre mayúsculas y minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LOOKUP(valor; vector de búsqueda; vector resultado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de búsqueda</seg
><seg
>String/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Vector de búsqueda</seg
><seg
>String/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Vector resultado</seg
><seg
>String/Numérico</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOOKUP(1.232; A1:A6; B1:B6) para A1 = 1, A2 = 2 devuelve el valor de B1.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MATCH">
<title
>MATCH</title>
<para
>Encuentra un valor buscado dentro de una región de búsqueda, y devuelve su posición (comenzando desde 1). El tipo de concordancia puede ser -1, 0 o 1 y determina como se busca el valor. Si el tipo de concordancia es 0, se devuelve el índice del primer valor que sea igual que el valor buscado. Si el tipo de concordancia es 1 (o se omite), se devuelve el índice del primer valor que es menor o igual que el valor buscado y los valores de la región de búsqueda deben estar ordenados en orden ascendente. Si el tipo de concordancia es -1, se encuentra el valor más pequeño que sea mayor o igual que el valor buscado, y la región de búsqueda necesita estar ordenada en orden descendente.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MATCH(valor buscado; región de búsqueda; tipo de concordancia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor a buscar</seg
><seg
>String/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Región de búsqueda</seg
><seg
>Referencia/Array</seg
></seglistitem>
<seglistitem
><seg
>Tipo de concordancia (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLE.OPERATIONS">
<title
>MULTIPLE.OPERATIONS</title>
<para
>MULTIPLE.OPERATIONS ejecuta la expresión de la fórmula a la que apunta la celda de la fórmula y todas las expresiones de la formula de las que depende al reemplazar todas las referencias a la fila de la celda por referencias al reemplazo de la fila, y respectivamente todas las referencias a la celda de la columna por referencias al reemplazo de la columna. La función se puede usar para crear fácilmente tablas de expresiones que dependan de dos parámetros de entrada.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>String/Numérico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MULTIPLE.OPERATIONS(Celda de la fórmula; Celda de la fila; Reemplazo de la fila; Celda de la columna; Reemplazo de la columna)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Celda de la fórmula</seg
><seg
>Referencia</seg
></seglistitem>
<seglistitem
><seg
>Celda de la fila</seg
><seg
>Referencia</seg
></seglistitem>
<seglistitem
><seg
>Sustitución de la fila</seg
><seg
>Referencia</seg
></seglistitem>
<seglistitem
><seg
>Celda de la columna (opcional)</seg
><seg
>Referencia</seg
></seglistitem>
<seglistitem
><seg
>Reemplazo de la columna (opcional)</seg
><seg
>Referencia</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OFFSET">
<title
>OFFSET</title>
<para
>Modifica la posición y la dimensión de una referencia.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Referencia</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>OFFSET(Reference referencia; Integer desplazamientoFila; Integer desplazamientoColum; Integer nuevaAltura; Integer nuevaAnchura)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia o intervalo</seg
><seg
>Referencia</seg
></seglistitem>
<seglistitem
><seg
>Número de filas a desplazar</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de columnas a desplazar</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Altura del intervalo de desplazamiento (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anchura del intervalo de desplazamiento (opcional)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROW">
<title
>ROW</title>
<para
>La función ROW devuelve la fila de la referencia de la celda indicada. Si no se indica ningún parámetro se devuelve la fila de la celda actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ROW(referencia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROW(A1) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROW(D2) devuelve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROWS">
<title
>ROWS</title>
<para
>La función ROWS devuelve el número de filas de una referencia.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ROWS(referencia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROWS(A1:C3) devuelve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROWS(D2) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEET">
<title
>SHEET</title>
<para
>Devuelve el número de hoja de la referencia o el string que representa un nombre de hoja.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SHEET(referencia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Referencia</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SHEET(Hoja1!C7) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SHEET(Hoja2!C7) devuelve 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEETS">
<title
>SHEETS</title>
<para
>Devuelve el número de hojas que hay en una referencia o en el documento actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SHEETS(referencia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referencia</seg
><seg
>Referencia</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VLOOKUP">
<title
>VLOOKUP</title>
<para
>Buscar un valor que coincida en la primera columna de la tabla dada, y devolver el valor de la columna indicada.</para>
<para
>Busca el «valor de búsqueda» en la primera columna de la «fuente de datos». Si un valor coincide, se devuelve el valor de la «columna» y fila en que se encontró. Si «ordenado» es verdadero (por omisión), se supone que la primera columna está ordenada. La búsqueda finalizará si el «valor de búsqueda» es menor que el valor con el que se esté comparando en ese momento.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>String/Numérico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>VLOOKUP(Valor de búsqueda; fuente de datos; Columna; Ordenado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de búsqueda</seg
><seg
>String/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Fuente de datos</seg
><seg
>Array</seg
></seglistitem>
<seglistitem
><seg
>Columna</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Ordenado (opcional)</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Math">
<title
>Matemáticas</title>

<sect3 id="ABS">
<title
>ABS</title>
<para
>La función ABS() devuelve el valor absoluto del número de coma flotante x.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ABS(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ABS(12.5) es igual a 12.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ABS(-12.5) es igual a 12.5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEIL">
<title
>CEIL</title>
<para
>La función CEIL() redondea x hasta el entero más próximo que sea mayor que la entrada, devolviendo ese valor como un valor de doble precisión.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un entero (como 0, -5, 14)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CEIL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CEIL(12.5) es igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CEIL(-12.5) es igual a -12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEILING">
<title
>CEILING</title>
<para
>La función CEILING() redondea x por exceso (alejándose de cero) al múltiplo de significancia más cercano que sea mayor al de la entrada. El valor predeterminado de significancia es 1 (o -1 si el valor es negativo), lo que significa redondear por exceso al entero más próximo. Si el parámetro «modo» es distinto de cero, la función redondea alejándose de cero, en lugar de hacia el infinito positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un entero (como 0, -5, 14)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CEILING(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Significancia (opcional)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Modo (opcional)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CEILING(12.5) es igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CEILING(6.43; 4) es igual a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CEILING(-6.43; -4; 1) es igual a -8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CEILING(-6.43; -4; 0) es igual a -4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNT">
<title
>COUNT</title>
<para
>Esta función devuelve el número de argumentos enteros o en coma flotante pasados. Puede contar usando un intervalo: COUNT(A1:B5) o usando una lista de valores como COUNT(12;5;12.5).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COUNT(valor;valor;valor...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COUNT(-5;«KSpread»;2) devuelve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COUNT(5) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTA">
<title
>COUNTA</title>
<para
>Esta función devuelve el número de argumentos no vacíos pasados. Puede contar usando un intervalo: COUNTA(A1:B5) o usando una lista de valores como COUNTA(12;5;12.5).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COUNTA(valor;valor;valor...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COUNTA(-5;«KSpread»;2) devuelve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COUNTA(5) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTBLANK">
<title
>COUNTBLANK</title>
<para
>Esta función devuelve el número de celdas vacías que hay en el intervalo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COUNTBLANK(intervalo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de celdas</seg
><seg
>Intervalo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COUNTBLANK(A1:B5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTIF">
<title
>COUNTIF</title>
<para
>La función COUNTIF() devuelve el número de celdas que cumplan un criterio dado que hay en el intervalo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COUNTIF(intervalo;criterio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Criterio</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COUNTIF(A2:A3;«14») devuelve 1 si A2 es -4 y A3 es 14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUR">
<title
>CUR</title>
<para
>La función CUR() devuelve la raíz cúbica no negativa de x.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CUR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CUR(27) es igual a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DIV">
<title
>DIV</title>
<para
>La función DIV() divide el primer valor por los otros valores sucesivamente.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DIV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DIV(20;2;2) devuelve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DIV(25;2.5) devuelve 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="MOD"
>MOD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EPS">
<title
>EPS</title>
<para
>EPS() devuelve el épsilon de la máquina; esto es la diferencia entre 1 y el siguiente número en como flotante más próximo. Como las computadoras tienen un número finito de dígitos, el error de redondeo es inherente (aunque normalmente insignificante) a todos los cálculos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EPS()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>En la mayoría de los sistemas, esto devuelve 2^-52=2.2204460492503131e-16</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>0.5*EPS() devuelve el «redondeo de las unidades»; es valor es interesante porque es el mayor número x tal que (1+x)-1=0 (debido a los errores de redondeo).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EPS() es tan pequeño que &sheets; muestra 1+eps() como 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>Escoja un número entre 0 y EPS(). Observe que 1+x redondea x a 0 o a EPS() al usar la ecuación (1+x)-1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EVEN">
<title
>EVEN</title>
<para
>La función EVEN() devuelve el número redondeado por exceso al número par más cercano.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EVEN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>

<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EVEN(1.2) devuelve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EVEN(2) devuelve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ODD"
>ODD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXP">
<title
>EXP</title>
<para
>La función EXP() devuelve el valor de e (la base de los logaritmos naturales) elevado a la potencia de x.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EXP(9) es igual a 8 103.08392758</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EXP(-9) es igual a 0.00012341</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACT">
<title
>FACT</title>
<para
>La función FACT() calcula el factorial del parámetro. La expresión matemática es (valor)!.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FACT(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FACT(10) devuelve 3628800</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FACT(0) devuelve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACTDOUBLE">
<title
>FACTDOUBLE</title>
<para
>La función FACTDOUBLE() calcula el doble factorial de un número, es decir, x!!.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FACTDOUBLE(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FACTDOUBLE(6) devuelve 48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FACTDOUBLE(7) devuelve 105</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIB">
<title
>FIB</title>
<para
>La función FIB calcula el término n-ésimo de una sucesión de Fibonacci (1, 1, 2, 3, 5, 8, 13, 21...), en la que cada número, después de los dos primeros, es la suma de los dos números precedentes. FIB(0) es 0 por definición.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FIB(n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Término n-ésimo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FIB(9) devuelve 34</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FIB(26) devuelve 121393</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FLOOR">
<title
>FLOOR</title>
<para
>Redondea un número x por defecto al múltiplo más cercano del segundo parámetro, Significancia.</para>
<para
>La función FLOOR() redondea x por defecto (hacia cero) al múltiplo de significancia más cercano que sea menor que la entrada. El valor predeterminado de la significancia es 1, si x es positivo. Y es -1 si el valor es negativo, lo que significa redondear al entero más próximo. Si se indica el modo y no es igual a cero, la cantidad de x se redondea hacia cero a un múltiplo de significancia, y a continuación se aplica el signo. En caso contrario, se redondea hacia menos infinito. Si alguno de los dos parámetros, x o la significancia es cero, el resultado es cero.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un entero (como 0, -5, 14)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FLOOR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Significancia (opcional)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Modo (opcional)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FLOOR(12.5) es igual a 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FLOOR(-12.5) es igual a -13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FLOOR(5; 2) es igual a 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FLOOR(5; 2.2) es igual a 4.4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMA">
<title
>GAMMA</title>
<para
>La función GAMMA() devuelve el valor de la función gamma.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>GAMMA(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GAMMA(1) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FACT"
>FACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GCD">
<title
>GCD</title>
<para
>La función GCD() devuelve el máximo común divisor de dos o más valores enteros.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>GCD(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer número</seg
><seg
>Un intervalo de números enteros (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Un intervalo de números enteros (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Tercer número</seg
><seg
>Un intervalo de números enteros (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GCD(6;4) devuelve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GCD(10;20) devuelve 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GCD(20;15;10) devuelve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LCM"
>LCM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="G_PRODUCT">
<title
>G_PRODUCT</title>
<para
>La función G_PRODUCT() es la misma que KPRODUCT. Se proporciona por compatibilidad con Gnumeric.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>G_PRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT">
<title
>INT</title>
<para
>La función INT() devuelve la parte entera del valor.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>INT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INT(12.55) es igual a 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INT(15) es igual a 15</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="QUOTIENT"
>QUOTIENT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INV">
<title
>INV</title>
<para
>Esta función multiplica cada valor por -1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>INV(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INV(-5) es igual a 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INV(5) es igual a -5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INV(0) es igual a 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KPRODUCT">
<title
>KPRODUCT</title>
<para
>La función KPRODUCT() calcula el producto de todos los valores dados como parámetros. Puede calcular el producto de un intervalo: KPRODUCT(A1:B5) o una lista de valores, como KPRODUCT(12;5;12.5). Si no se encuentra ningún valor numérico se devuelve 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>KPRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>KPRODUCT(3;5;7) es igual a 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>KPRODUCT(12.5;2) es igual a 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="G_PRODUCT"
>G_PRODUCT</link
>&nbsp;</member>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LCM">
<title
>LCM</title>
<para
>La función LCM() devuelve el mínimo común múltiplo de dos más valores en coma flotante</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LCM(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primer número</seg
><seg
>FLOAT</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LCM(6;4) devuelve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LCM(1.5;2.25) devuelve 4.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LCM(2;3;4) devuelve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="GCD"
>GCD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LN">
<title
>LN</title>
<para
>La función LN() devuelve el logaritmo natural de x.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LN(0.8) es igual a -0.22314355</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LN(0) es igual a -inf</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG">
<title
>LOG</title>
<para
>La función LOG() devuelve el logaritmo en base 10 de x.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LOG(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante mayor que cero</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOG(0.8) es igual a -0.09691001</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOG(0) es un error.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG10">
<title
>LOG10</title>
<para
>La función LOG10() devuelve el logaritmo en base 10 del argumento.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LOG10(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante positivo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOG10(10) es igual a 1.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOG10(0) es un error.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG2">
<title
>LOG2</title>
<para
>La función LOG2() devuelve el logaritmo en base 2 de x.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LOG2(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOG2(0.8) es igual a -0.32192809</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOG2(0) es igual a -inf.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGN">
<title
>LOGN</title>
<para
>La función LOGn() devuelve el logaritmo en base n de x.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LOGn(valor;base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOGn(12;10) es igual a 1.07918125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOGn(12;2) es igual a 3.5849625</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAX">
<title
>MAX</title>
<para
>La función MAX() devuelve el mayor valor dado en los parámetros. Las cadenas de texto y los valores lógicos son ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MAX(valor;valor;...)</para
></listitem>
</varlistentry>

<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MAX(12;5; 7) devuelve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MAX(12.5; 2) devuelve 12.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MAX(0.5; 0.4; TRUE; 0.2) devuelve 0.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAXA">
<title
>MAXA</title>
<para
>La función MAXA() devuelve el mayor valor dado en los parámetros. TRUE se evalúa como 1, y FALSE como 0. Las cadenas de texto son ignoradas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MAXA(valor; valor; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MAXA(12;5; 7) devuelve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MAXA(12.5; 2) devuelve 12.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MAXA(0.5; 0.4; TRUE; 0.2) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDETERM">
<title
>MDETERM</title>
<para
>La función MDETERM devuelve el determinante de una matriz dada. La matriz debe ser de tipo n x n.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MDETERM(matriz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MDETERM(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MMULT"
>MMULT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIN">
<title
>MIN</title>
<para
>La función MIN() devuelve el menos valor dado en los parámetros. Las cadenas de texto y los valores lógicos son ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MIN(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MIN(12;5; 7) devuelve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MIN(12.5; 2) devuelve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MIN(0.4; 2; FALSE; 0.7) devuelve 0.4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINA">
<title
>MINA</title>
<para
>La función MINA() devuelve el menos valor dado en los parámetros. TRUE se evalúa como 1, y FALSE como 0. Las cadenas de texto son ignoradas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MINA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MINA(12;5; 7) devuelve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MINA(12.5; 2) devuelve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MINA(0.4; 2; FALSE; 0.7) devuelve 0.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINVERSE">
<title
>MINVERSE</title>
<para
>Calcula la inversa de la matriz.</para>
<para
>La matriz multiplicada por su inversa resulta en una matriz identidad de la misma dimensión.</para>
<para
>Las matrices invertibles tienen un determinante no nulo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MINVERSE(matriz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Matriz</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MINVERSE(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
<member
><link linkend="MUNIT"
>MUNIT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MMULT">
<title
>MMULT</title>
<para
>La función MMULT multiplica dos matrices. El número de columnas de la primera matriz debe ser el mismo que el número de columnas de la segunda. El resultado es una matriz.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MMULT(matriz1;matriz2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primera matriz</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Segunda matriz</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MMULT(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MOD">
<title
>MOD</title>
<para
>La función MOD() devuelve el resto de la división. Si el segundo parámetro es uno, la función devuelve #DIV/0.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MOD(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MOD(12;5) devuelve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MOD(5;5) devuelve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MROUND">
<title
>MROUND</title>
<para
>La función MROUND() devuelve el valor redondeado al múltiplo indicado. El valor y el múltiplo deben tener el mismo signo</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MROUND(valor; múltiplo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Múltiplo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MROUND(1.252; 0.5) es igual a 1.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MROUND(-1.252; -0.5) es igual a -1.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTINOMIAL">
<title
>MULTINOMIAL</title>
<para
>La función MULTINOMIAL() devuelve el multinomial de cada número de los parámetros. Usa esta fórmula para MULTINOMIAL(a,b,c):</para>
<para
>(a+b+c)! / a!b!c!</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MULTINOMIAL(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MULTINOMIAL(3;4;5) es igual a 27720</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLY">
<title
>MULTIPLY</title>
<para
>La función MULTIPLY() multiplica todos los valores dados en los parámetros. Puede multiplicar valores dados por un intervalo MULTIPLY(A1:B5) o una lista de valores, como MULTIPLY(12;5;12.5). Es equivalente a PRODUCT.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MULTIPLY(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MULTIPLY(12;5;7) es igual a 420</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MULTIPLY(12.5;2) es igual a 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MUNIT">
<title
>MUNIT</title>
<para
>Crea la matriz identidad de la dimensión dada.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MUNIT(dimensión)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dimensión</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MUNIT(3) crea una matriz identidad de 3x3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MINVERSE"
>MINVERSE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODD">
<title
>ODD</title>
<para
>La función ODD() devuelve el número redondeado por exceso (o por defecto, para los valores negativos) al entero impar más próximo. Por definición, ODD(0) es 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ODD(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ODD(1.2) devuelve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ODD(2) devuelve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ODD(-2) devuelve -3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EVEN"
>EVEN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POW">
<title
>POW</title>
<para
>La función POW(x;y) devuelve el valor de x elevado a y. Es lo mismo que POWER.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>POW(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POW(1.2;3.4) es igual a 1.8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POW(2;3) es igual a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POWER"
>POWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POWER">
<title
>POWER</title>
<para
>La función POWER(x;y) devuelve el valor de x elevado a y.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>POWER(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POWER(1.2;3.4) es igual a 1.8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POWER(2;3) es igual a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POW"
>POW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRODUCT">
<title
>PRODUCT</title>
<para
>La función PRODUCT() calcula el producto de todos los valores dados como parámetros. Puede calcular el producto de intervalo: PRODUCT(A1:B5) o de una lista de valores como PRODUCT(12;5;12.5). Si no se encuentra ningún valor numérico se devuelve 0.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PRODUCTO(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PRODUCT(3;5;7) es igual a 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PRODUCT(12.5;2) es igual a 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="QUOTIENT">
<title
>QUOTIENT</title>
<para
>La función QUOTIENT devuelve la parte entera de dividendo/divisor.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>QUOTIENT(dividendo;divisor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dividendo</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Divisor</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>QUOTIENT(21;4) devuelve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="INT"
>INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RAND">
<title
>RAND</title>
<para
>La función RAND() devuelve un número pseudoaleatorio entre 0 y 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RAND()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RAND() es igual por ejemplo a 0.78309922...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RANDBETWEEN"
>RANDBETWEEN</link
>&nbsp;</member>
<member
><link linkend="RANDEXP"
>RANDEXP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBERNOULLI">
<title
>RANDBERNOULLI</title>
<para
>La función RANDBEROUILLI() devuelve un número pseudoaleatorio con una distribución de Bernouilli.</para>

<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RANDBERNOULLI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (entre 0 y 1)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RANDBERNOULLI(0.45)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBETWEEN">
<title
>RANDBETWEEN</title>
<para
>La función RANDBETWEEN() devuelve un número pseudoaleatorio entre los valores mínimo y máximo. Si mínimo 
> máximo la función devuelve un error.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RANDBETWEEN(mínimo;máximo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor mínimo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valor máximo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RANDBETWEEN(12;78) puede ser igual por ejemplo a 61.0811...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBINOM">
<title
>RANDBINOM</title>
<para
>La función RANDBINOM() devuelve un número pseudoaleatorio con una distribución binomial.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RANDBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (entre 0 y 1)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Intentos (mayor de 0)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RANDBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDNEGBINOM"
>RANDNEGBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDEXP">
<title
>RANDEXP</title>
<para
>La función RANDEXP() devuelve un número pseudoaleatorio distribuido exponencialmente.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RANDEXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor en coma flotante (mayor de 0)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RANDEXP(0.88)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNEGBINOM">
<title
>RANDNEGBINOM</title>
<para
>La función RANDNEGBINOM() devuelve un número pseudoaleatorio con una distribución binomial negativa.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RANDNEGBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (entre 0 y 1)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fallos (mayor de 0)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RANDNEGBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDBINOM"
>RANDBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNORM">
<title
>RANDNORM</title>
<para
>La función RANDNORM() devuelve un número pseudoaleatorio con una distribución normal (gaussiana).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RANDNORM(mu; sigma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor medio de la distribución normal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Dispersión de la distribución normal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RANDNORM(0; 1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDPOISSON">
<title
>RANDPOISSON</title>
<para
>La función RANDPOISSON() devuelve un número pseudoaleatorio con una distribución de Poisson.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RANDPOISSON(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor en coma flotante (mayor de 0)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RANDPOISSON(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROOTN">
<title
>ROOTN</title>
<para
>La función ROOTN() devuelve la n-ésima raíz no negativa de x.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ROOTN(x;n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROOTN(9;2) es igual a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUND">
<title
>ROUND</title>
<para
>La función ROUND(valor;[dígitos]) devuelve el valor redondeado. Dígitos es el número de dígitos a los que quiere redondear ese número. Si dígitos es cero o se omite, el valor se redondea al entero más cercano. Si dígitos es menor que cero, se redondea la parte entera correspondiente del número.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ROUND(valor;[dígitos])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Dígitos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUND(1.252;2) es igual a 1.25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUND(-1.252;2) es igual a -1.25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUND(1.258;2) es igual a 1.26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUND(-12.25;-1) es igual a -10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUND(-1.252;0) es igual a -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MROUND"
>MROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDDOWN">
<title
>ROUNDDOWN</title>
<para
>La función ROUNDDOWN(valor;[dígitos]) devuelve el valor redondeado de modo que su valor absoluto sea menor. Dígitos es el número de dígitos a los que quiere redondear ese número. Si dígitos es cero o se omite, el valor se redondea por defecto al entero más próximo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ROUNDDOWN(valor;[dígitos])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Dígitos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUNDDOWN(1.252) es igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUNDDOWN(1.252;2) es igual a 1.25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUNDDOWN(-1.252;2) es igual a -1.25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUNDDOWN(-1.252) es igual a -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDUP">
<title
>ROUNDUP</title>
<para
>La función ROUNDUP(valor;[dígitos]) devuelve el valor redondeado de modo que su valor absoluto sea mayor.Dígitos es el número de dígitos a los que quiere redondear ese número. Si dígitos es cero o se omite, el valor se redondea por exceso al entero más próximo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ROUNDUP(valor;[dígitos])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Dígitos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUNDUP(1.252) es igual a 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUNDUP(1.252;2) es igual a 1.26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUNDUP(-1.252;2) es igual a -1.26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROUNDUP(-1.252) es igual a -2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SERIESSUM">
<title
>SERIESSUM</title>
<para
>La función SERIESSUM() devuelve la suma de una serie de potencias.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SERIESSUM( X; N; M; Coeficientes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>X la variable independiente de la serie de potencias</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>N la potencia inicial a la que se elevará X</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>M el incremento en que aumentar N para cada término de la serie</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Coeficentes un conjunto de coeficientes por los que se multiplica cada potencia sucesiva de la variable X</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SERIESSUM(2;0;2;{1;2}) devuelve 9</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIGN">
<title
>SIGN</title>
<para
>Esta función devuelve -1 si el número es negativo, 0 si el número es nulo y 1 si el número es positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SIGN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SIGN(5) es igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SIGN(0) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SIGN(-5) es igual -1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRT">
<title
>SQRT</title>
<para
>La función SQRT() devuelve la raíz cuadrada no negativa del argumento. Es un error si el argumento es negativo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SQRT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SQRT(9) es igual a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SQRT(-9) es un error</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IMSQRT"
>IMSQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRTPI">
<title
>SQRTPI</title>
<para
>La función SQRTPI() devuelve la raíz cuadrada no negativa de x * PI. Es un error si el argumento es negativo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SQRTPI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SQRTPI(2) es igual a 2.506628</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBTOTAL">
<title
>SUBTOTAL</title>
<para
>La función SUBTOTAL() devuelve un subtotal de una lista dada de argumentos ignorando otros resultados subtotales que haya. La función puede ser uno de los siguientes números: 1- Media, 2 - Conteo, 3 - ConteoA, 4 - Máximo, 5 - Mínimo, 6 - Producto, 7 - Desviación estándar, 8 - Desviación estándar para la población, 9 - Suma, 10 - Varianza, 11 - Varianza de la población</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUBTOTAL(función; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Función</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>Si A1:A5 contiene 7, 24, 23, 56 y 9:</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUBTOTAL(1; A1:A5) devuelve 23.8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUBTOTAL(4; A1:A5) devuelve 56</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUBTOTAL(9; A1:A5) devuelve 119</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUBTOTAL(11; A1:A5) devuelve 307.76</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="AVERAGE"
>AVERAGE</link
>&nbsp;</member>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM">
<title
>SUM</title>
<para
>La función SUM() calcula la suma de todos los valores dados como parámetros. Puede calcular la suma de un intervalo SUM(A1:B5) o una lista de valores como SUM(12;5;12.5).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUM(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUM(12;5;7) es igual a 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUM(12.5;2) es igual a 14.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUMA"
>SUMA</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMA">
<title
>SUMA</title>
<para
>La función SUMA() calcula la suma de todos los valores dados como parámetros. Puede calcular la suma de un intervalo SUMA(A1.B5) o una lista de valores como SUMA(12;5;12.5). Si un parámetro contiene texto o el valor booleano Falso se cuenta como 0, si un parámetro se evalúa como Verdadero se cuenta como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUM(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMA(12;5; 7) es igual a 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMA(12.5; 2; TRUE) es igual a 15.5</para
></listitem>
</varlistentry>

<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMIF">
<title
>SUMIF</title>
<para
>La función SUMIF() calcula la suma de todos los valores dados como parámetros que cumplan el criterio. El intervalo de suma es opcional. Si no se proporciona, se suman los valores del intervalo de comprobación. La longitud del intervalo de comprobación debería ser igual o menor que la longitud del intervalo de suma.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUMIF(intervalo de comprobación; criterio; intervalo de suma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Comprobar el intervalo</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Criterio</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Sumar el intervalo</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMIF(A1:A4;«
>1») suma todos los valores del intervalo A1:A4 que sean mayores que 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMIF(A1:A4;«=0»;B1:B4) suma todos los valores del intervalo B1:B4 si el valor correspondiente en A1:A4 es 0.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMSQ">
<title
>SUMSQ</title>
<para
>La función SUMSQ() calcula la suma de todos los cuadrados de los valores dados como parámetros. Puede calcular la suma de un intervalo SUMSQ(A1:B5) o una lista de valores, como SUMSQ(12;5;12.5).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUMSQ(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMSQ(12;5;7) es igual a 218</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMSQ(12.5;2) es igual a 173</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRANSPOSE">
<title
>TRANSPOSE</title>
<para
>Devuelve la traspuesta de la matriz, es decir, se intercambian las filas y las columnas de la matriz.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TRANSPOSE(matriz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Matriz</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TRANSPOSE(A1:C3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUNC">
<title
>TRUNC</title>
<para
>La función TRUNC() trunca un valor numérico a una cierta precisión. Si se omite la precisión, se supone que es 0.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TRUNC(valor; precisión)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de coma flotante</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Precisión</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TRUNC(1.2) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TRUNC(213.232; 2) devuelve 213.23</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Statistical">
<title
>Estadística</title>

<sect3 id="AVEDEV">
<title
>AVEDEV</title>
<para
>La función AVEDEV() calcula la media de las desviaciones absolutas de un conjunto de datos de su media.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>AVEDEV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AVEDEV(11.4;17.3;21.3;25.9;40.1) devuelve 7.84</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AVEDEV(A1:A5) ...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGE">
<title
>AVERAGE</title>
<para
>La función AVERAGE() calcula la media de todos los valores dados como parámetros. Puede calcular la media de un intervalo AVERAGE(A1:B5) o una lista de valores como AVERAGE(12;5;12.5).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>AVERAGE(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AVERAGE(12;5;7) es igual a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AVERAGE(12.5;2) es igual a 7.25</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGEA">
<title
>AVERAGEA</title>
<para
>AVERAGEA() calcula la media de los argumentos indicados. Los números, texto y valores lógicos también se incluyen en el cálculo. Si la celda contiene texto o el argumento es evaluado a Falso, se cuenta como el valor cero (0). Si el argumento es evaluado como Verdadero, se cuenta como uno (1). Observe que las celdas vacías no se cuentan.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>AVERAGEA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores cadena</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>AVERAGEA(11.4;17.3;«un texto»;25.9;40.1) es igual a 18.94</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETADIST">
<title
>BETADIST</title>
<para
>La función BETADIST() devuelve la función de densidad de probabilidad beta acumulada.</para>
<para
>El tercer y el cuarto parámetro son opcionales. Establecen los límites inferior y superior, que en caso contrario toman los valores predeterminados de 0.0 y 1.0 respectivamente.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BETADIST(número;alfa;beta;inicio;fin;[acumulado=TRUE])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro alfa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro beta</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Inicio</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fin</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Acumulado</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BETADIST(0.2859;0.2606;0.8105) es igual a 0.675444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BETADIST(0.2859;0.2606;0.8105;0.2;0.9) es igual a 0.537856</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETAINV">
<title
>BETAINV</title>
<para
>La función BETAINV() devuelve la inversa de BETADIST(x;alfa;beta;a;b;TRUE()).</para>
<para
>Los parámetros inicio y fin son opcionales. Establecer los límites inferior y superior, que en caso contrario toman los valores predeterminados 0.0 y 1.0 respectivamente.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BETAINV(número;alfa;beta [; inicio=0 [; fin=1]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro alfa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro beta</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Inicio</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Fin</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BETADIST(BETAINV(0.1;3;4);3;4) es igual a 0.1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BETADIST(BETAINV(0.3;3;4);3;4) es igual a 0.3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BINO">
<title
>BINO</title>
<para
>La función BINO() devuelve la distribución binomial.</para>
<para
>El primer parámetro es el número de intentos, el segundo parámetro es el número de éxitos, y el tercero es la probabilidad de éxito. El número de intentos debe ser mayor que el número de éxitos, y la probabilidad debe ser menor o igual que 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BINO(intentos;éxitos;probabilidad_de_éxito)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de intentos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de pruebas con éxito</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilidad de éxito</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BINO(12;9;0.8) devuelve 0.236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHIDIST">
<title
>CHIDIST</title>
<para
>La función CHIDIST() devuelve el valor de la probabilidad a partir del Chi cuadrado indicado de que se confirme una hipótesis.</para>
<para
>CHIDIST compara el valor de Chi cuadrado a ser indicado para una muestra aleatoria que es calculado a partir de la suma de (valor observado-valor esperado)^2/valor esperado para todos los valores con la distribución teórica Chi cuadrado y determina a partir de esto la probabilidad de error de la hipótesis a comprobar.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CHIDIST(número; grados de libertad)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Grados de libertad</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CHIDIST(13.27;5) devuelve 0.021</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBIN">
<title
>COMBIN</title>
<para
>La función COMBIN() calcula la suma de todas las combinaciones posibles. El primer parámetro es el número total de elementos. El segundo parámetro es el número de elementos a escoger. Ambos parámetros deben ser positivos y el primer parámetro no debe ser menor que el segundo. En caso contrario la función devuelve un error.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COMBIN(total;elegidos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a elegir</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMBIN(12;5) devuelve 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMBIN(5;5) devuelve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBINA">
<title
>COMBINA</title>
<para
>La función COMBINA() calcula el número de combinaciones posibles. El primer parámetro el el número total de elementos. El segundo parámetro es el número de elementos a escoger. Ambos parámetros deben ser positivos y el primer parámetro no debe ser menor que el segundo. En caso contrario la función devuelve un error.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COMBIN(total;elegidos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a elegir</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMBIN(12;5) devuelve 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMBIN(5;5) devuelve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONFIDENCE">
<title
>CONFIDENCE</title>
<para
>La función CONFIDENCE() devuelve el intervalo de confianza para la media de una población.</para>
<para
>El parámetro alfa debe estar entre 0 y 1 (sin incluirlos), stddev debe ser positivo y el tamaño debe ser mayor o igual a 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CONFIDENCE(alfa;stddev;tamaño)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Nivel del intervalo de confianza</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Desviación estándar para la población total</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Tamaño de la población total</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CONFIDENCE(0.05;1.5;100) es igual a 0.294059</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CORREL">
<title
>CORREL</title>
<para
>La función CORREL() calcula el coeficiente de correlación entre dos intervalos de celdas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CORREL(intervalo1; intervalo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de la celda</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Intervalo de valores de la segunda celda</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CORREL(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PEARSON"
>PEARSON</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COVAR">
<title
>COVAR</title>
<para
>La función COVAR() calcula la covarianza de dos intervalos de celdas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COVAR(intervalo1; intervalo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de la celda</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Intervalo de valores de la segunda celda</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COVAR(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEVSQ">
<title
>DEVSQ</title>
<para
>La función DEVSQ() calcula la suma de los cuadrados de las desviaciones.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DEVSQ(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEVSQ(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEVSQ(21; 33; 54; 23) devuelve 684.75</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXPONDIST">
<title
>EXPONDIST</title>
<para
>La función EXPONDIST() devuelve la distribución exponencial.</para>
<para
>El parámetro lambda debe ser positivo.</para>
<para
>Acumulado = 0 calcula de función de densidad; acumulado = 1 calcula la distribución.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EXPONDIST(número;lambda;acumulado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro lambda</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densidad, 1 = distribución</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EXPONDIST(3;0.5;0) es igual a 0.111565</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EXPONDIST(3;0.5;1) es igual a 0.776870</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FDIST">
<title
>FDIST</title>
<para
>La función FDIST() devuelve la distribución f.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FDIST(número;grados de libertad 1;grados de libertad 2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Grados de libertad 1</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Grados de libertad 2</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FDIST(0.8;8;12) es igual a 0.61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINV">
<title
>FINV</title>
<para
>La función FINV() devuelve el único número no negativo x tal que FDIST(x;r1;r2) = p.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FINV(número; r1; r2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Número r1</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número r2</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FDIST(FINV(0.1;3;4);3;4) es igual a 0.1</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="FISHER">
<title
>FISHER</title>
<para
>La función FISHER() devuelve la transformada de Fisher para x y crea una función cercana a la distribución normal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FISHER(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FISHER(0.2859) es igual a 0.294096</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FISHER(0.8105) es igual a 1.128485</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FISHERINV">
<title
>FISHERINV</title>
<para
>La función FISHERINV() devuelve la inversa de la transformada de Fisher para x y crea una función cercana a la distribución normal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FISHERINV(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FISHERINV(0.2859) es igual a 0.278357</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FISHERINV(0.8105) es igual a 0.669866</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FREQUENCY">
<title
>FREQUENCY</title>
<para
>Cuenta el número de valores para cada intervalo dados por los valores frontera en el segundo parámetro.</para>
<para
>Los valores del segundo parámetro determinan los límites superiores de los intervalos. Los intervalos incluyen los límites superiores. El array devuelto es un vector columna y tiene un elemento más que el segundo parámetro; el último elemento representa el número de todos los elementos mayores que el último valor del segundo parámetro. Si el segundo parámetro está vacío, se cuentan todos los valores del primer parámetro.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FREQUENCY(Datos del intervalo; Grupos del intervalo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores en coma flotante, que se deben contar</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores en coma flotante, que representan los límites superiores de los intervalos.</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMADIST">
<title
>GAMMADIST</title>
<para
>La función GAMMADIST() devuelve la distribución gamma.</para>
<para
>Si el último parámetro (acumulado) es 0, calcula la función densidad; si es 1, se devuelve la distribución.</para>
<para
>Los primeros tres parámetros deben ser positivos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>GAMMADIST(número;alfa;beta;acumulado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro alfa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro beta</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Marca de acumulado</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GAMMADIST(0.758;0.1;0.35;1) es igual a 0.995450</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GAMMADIST(0.758;0.1;0.35;0) es igual a 0.017179</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMAINV">
<title
>GAMMAINV</title>
<para
>La función GAMMAINV() devuelve el número único x 
>= 0 tal que GAMMAINV(x;alfa;beta;TRUE()) = p.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>GAMMAINV(número;alfa;beta)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro alfa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro beta</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0.1;3;4);3;4) es igual a 0.1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0.3;3;4);3;4) es igual a 0.3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMALN">
<title
>GAMMALN</title>
<para
>La función GAMMALN() devuelve el logaritmo natural de la función gamma: G(x). El parámetro número debe ser positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>GAMMALN(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GAMMALN(2) devuelve 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAUSS">
<title
>GAUSS</title>
<para
>La función GAUSS() devuelve el valor integral de la distribución normal estándar acumulada.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>GAUSS(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El número para el que se calculará el valor integral de la distribución normal estándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GAUSS(0.25) es igual a 0.098706</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GEOMEAN">
<title
>GEOMEAN</title>
<para
>La función GEOMEAN() devuelve la media geométrica de los argumentos indicados. Esto es igual a la n-ésima raíz del productos de los términos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>GEOMEAN(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GEOMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>GEOMEAN(21; 33; 54; 23) devuelve 30.45886</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="HARMEAN"
>HARMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HARMEAN">
<title
>HARMEAN</title>
<para
>La función HARMEAN() devuelve la media armónica de los N puntos de datos (N dividido por la suma de las inversas de los puntos de datos)</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>HARMEAN(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HARMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HARMEAN(21; 33; 54; 23) devuelve 28.588</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="GEOMEAN"
>GEOMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HYPGEOMDIST">
<title
>HYPGEOMDIST</title>
<para
>La función HYPGEOMDIST()  devuelve la distribución hipergeométrica.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>HYPGEOMDIST(x; n; M; N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de éxitos en la muestra</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de intentos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número general de éxitos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Tamaño de la población</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>HYPGEOMDIST(2; 5; 6; 20) devuelve 0.3522</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTERCEPT">
<title
>INTERCEPT</title>
<para
>La función INTERCEPT() calcula la intercepción de la línea de regresión lineal con el eje y.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>INTERCEPT(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>valores y (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>valores x (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INVBINO">
<title
>INVBINO</title>
<para
>La función INVBINO() devuelve la distribución binomial negativa. El primer parámetro es el número de intentos, el segundo parámetro es el número de fallos, y el tercero es la probabilidad de fallo. El número de intentos debe ser mayor que el número de fallos, y la probabilidad debe ser menor o igual que 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>INVBINO(intentos;fallos;probabilidad_de_fallo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de intentos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de fallos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilidad de fallo</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>INVBINO(12;3;0.2) devuelve 0.236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURT">
<title
>KURT</title>
<para
>La función KURT() calcula una estimación imparcial de la kurtosis de un conjunto de datos. Tiene que proporcionar al menos 4 valores; en caso contrario se devuelve un error.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>KURT(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>KURT(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>KURT(21; 33; 54; 23) devuelve 1.344239</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="KURTP"
>KURTP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURTP">
<title
>KURTP</title>
<para
>La función KURTP() calcula la kurtosis de la población de un conjunto de datos. Tiene que proporcionar al menos 4 valores, en caso contrario se devuelve un error.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>KURTP(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>KURTP(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>KURTP(21; 33; 54; 23) devuelve -1.021</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="KURT"
>KURT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LARGE">
<title
>LARGE</title>
<para
>La función LARGE() devuelve el k-ésimo mayor valor del conjunto de datos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LARGE(intervalo; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de la celda</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Posición (desde el mayor)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> LARGE(A1:A3; 2) devuelve 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEGACYFDIST">
<title
>LEGACYFDIST</title>
<para
>La función LEGACYFDIST() devuelve la distribución f.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LEGACYFDIST(número;grados de libertad 1;grados de libertad 2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Grados de libertad 1</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Grados de libertad 2</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LEGACYFDIST(0.8;8;12) devuelve 0.61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGINV">
<title
>LOGINV</title>
<para
>La función LOGINV() devuelve la inversa de la distribución logarítmica normal acumulada.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LOGINV(p; media; desviación estándar)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Probabilidad</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>El valor medio de la distribución logarítmica estándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Desviación estándar de la distribución logarítmica estándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOGINV(0.1;0;1) es igual a 0.2776</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGNORMDIST">
<title
>LOGNORMDIST</title>
<para
>La función LOGNORMDIST() devuelve la distribución logarítmica normal acumulada.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LOGNORMDIST(Número;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor de la probabilidad para la que se calculará la distribución logarítmica estándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>El valor medio de la distribución logarítmica estándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Desviación estándar de la distribución logarítmica estándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOGNORMDIST(0.1;0;1) es igual a 0.01</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MEDIAN">
<title
>MEDIAN</title>
<para
>La función MEDIAN() calcula la mediana de todos los valores indicados como parámetros. Puede calcular la mediana de un intervalo como MEDIAN(A1:B5) o una lista de valores como MEDIAN(12; 5; 12.5). Las celdas en blanco se considerarán como s¡ fueran cero, y las celdas con texto serán ignoradas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MEDIAN(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor o intervalo de valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores en coma flotante o intervalo de valores</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores en coma flotante o intervalo de valores</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores en coma flotante o intervalo de valores</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores en coma flotante o intervalo de valores</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MEDIAN(12; 5; 5.5) es igual a 5.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MEDIAN(12; 7; 8;2) es igual a 7.5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MODE">
<title
>MODE</title>
<para
>La función MODE() devuelve el valor más frecuente en el conjunto de datos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MODE(número; número2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MODE(12; 14; 12; 15) devuelve 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NEGBINOMDIST">
<title
>NEGBINOMDIST</title>
<para
>La función NEGBINOMDIST() devuelve la distribución binomial negativa.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NEGBINOMDIST(fallos; éxitos; probabilidad de éxito)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de fallos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de pruebas con éxito</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilidad de éxito</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NEGBINOMDIST(2;5;0.55) devuelve 0.152872629</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMDIST">
<title
>NORMDIST</title>

<para
>La función NORMDIST() devuelve la distribución normal acumulada.</para>
<para
>El número es el valor de la distribución en el que se basará el cálculo de la distribución normal.</para>
<para
>MV es el centro lineal de la distribución.</para>
<para
>STD es la desviación estándar de la distribución.</para>
<para
>K = 0 calcula la función densidad; K = 1 calcula la distribución.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NORMDIST(número;MV;STD;K)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Centro lineal de la distribución</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Desviación estándar de la distribución</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densidad, 1 = distribución</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NORMDIST(0.859;0.6;0.258;0) es igual a 0.934236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NORMDIST(0.859;0.6;0.258;1) es igual a 0.842281</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMINV">
<title
>NORMINV</title>
<para
>La función NORMINV() devuelve la inversa de la distribución normal acumulativa. El número debe estar entre 0 y 1 (no inclusive) y STD debe ser positiva.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NORMINV(número;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El valor de la probabilidad para la que se calculará la distribución logarítmica estándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valor central en la distribución normal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Desviación estándar de la distribución normal</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NORMINV(0.9;63;5) es igual a 69.41</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSDIST">
<title
>NORMSDIST</title>
<para
>La función NORMDIST() devuelve la distribución normal estándar.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NORMSDIST(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor para el que se calcula distribución normal estándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NORMSDIST(1) es igual a 0.84</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSINV">
<title
>NORMSINV</title>
<para
>La función NORMSINV() devuelve la inversa de la distribución normal acumulativa estándar. El número debe estar entre 0 y 1 (no inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>NORMSINV(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>NORMSINV(0.908789) devuelve 1.3333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PEARSON">
<title
>PEARSON</title>
<para
>La función PEARSON() calcula el coeficiente de correlación de dos intervalos de celdas. Es lo mismo que la función CORREL.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PEARSON(intervalo1; intervalo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de la celda</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Intervalo de valores de la segunda celda</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PEARSON(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CORREL"
>CORREL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERCENTILE">
<title
>PERCENTILE</title>
<para
>La función PERCENTILE() devuelve la n-ésima muestra percentil de los valores de los datos en Datos. Un percentil devuelve el valor de escala para una serie de datos que va del menor (alfa=0) al mayor (alfa=1) de una serie de datos. Para alfa=25%, el percentil corresponde al primer cuartil; alfa=50% es la mediana. Las celdas en blancos se consideran cero, y las celdas con texto son ignoradas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PERCENTILE(dato;alfa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>El valor del percentil entre 0 y 1, incluidos.</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MEDIAN"
>MEDIAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUT">
<title
>PERMUT</title>
<para
>La función PERMUT() devuelve el número de permutaciones. El primer parámetro es el número de elementos, y el segundo parámetro es el número de elementos usados en la permutación.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PERMUT(total;permutados)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a permutar</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PERMUT(8;5) es igual a 6720</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PERMUT(1;1) es igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUTATIONA">
<title
>PERMUTATIONA</title>
<para
>La función PERMUTATIONA() devuelve el número de permutaciones ordenadas cuando se permite la repetición. El primer parámetro es el número de elementos, y el segundo parámetro es el número de elementos a elegir. Ambos parámetros deben ser positivos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PERMUTATIONA(total;elegidos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a elegir</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PERMUTATIONA(2,3) devuelve 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PERMUTATIONA(0,0) devuelve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PHI">
<title
>PHI</title>
<para
>La función PHI() devuelve el valor de la función de distribución para una distribución normal estándar.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PHI(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El número para el que se calculará la distribución normal estándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PHI(0.25) es igual a 0.386668</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POISSON">
<title
>POISSON</title>
<para
>La función POISSON() devuelve la distribución de Poisson.</para>
<para
>Los parámetros lambda y número deben ser positivos.</para>
<para
>Acumulado = 0 calcula de función de densidad; acumulado = 1 calcula la distribución.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>POISSON(número;lambda;acumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro lambda (el valor central)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densidad, 1 = distribución</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POISSON(60;50;0) es igual a 0.020105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>POISSON(60;50;1) es igual a 0.927840</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANK">
<title
>RANK</title>
<para
>La función RANK() devuelve la posición de un número de una lista de números.</para>
<para
>El orden indica como clasificar los números:</para>
<para
>Si es 0 o se omite, los datos se clasifican por orden descendente.</para>
<para
>Si no es 0, los datos se clasifican por orden ascendente.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RSQ(Valor; Datos; Orden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Datos (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Orden</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RANK (2;{1;2;3}) es igual a 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RSQ">
<title
>RSQ</title>
<para
>La función RSQ() devuelve el cuadrado del coeficiente de correlación del momento del producto de Pearson, por medio de los puntos de datos en x_conocida e y_conocida.</para>
<para
>Si «arrayX» y «arrayY» están vacíos o tienen un número diferente de puntos de datos, se devuelve #N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RSQ(Y conocida; X conocida)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Y conocida (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>X conocida (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEW">
<title
>SKEW</title>
<para
>La función SKEW() devuelve una estimación de la asimetría de una distribución</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SKEW(número; número2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SKEW(11.4; 17.3; 21.3; 25.9; 40.1) devuelve 0.9768</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SKEWP"
>SKEWP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEWP">
<title
>SKEWP</title>
<para
>La función SKEWP() devuelve la asimetría de la población de una distribución</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SKEWP(número; número2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flotante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SKEWP(11.4; 17.3; 21.3; 25.9; 40.1) devuelve 0.6552</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SKEW"
>SKEW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLOPE">
<title
>SLOPE</title>
<para
>La función SLOPE() calcula la pendiente de la línea de regresión lineal.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>valores y (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>valores x (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SMALL">
<title
>SMALL</title>
<para
>La función SMALL() devuelve el k-ésimo valor más pequeño del conjunto de datos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SMALL(intervalo; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de la celda</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Posición (a partir de la menor)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> SMALL(A1:A3; 1) devuelve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STANDARDIZE">
<title
>STANDARDIZE</title>
<para
>La función STANDARDIZE() calcula un valor normalizado.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>STANDARDIZE(x; media, desviación_estándar)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número a normalizar</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Media de la distribución</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Desviación estándar</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>STANDARDIZE(4; 3; 7) devuelve 0.1429</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEV">
<title
>STDEV</title>
<para
>La función STDEV() devuelve la estimación de la desviación estándar basándose en un muestra. La desviación estándar en una medida de cuán ampliamente están dispersados los valores del valor medio.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>STDEV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>STDEV(6;7;8) es igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVA">
<title
>STDEVA</title>
<para
>La función STDEVA() devuelve la estimación de la desviación estándar basándose en una muestra. La desviación estándar en una medida de cuán ampliamente están dispersados los valores del valor medio. Si una celda referenciada contiene texto o contiene el valor booleano FALSE, se cuenta como 0. Si el valor booleano es TRUE, se cuenta como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>STDEVA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) es igual a 1, si A1 está vacía</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) es igual a 3.109, si A1 es TRUE</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVP">
<title
>STDEVP</title>
<para
>La función STDEVP() devuelve la desviación estándar basándose en la población total</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>STDEVP(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>STDEVP(6;7;8) es igual a 0.816497...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVPA">
<title
>STDEVPA</title>
<para
>La función STDEVPA() devuelve la desviación estándar basándose en la población total. Si una celda referenciada contiene texto o contiene el valor booleano FALSE, se cuenta como 0. Si el valor booleano es TRUE, se cuenta como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>STDEVPA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) es igual a 0.816497..., si A1 está vacía</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) es igual a 2.69..., si A1 es TRUE</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) es igual a 3.11..., si A1 es FALSE</para
></listitem>
</varlistentry>

<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STEYX">
<title
>STEYX</title>
<para
>La función STEYX() calcula el error estándar del valor predicho y para cada x de la regresión.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>valores y (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>valores x (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM2XMY">
<title
>SUM2XMY</title>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMPRODUCT">
<title
>SUMPRODUCT</title>
<para
>La función SUMPRODUCT() (SUM(X*Y)) devuelve la suma del producto de estos valores. Los dos arrays deben tener el mismo número de valores. En caso contrario, esta función devuelve Err.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUMPRODUCT(array1;array2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (array)</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valor (array)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMPRODUCT(A1:A2;B1:B2) con A1=2, A2=5, B1=3 y B2=5, devuelve 31</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2MY2">
<title
>SUMX2MY2</title>
<para
>La función SUMX2MY2() (SUM(X^2-Y^2)) devuelve la diferencia de los cuadrados de estos valores. Los dos arrays deben tener el mismo número de valores. En caso contrario, esta función devuelve Err.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUMX2MY2(array1;array2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (array)</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valor (array)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMX2MY2(A1:A2;B1:B2) con A1=2, A2=5, B1=3 y B2=5, devuelve -5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2PY2">
<title
>SUMX2PY2</title>
<para
>La función SUMX2PY2() (SUM(X^2+Y^2)) devuelve la suma de los cuadrados de estos valores. Los dos arrays deben tener el mismo número de valores. En caso contrario, esta función devuelve Err.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUMX2PY2(array1;array2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (array)</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valor (array)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMX2PY2(A1:A2;B1:B2) con A1=2, A2=5, B1=3 and B2=5, devuelve 63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMXMY2">
<title
>SUMXMY2</title>
<para
>La función SUMXMY2() (SUM((X-Y)^2)) devuelve el cuadrado de las diferencias de estos valores. Los dos arrays deben tener el mismo número de valores. En caso contrario, la función devuelve Err.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUMXMY2(array1;array2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (array)</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valor (array)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUMXMY2(A1:A2;B1:B2) con A1=2, A2=5, B1=3 y B2=5, devuelve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TDIST">
<title
>TDIST</title>
<para
>La función TDIST() devuelve la distribución t.</para>
<para
>Modo = 1 devuelve el test de una cola, Modo = 2 devuelve el test de dos colas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TDIST(número;grados_libertad;modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Grados de libertad de la distribución t</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Modo (1 o 2)</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TDIST(12;5;1) devuelve 0.000035</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TREND">
<title
>TREND</title>
<para
>La función TREND() calcula una secuencia de valores basada en una regresión lineal de parejas de valores conocidas.</para>
<para
>Restricciones: COUNT(Yconocida) = COUNT(Xconocida).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TREND(Yconocida[;Xconocida[;Xnueva[;permitirDesplazamiento = TRUE]]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Yconocida</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Xconocida</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>SecuenciaNúmeros Xnueva</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>permitirDesplazamiento</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIMMEAN">
<title
>TRIMMEAN</title>
<para
>La función TRIMMEAN() calcula la media de una fracción de un conjunto de datos.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TRIMMEAN(conjuntoDatos; fracciónCorte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>conjuntoDatos</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>fracciónCorte</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TTEST">
<title
>TTEST</title>
<para
>La función TTEST() calcula la probabilidad de un test t.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TTEST(x; y; tipo; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>x (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>y (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>modo</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VAR">
<title
>VAR</title>
<para
>La función VAR() calcula la varianza estimada basándose en una muestra.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>VAR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VAR(12;5;7) es igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VAR(15;80;3) es igual a 1716.333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VAR(6;7;8) es igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VARIANCE"
>VARIANCE</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARA">
<title
>VARA</title>
<para
>La función VARA() calcula la varianza basándose en una muestra.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>VARA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARA(12;5;7) es igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARA(15;80;3) es igual a 1716.333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARA(6;7;8) es igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARIANCE">
<title
>VARIANCE</title>
<para
>La función VARIANCE() calcula la varianza estimada basándose en una muestra. Es lo mismo que la función VAR.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>VARIANCE(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARIANCE(12;5;7) es igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARIANCE(15;80;3) es igual a 1716.333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARIANCE(6;7;8) es igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARP">
<title
>VARP</title>
<para
>La función VARP() calcula la varianza basándose en una población completa.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>VARP(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARP(12;5;7) es igual a 8.666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARP(15;80;3) es igual a 1144.22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARP(6;7;8) es igual a 0.6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARPA">
<title
>VARPA</title>
<para
>La función VARPA() calcula la varianza basándose en una población completa. Los valores de texto y booleanos que son evaluados como Falso se cuentan como 0, y los valores booleanos que son evaluados como Verdadero se cuentan como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>VARPA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de coma flotante</seg
><seg
>Un intervalo de valores de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARPA(12;5;7) es igual a 8.666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARPA(15;80;3) es igual a 1144.22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VARPA(6;7;8) es igual a 0.6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEIBULL">
<title
>WEIBULL</title>
<para
>La función WEIBULL() devuelve la distribución de Weibull.</para>
<para
>Los parámetros alfa y beta deben ser positivos, y el número (el primer parámetro) no debe ser negativo.</para>
<para
>Acumulado = 0 calcula de función de densidad; acumulado = 1 calcula la distribución.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>WEIBULL(número;alfa;beta;acumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro alfa</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Parámetro beta</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densidad, 1 = distribución</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>WEIBULL(2;1;1;0) es igual a 0.135335</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>WEIBULL(2;1;1;1) es igual a 0.864665</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZTEST">
<title
>ZTEST</title>
<para
>La función ZTEST() calcula la probabilidad de dos colas de un test z con la distribución normal.</para>
<para
>Efectúa una prueba de la hipótesis nula, esta muestra es una muestra de una variable aleatoria con una distribución normal con una media media y una desviación estándar sigma. Un valor devuelto igual que 1 indica que la hipótesis nula es rechazada, es decir, que la muestra no es una muestra aleatoria de la distribución normal. Si se omite sigma, se estima a partir de la muestra, usando STDEV. </para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ZTEST(x; media; desviaciónEstándar)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>x (array)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>media</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>desviaciónEstándar</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Text">
<title
>Texto</title>

<sect3 id="ASC">
<title
>ASC</title>
<para
>La función ASC() devuelve los caracteres de media anchura correspondientes al argumento de anchura completa.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ASC(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Caracteres de anchura completa</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="JIS"
>JIS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BAHTTEXT">
<title
>BAHTTEXT</title>
<para
>La función BAHTTEXT() convierte un número a un texto en caracteres tailandeses (baht).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>BAHTTEXT(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>BAHTTEXT(23) devuelve "ยสบสามบาทถวน"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHAR">
<title
>CHAR</title>
<para
>La función CHAR() devuelve el carácter indicado por un número.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CHAR(código)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Código del carácter</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CHAR(65) devuelve «A»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="CLEAN">
<title
>CLEAN</title>
<para
>La función CLEAN() elimina de la cadena todos los caracteres no imprimibles</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CLEAN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CLEAN(AsciiToChar(7) + «HELLO») devuelve «HELLO»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CODE">
<title
>CODE</title>
<para
>La función CODE() devuelve un código numérico para el primer carácter de una cadena de texto.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CODE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CODE(«KDE») devuelve 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPARE">
<title
>COMPARE</title>
<para
>La función COMPARE() devuelve 0 si las dos cadenas son iguales; -1 si la primera es menor en valor que la segunda; 1 en caso contrario.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COMPARE(cadena1; cadena2; true|false)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primera cadena</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Cadena con la que comparar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Compara con distinción de mayúsculas (verdadero/falso)</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMPARE(«Calligra»; «Calligra»; true) devuelve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMPARE(«calligra»; «Calligra»; true) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COMPARE(«kspread»; «Calligra»; false) devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EXACT"
>EXACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONCATENATE">
<title
>CONCATENATE</title>
<para
>La función CONCATENATE() devuelve una cadena que es la concatenación de las cadenas pasadas como parámetros.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CONCATENATE(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores cadena</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Valores cadena</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Valores cadena</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Valores cadena</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem>
<seglistitem
><seg
>Valores cadena</seg
><seg
>Un intervalo de cadenas</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CONCATENATE("Hojas";"Calligra";"KDE") devuelve "HojasCalligraKDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLAR">
<title
>DOLLAR</title>
<para
>La función DOLLAR() convierte un número a texto usando el formato de moneda, con los decimales redondeados en el lugar indicado. Aunque el nombre sea DOLLAR(), esta función hará la conversión según la locale actual.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DOLLAR(número;decimales)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Decimales</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DOLLAR(1403.77) devuelve «1,403.77 EUR»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DOLLAR(-0.123;4) devuelve «-0.1230 EUR»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXACT">
<title
>EXACT</title>
<para
>La función EXACT() devuelve Verdadero si las dos cadenas son iguales. En caso contrario, devuelve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>EXACT(cadena1;cadena2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Cadena</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EXACT(«Calligra»;«Calligra») devuelve Verdadero</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>EXACT(«KSpread»;«Calligra») devuelve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COMPARE"
>COMPARE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIND">
<title
>FIND</title>
<para
>La función FIND() busca una cadena de texto (texto_buscado) dentro de otra cadena de texto (texto_contenedor) y devuelve el número del punto de comienzo de texto_buscado, desde el carácter más a la izquierda de texto_contenedor.</para>
<para
>El parámetro num_inicio indica el carácter en el que comenzar la búsqueda. El primer carácter es el carácter número 1. Si se omite num_inicio, se supone que es 1.</para>
<para
>También puede usar la función SEARCH, pero a diferencia de SEARCH, FIND distingue mayúsculas y minúsculas, y no permite caracteres comodín.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FIND(texto_buscado;texto_contenedor;num_inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El texto que desee buscar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>El texto que puede contener texto_buscado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Indica el índice en el que empezar la búsqueda</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FIND(«Cal»;«Calligra») devuelve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FIND(«i»;«Calligra») devuelve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FIND("a";"Libros en Calligra";4) devuelve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINDB">
<title
>FINDB</title>
<para
>La función FINDB() busca una cadena de texto (texto_buscado) dentro de otra cadena de texto (texto_contenedor) y devuelve el número del punto inicial del texto_buscado, desde el carácter más a la izquierda del texto_contenedor utilizando las posiciones de los bytes.</para>
<para
>El parámetro PosicionByte especifica el carácter en el que comenzar la búsqueda. El primer carácter es el carácter número 2. Si se omite num_inicio, se supone que es 2.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FINDB(texto_buscado;texto_contenedor;PosicionByte Inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El texto que desee buscar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>El texto que puede contener texto_buscado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Especifica la posición en bytes para iniciar la búsqueda</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIXED">
<title
>FIXED</title>
<para
>La función FIXED() redondea un número al número indicado de decimales, formatea el número en una cadena de formato decimal, y devuelve el resultado como texto. Si decimales es negativo, el número se redondea a la izquierda de la coma decimal. Si omite decimales, se supone que es 2. Si el parámetro opcional sin_puntos es Verdadero, no se muestra el separador de miles.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>FIXED(número;decimales;sin_puntos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Decimales</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Sin_puntos</seg
><seg
>Un valor lógico (VERDADERO o FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FIXED(1234.567;1) devuelve «1.234.6»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FIXED(1234.567;1;FALSE) devuelve «1234.6»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>FIXED(44.332) devuelve «44.33»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="JIS">
<title
>JIS</title>
<para
>La función JIS() devuelve los caracteres de anchura completa correspondientes al argumento de media anchura.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>JIS(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Caracteres de media anchura</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ASC"
>ASC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFT">
<title
>LEFT</title>
<para
>La función LEFT() devuelve una subcadena que contiene los «longitud» caracteres más a la izquierda de la cadena. Si «longitud» es más de la longitud de la cadena, se devuelve la cadena completa.Es un error que el número de caracteres sea menor de cero.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LEFT(texto;longitud)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Número de caracteres</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LEFT(«hello»;2) devuelve «he»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LEFT(«KSpread»;10) devuelve «KSpread»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LEFT(«KSpread») devuelve «K»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFTB">
<title
>LEFTB</title>
<para
>La función LEFTB() devuelve una subcadena que contiene los «longitud» caracteres situados más a la izquierda de la cadena utilizando posiciones en bytes. Si el parámetro «longitud» excede la longitud de la cadena, entonces la función devuelve la cadena completa. Es un error que el número de caracteres sea menor de cero.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LEFTB(texto;longitudByte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Longitud del byte</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEN">
<title
>LEN</title>
<para
>La función LEN() devuelve la longitud de la cadena.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LEN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LEN(«hello») devuelve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LEN(«KSpread») devuelve 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LENB"
>LENB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LENB">
<title
>LENB</title>
<para
>La función LENB() devuelve la longitud de la cadena utilizando las posiciones de los bytes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LENB(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOWER">
<title
>LOWER</title>
<para
>La función LOWER() convierte una cadena a minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>LOWER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOWER(«hola») devuelve «hola»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>LOWER(«HOLA») devuelve «hola»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MID">
<title
>MID</title>
<para
>La función MID() devuelve una subcadena que contiene los «longitud» caracteres de la cadena, empezando en el índice «posición».</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MID(texto;posición;longitud)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posición</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Longitud</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MID(«Calligra»;2;3) devuelve «all»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>MID(«Calligra»;2) devuelve «alligra»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIDB">
<title
>MIDB</title>
<para
>La función MIDB() devuelve una subcadena que contiene «longitud» caracteres de la cadena, empezando por el índice «posición» utilizando las posiciones de los bytes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>MIDB(texto;PosicionByte Inicio;LongitudByte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posición del byte</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Longitud del byte</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PROPER">
<title
>PROPER</title>
<para
>La función PROPER() convierte la primera letra de cada palabra a mayúscula, y el resto de las letras a minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PROPER(cadena)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PROPER(«esto es un título») devuelve «Esto Es Un Título»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXP">
<title
>REGEXP</title>
<para
>Devuelve una parte de la cadena que coincide con una expresión regular. Si la cadena no coincide con la expresión regular facilitada, se devuelve el valor indicado como predeterminado.</para>
<para
>Si se proporciona una referencia, se devuelve el valor de esa referencia.</para>
<para
>Si no se facilita ningún valor predeterminado, se supone que es una cadena vacía. Si no facilita ninguna referencia, se supone que es 0 (de modo que se devuelve toda la parte que coincida).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>REGEXP(texto; expresión_regular; predeterminado; referencia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto buscado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Expresión regular</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Valor predeterminado (opcional)</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Referencia (opcional)</seg
><seg
>Número</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>REGEXP("El número es   15.";"[0-9]+") = "15" </para
></listitem>

</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>REGEXP("15, 20, 26, 41";"([0-9]+), *[0-9]+$";"";1) = "26" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXPRE">
<title
>REGEXPRE</title>
<para
>Sustituye todas las coincidencias de una expresión regular por el texto de sustitución</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>REGEXPRE(texto; expresión_regular; sustitutición)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto buscado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Expresión regular</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Sustitución</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>REGEXPRE(«14 y 15 y 16»;«[0-9]+»;«num») devuelve «num y num y num»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACE">
<title
>REPLACE</title>
<para
>La función REPLACE() reemplaza parte de una cadena de texto con una cadena de texto diferente.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>REPLACE(texto;posición;longitud;texto_nuevo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El texto en el que desea reemplazar algunos caracteres</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posición de los caracteres a reemplazar</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de caracteres a reemplazar</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>El texto que reemplazará los caracteres del texto antiguo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>REPLACE(«abcdefghijk»;6;5;«-») devuelve «abcde-k»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>REPLACE(«2002»;3;2;«03») devuelve «2003»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACEB">
<title
>REPLACEB</title>
<para
>La función REPLACEB() reemplaza parte de una cadena de texto con una cadena de texto diferente usando posiciones en bytes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>REPLACEB(texto;PosicionByte;LongitudByte longitud;texto_nuevo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El texto en el que desea reemplazar algunos caracteres usando posiciones en bytes</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posición en bytes de los caracteres a reemplazar</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La longitud en bytes de los caracteres a reemplazar</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>El texto que reemplazará los caracteres del texto antiguo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPT">
<title
>REPT</title>
<para
>La funcióni REPT() repite el primer parámetro tantes veces como indique el segundo parámetro. El segundo parámetro no debe ser negativo, y esta función devolverá una cadena vacía si el segundo parámetro es cero (o se redondea a cero).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>REPT(texto;cantidad)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Número de repeticiones</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>REPT(«KSpread»;3) devuelve «KSpreadKSpreadKSpread»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>REPT(«KSpread»;0) devuelve ""</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHT">
<title
>RIGHT</title>
<para
>La función RIGHT() devuelve una subcadena que contiene los «longitud» caracteres más a la derecha de la cadena. Si «longitud» es más de la longitud de la cadena, se devuelve la cadena completa.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RIGHT(texto;longitud)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Número de caracteres</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RIGHT(«hello»;2) devuelve «lo»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RIGHT(«KSpread»;10) devuelve «KSpread»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RIGHT(«KSpread») devuelve «d»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHTB">
<title
>RIGHTB</title>
<para
>La función RIGHTB() devuelve una subcadena que contiene los «longitud» caracteres más a la derecha de la cadena utilizando las posiciones de los bytes. Si el parámetro «longitud» es mayor que la longitud de la cadena, se devuelve la cadena completa.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RIGHTB(texto;LongitudByte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Longitud del byte</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROT13">
<title
>ROT13</title>
<para
>La función ROT13() cifra un texto reemplazando cada letra con aquella que se encuentra 13 posiciones más adelante en el alfabeto. Si la posición decimotercera está más allá de la letra Z, se empieza de nuevo por la A (rotación).</para>
<para
>Puede descifrar el texto aplicando de nuevo la función de cifrado al texto resultante.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ROT13(Texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROT13(«KSpread») devuelve «XFcernq»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ROT13(«XFcernq») devuelve «KSpread»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCH">
<title
>SEARCH</title>
<para
>La función SEARCH() busca una cadena de texto (texto_buscado) dentro de otra cadena de texto (dentro_del_texto), y devuelve el número del punto inicial de texto_buscado, desde el carácter más a la izquierda de dentro_del_texto.</para>
<para
>Puede usar caracteres comodín, interrogantes (?) y asteriscos (*). Un interrogante coincide con cualquier carácter único, un asterisco coincide con cualquier secuencia de caracteres.</para>
<para
>El parámetro núm_inicio indica el carácter por el que iniciar la búsqueda. El primer carácter es el carácter número 1. Si se omite núm_inicio, se supone que es 1. SEARCH no diferencia entre letras mayúsculas y minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SEARCH(texto_buscado;dentro_del_texto;núm_inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El texto que desee buscar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>El texto que puede contener texto_buscado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Índice indicado para iniciar la búsqueda</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SEARCH(«e»;«Statements»;6) devuelve 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SEARCH(«margin»;«Profit Margin») devuelve 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCHB">
<title
>SEARCHB</title>
<para
>La función SEARCHB() busca una cadena de texto (texto_buscado) dentro de otra cadena de texto (dentro_del_texto), y devuelve el número del punto inicial de texto_buscado, desde el carácter más a la izquierda de dentro_del_texto utilizando las posiciones de los bytes.</para>
<para
>Puede usar caracteres comodín, interrogantes (?) y asteriscos (*). Un interrogante coincide con cualquier carácter único, un asterisco coincide con cualquier secuencia de caracteres.</para>
<para
>El parámetro PosiciónByte especifica el carácter por el que iniciar la búsqueda. El primer carácter es el carácter número 2. Si se omite PosicionByte, se asume que es 2. SEARCHB no diferencia entre letras mayúsculas y minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SEARCHB(texto_buscado;dentro_del_texto;PosicionByte inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>El texto que desee buscar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>El texto que puede contener texto_buscado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posición del byte especificado para iniciar la búsqueda</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLEEK">
<title
>SLEEK</title>
<para
>La función SLEEK() elimina todos los espacios de la cadena.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SLEEK(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SLEEK("Esto es   un  texto ") devuelve "Estoesuntexto"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TRIM"
>TRIM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBSTITUTE">
<title
>SUBSTITUTE</title>
<para
>La función SUBSTITUTE() sustituye texto_antiguo por texto_nuevo en una cadena de texto. Si se indica num_instancia, solo se reemplaza esa instancia de texto_antiguo. En caso contrario, todas las apariciones de texto_antiguo se cambian a texto_nuevo. Use SUBSTITUTE cuando desee reemplazar un texto específico, y use REPLACE cuando desee reemplazar cualquier texto que aparezca en una ubicación concreta.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SUBSTITUTE(texto; texto_antiguo; texto_nuevo; num_instancia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto que desee sustituir</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Parte del texto que desee reemplazar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Texto nuevo de sustitución</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Que coincidencia reemplazar</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUBSTITUTE(«Datos de costes»;«costes»;«ventas») devuelve «Datos de ventas»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUBSTITUTE("Trim 1, 2001";"1";"3";1) devuelve "Trim 3, 2001"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SUBSTITUTE("Trim 1, 2001";"1";"3";4) devuelve "Trim 3, 2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="T">
<title
>T</title>
<para
>La función T() devuelve el texto referido por valor. Si valor es, o se refiere a, texto, entonces T devuelve valor. Si valor no se refiere a texto, entonces T  devuelve un texto vacío.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>T(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>T("Calligra") devuelve "Calligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>T(1.2) devuelve "" (empty text)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TEXT">
<title
>TEXT</title>
<para
>La función TEXT() convierte un valor a texto.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TEXT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Cualquier tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TEXT(1234.56) devuelve «1234.56»</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TEXT(«KSpread») devuelve «KSpread»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TOGGLE">
<title
>TOGGLE</title>
<para
>La función TOGGLE() cambia los caracteres en minúscula a mayúscula y viceversa.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TOGGLE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TOGGLE("hola") devuelve "HOLA"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TOGGLE("HOLA") devuelve "hola"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TOGGLE("HoLa") devuelve "hOlA"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIM">
<title
>TRIM</title>
<para
>La función TRIM() devuelve el texto con espacios únicos entre las palabras.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TRIM(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TRIM(" hola KSpread ") devuelve «hola KSpread»</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICHAR">
<title
>UNICHAR</title>
<para
>La función UNICHAR() devuelve el caracter indicado por un punto de código Unicode.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>UNICHAR(código)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Código del carácter</seg
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>UNICHAR(65) devuelve "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UNICODE"
>UNICODE</link
>&nbsp;</member>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICODE">
<title
>UNICODE</title>
<para
>La función UNICODE() devuelve un punto de código Unicode para el primer carácter de una cadena de texto.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Número entero (como 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>UNICODE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>UNICODE("KDE") devuelve 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UNICHAR"
>UNICHAR</link
>&nbsp;</member>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UPPER">
<title
>UPPER</title>
<para
>La función UPPER() convierte una cadena a mayúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>UPPER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadena de origen</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>UPPER("hola") devuelve "HOLA"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>UPPER("HOLA") devuelve "HOLA"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VALUE">
<title
>VALUE</title>
<para
>Convierte una cadena de texto que representa un valor al valor real. </para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>

<listitem
><para
>VALUE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>VALUE("14.03") devuelve 14.03</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Trigonometric">
<title
>Trigonométricas</title>

<sect3 id="ACOS">
<title
>ACOS</title>
<para
>La función ACOS() devuelve el arcocoseno en radianes, y el valor está definido matemáticamente entre 0 y PI (inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ACOS(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ACOS(0.8) es igual a 0.6435011</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ACOS(0) es igual a 1.57079633</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOSH">
<title
>ACOSH</title>
<para
>La función ACOSH() calcula el arcocoseno hiperbólico de x. Este es el valor cuyo coseno hiperbólico es x. Si x es menor de 1.0, acosh() devuelve not-a-number (NaN), y se establece errno.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ACOSH(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ACOSH(5) es igual a 2.29243167</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ACOSH(0) es igual a NaN</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COSH"
>COSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOT">
<title
>ACOT</title>
<para
>La función ACOT() devuelve la arcocotangente de un número.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ACOT(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ACOT(0) es igual 1.57079633</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASIN">
<title
>ASIN</title>
<para
>La función ASIN() devuelve el arcoseno en radianes, y el valor está definido matemáticamente entre -PI/2 y PI/2 (inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ASIN(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ASIN(0.8) es igual a 0.92729522</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ASIN(0) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASINH">
<title
>ASINH</title>
<para
>La función ASINH() calcula el arcoseno hiperbólico de x. Este es el valor cuyo seno hiperbólico es x.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ASINH(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ASINH(0.8) es igual a 0.73266826</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ASINH(0) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SINH"
>SINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN">
<title
>ATAN</title>
<para
>La función ATAN() devuelve el arcotangente en radianes, y el valor está definido matemáticamente entre -PI/2 y PI/2 (inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ATAN(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ATAN(0.8) es igual a 0.67474094</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ATAN(0) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TAN"
>TAN</link
>&nbsp;</member>
<member
><link linkend="ATAN2"
>ATAN2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN2">
<title
>ATAN2</title>
<para
>Esta función calcula la arcotangente de las dos variables x e y. Es similar a calcular la arcotangente de y/x, excepto que se usan los signos de ambos argumentos para determinar el cuadrante del resultado.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ATAN2(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ATAN2(0.5;1.0) es igual a 1.107149</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ATAN2(-0.5;2.0) es igual a 1.815775</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATANH">
<title
>ATANH</title>
<para
>La función ATANH() calcula la arcotangente hiperbólica de x. Este es el valor cuya tangente hiperbólica es x. Si el valor absoluto de x es mayor que 1.0, ATANH() devuelve not-a-number (NaN).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>ATANH(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ATANH(0.8) es igual a 1.09861229</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>ATANH(0) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TANH"
>TANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COS">
<title
>COS</title>
<para
>La función COS() devuelve el coseno de x, con x expresado en radianes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COS(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COS(0) es igual a 1.0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COS(PI()/2) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
<member
><link linkend="ACOS"
>ACOS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COSH">
<title
>COSH</title>
<para
>La función COSH() devuelve el coseno hiperbólico de x, que está definido matemáticamente como (exp(x) + exp(-x)) / 2.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>COSH(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COSH(0.8) es igual a 1.33743495</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>COSH(0) es igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ACOSH"
>ACOSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSC">
<title
>CSC</title>
<para
>La función CSC() devuelve la cosecante de x, con x expresado en radianes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CSC(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CSC(PI()/2) es igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSCH">
<title
>CSCH</title>
<para
>La función CSCH() devuelve la cosecante hiperbólica de x, con x expresado en radianes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>CSCH(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>CSCH(PI()/2) es igual a 0.434537208...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEGREES">
<title
>DEGREES</title>
<para
>Esta función transforma un ángulo en radianes en un ángulo en grados.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>DEGREES(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEGREES(0.78) es igual a 44.69</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>DEGREES(1) es igual a 57.29</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RADIANS"
>RADIANS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PI">
<title
>PI</title>
<para
>La función PI() devuelve el valor de PI.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>PI()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>PI() es igual a 3.141592654...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RADIANS">
<title
>RADIANS</title>
<para
>Esta función transforma un ángulo en grados en un ángulo en radianes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>RADIANS(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (grados)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RADIANS(75) es igual a 1.308</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>RADIANS(90) es igual a 1.5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DEGREES"
>DEGREES</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEC">
<title
>SEC</title>
<para
>La función SEC() devuelve el secante de x, con x expresado en radianes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SEC(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SEC(0) es igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECH">
<title
>SECH</title>
<para
>La función SECH() devuelve la secante hiperbólica de x, con x expresado en radianes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SECH(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SECH(0) es igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIN">
<title
>SIN</title>
<para
>La función SIN() devuelve el seno de x, con x expresado en radianes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SIN(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SIN(0) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SIN(PI()/2) es igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
<member
><link linkend="ASIN"
>ASIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SINH">
<title
>SINH</title>
<para
>La función SINH devuelve el seno hiperbólico de x, que está definido matemáticamente como (exp(x) - exp(-x)) / 2.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>SINH(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SINH(0.8) es igual a 0.88810598</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>SINH(0) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ASINH"
>ASINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TAN">
<title
>TAN</title>
<para
>La función TAN() devuelve la tangente de x, con x expresado en radianes.</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TAN(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>

<listitem
><para
>TAN(0.7) es igual a 0.84228838</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TAN(0) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TANH">
<title
>TANH</title>
<para
>La función TANH() devuelve la tangente hiperbólica de x, que está definida matemáticamente como sinh(x)/cosh(x).</para>
<para
><segmentedlist
><segtitle
>Tipo de retorno</segtitle>
<seglistitem
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxis</term>
<listitem
><para
>TANH(Coma flotante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parámetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentario</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ángulo (radianes)</seg
><seg
>Un valor de coma flotante (como 1.3, 0.343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TANH(0.8) es igual a 0.66403677</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ejemplos</term>
<listitem
><para
>TANH(0) es igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funciones relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ATANH"
>ATANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2>
</sect1>
</chapter>
 


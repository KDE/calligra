<chapter id="functions">
<!--
*************************** DO NOT EDIT MANUALLY ************************

This file is autogenerated from *.xml files in calligra/tables/functions/
all changes will be overwritten on the next script run
-->
<title
>Funções</title>
<para
>O &sheets; tem uma enorme quantidade de funções matemáticas e diversas que podem ser usadas em uma célula com fórmulas.</para>
<sect1 id="supported-functions">
<title
>Funções suportadas</title>
<para
>Este capítulo apresenta uma breve introdução sobre todas as funções suportadas nos seguintes grupos:</para>
<simplelist>
<member
><link linkend="Bit-Operations"
>Operações com bits</link
>&nbsp;</member>
<member
><link linkend="Conversion"
>Conversão</link
>&nbsp;</member>
<member
><link linkend="Database"
>Banco de dados</link
>&nbsp;</member>
<member
><link linkend="Date---Time"
>Data e hora</link
>&nbsp;</member>
<member
><link linkend="Engineering"
>Engenharia</link
>&nbsp;</member>
<member
><link linkend="Financial"
>Financeiro</link
>&nbsp;</member>
<member
><link linkend="Information"
>Informações</link
>&nbsp;</member>
<member
><link linkend="Logical"
>Lógico</link
>&nbsp;</member>
<member
><link linkend="Lookup---Reference"
>Pesquisa e referência</link
>&nbsp;</member>
<member
><link linkend="Math"
>Matemática</link
>&nbsp;</member>
<member
><link linkend="Statistical"
>Estatístico</link
>&nbsp;</member>
<member
><link linkend="Text"
>Texto</link
>&nbsp;</member>
<member
><link linkend="Trigonometric"
>Trigonométrica</link
>&nbsp;</member>
</simplelist>
<!--
<para
>OpenFormula groups (small, medium, and large, more)? Which are supported by Sheets?</para>
<para
>Something about interoperablity / spread sheet exchange / known issues, incompabitilites, errors?</para>
-->
<sect2 id="Bit-Operations">
<title
>Operações com Bits</title>

<sect3 id="BITAND">
<title
>BITAND</title>
<para
>A função BITAND() efetua uma operação 'E' nos 'bits' dos dois parâmetros inteiros.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITAND(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BITAND(12;10) retorna 8 (porque o 12 em decimal é 1100 em binário, assim como o decimal 10 é 1010 em binário; finalmente, o 1100 "e" o 1010 dá 1000, o que corresponde ao número inteiro 8).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITLSHIFT">
<title
>BITLSHIFT</title>
<para
>A função BITLSHIFT() efetua uma operação de deslocamento à esquerda binário para o primeiro parâmetro. O número de bits a deslocar é indicado com o segundo parâmetro. Lembre-se que um número de bits negativo a deslocar para a esquerda corresponde a um deslocamento à direita. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITLSHIFT(valor; número deslocamentos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de deslocamentos à esquerda</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITOR">
<title
>BITOR</title>
<para
>A função BITOR() efetua uma operação 'OU' binária para os dois parâmetros inteiros. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITOR(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BITOR(12;10) devolve 14 (porque o número decimal 12 é o binário 1100, assim como o decimal 10 é o binário 1010; finalmente, o 1100 "ou" o 1010 dá 1110, que é o número inteiro 14).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITRSHIFT">
<title
>BITRSHIFT</title>
<para
>A função BITRSHIFT() efetua uma operação de deslocamento à direita binário para o primeiro parâmetro. O número de bits a deslocar é indicado com o segundo parâmetro. Lembre-se que um número de bits a deslocar para a direita negativo corresponde a um deslocamento à esquerda. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITRSHIFT(valor; número deslocamentos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de deslocamentos à direita</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITXOR">
<title
>BITXOR</title>
<para
>A função BITXOR() efetua uma operação binário de OU-exclusivo com os dois parâmetros inteiros. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITXOR(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BITXOR(12;10) devolve 6 (12 em decimal é igual a 1100, e 10 em binário é igual a 1010; como tal, o "xor" de 1100 com 1010 dá 0110, que corresponde ao número inteiro 6).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Conversion">
<title
>Conversão</title>

<sect3 id="ARABIC">
<title
>ARABIC</title>
<para
>A função ARABIC() converte um numeral romano em um número.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ARABIC(Numeral)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numeral</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ARABIC("IV") retorna 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ARABIC("XCIX") retorna 99</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROMAN"
>ROMAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASCIITOCHAR">
<title
>ASCIITOCHAR</title>
<para
>A função ASCIITOCHAR() retorna o caractere para cada código ASCII fornecido.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ASCIITOCHAR(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor ASCII para converter</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ASCIITOCHAR(118) retorna "v"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ASCIITOCHAR(75; 68; 69) retorna "KDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2INT">
<title
>BOOL2INT</title>
<para
>A função BOOL2INT() retorna um valor inteiro para um valor booleano fornecido. Este método é utilizado com um valor booleano em métodos que necessitam de um valor inteiro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BOOL2INT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor booleano para converter</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BOOL2INT(True) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BOOL2INT(False) retorna 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="INT2BOOL"
>INT2BOOL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2STRING">
<title
>BOOL2STRING</title>
<para
>A função BOOL2STRING() retorna um valor string para um determinado valor booleano. Este método tem a finalidade de usar um valor booleano em métodos que necessitam de um string</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BOOL2STRING(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor booleano para converter</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BOOL2STRING(true) retorna "True"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BOOL2STRING(false) retorna "False"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>upper(BOOL2STRING(find("nan";"banana"))) retorna TRUE</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARX">
<title
>CARX</title>
<para
>A função CARX() retorna a posição X correspondendo à posição de um ponto em um plano polar.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CARX(Raio;Ângulo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Raio</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CARX(12;1.5707) retorna 0,00115592</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CARX(12;0) retorna 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARY">
<title
>CARY</title>
<para
>A função CARY() retorna a posição Y correspondendo à posição de um ponto em um plano polar.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CARY(Raio;Ângulo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Raio</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CARY(12;1.5707) retorna 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CARY(12;0) retorna 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHARTOASCII">
<title
>CHARTOASCII</title>
<para
>A função CHARTOASCII() retorna o código ASCII para o caractere fornecido.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CHARTOASCII(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um caractere para converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CHARTOASCII("v") retorna 118</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CHARTOASCII(r) é um erro. O caractere deve estar entre aspas.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DECSEX">
<title
>DECSEX</title>
<para
>A função DECSEX() converte um valor de precisão dupla para valor de tempo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DECSEX(duplo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DECSEX(1.6668) retorna 1:40 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DECSEX(7.8) retorna 7:47</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT2BOOL">
<title
>INT2BOOL</title>
<para
>A função INT2BOOL() retorna uma valor booleano para um número inteiro fornecido. Este método é usado com um inteiro em métodos que necessitam de um booleano. Ele aceita apelas 0 ou 1. Se qualquer outro valor for fornecido, o valor falso é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INT2BOOL(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor inteiro para converter</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INT2BOOL(1) retorna true</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INT2BOOL(0) retorna false</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>OR(INT2BOOL(1); false) retorna true</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BOOL2INT"
>BOOL2INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NUM2STRING">
<title
>NUM2STRING</title>
<para
>A função NUM2STRING() devolve um valor textual para um determinado número. Lembre-se de que o &sheets; pode converter automaticamente números para cadeias de caracteres (texto), assim esta função raramente será necessária.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NUM2STRING(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número para converter em texto</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NUM2STRING(10) retorna "10"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NUM2STRING(2.05) retorna "2.05"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>=find("101";NUM2STRING(A1)) (A1 = 2.010102) retorna True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STRING"
>STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLA">
<title
>POLA</title>
<para
>A função POLA() retorna o ângulo (em radianos) correspondendo à posição de um ponto em um plano cartesiano.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POLA(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor em X</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor em Y</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>POLA(12;12) retorna 0.78539816</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>POLA(12;0) retorna 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>POLA(0;12) retorna 1.5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLR">
<title
>POLR</title>
<para
>A função POLR() retorna o raio correspondente à posição de um ponto num plano cartesiano.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POLR(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor em X</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor em Y</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>POLR(12;12) retorna 16.9705</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>POLR(12;0) retorna 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROMAN">
<title
>ROMAN</title>
<para
>A função ROMAN() retorna o número no formato Romano. Somente números positivos inteiros podem ser convertidos. O argumento opcional Formato define o nível de concisão, sendo '0' o padrão.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROMAN(Número)</para
></listitem>

</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Formato</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROMAN(99) retorna "XCIX"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROMAN(-55) retorna "Erro"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ARABIC"
>ARABIC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEXDEC">
<title
>SEXDEC</title>
<para
>A função SEXDEC() retorna valor decimal. Você também pode fornecer um valor de tempo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SEXDEC(valor de tempo) ou SEXDEC(horas;minutos;segundos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Horas</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Minutos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Segundos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SEXDEC(1;5;7) retorna 1.0852778 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DECSEX("8:05") retorna 8.08333333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STRING">
<title
>STRING</title>
<para
>A função STRING() devolve um valor textual para um dado número. Faz o mesmo que a função NUM2STRING.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número para converter em texto</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="NUM2STRING"
>NUM2STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Database">
<title
>Banco de dados</title>

<sect3 id="DAVERAGE">
<title
>DAVERAGE</title>
<para
>Calcula a média numa coluna de um banco de dados especificado por um conjunto de condições para valores que são números</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAVERAGE(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAVERAGE(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNT">
<title
>DCOUNT</title>
<para
>Conta as células contendo valores numéricos numa coluna de um banco de dados especificado por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DCOUNT(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DCOUNT(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNTA"
>DCOUNTA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNTA">
<title
>DCOUNTA</title>
<para
>Conta as células contendo valores numéricos ou alfanuméricos numa coluna de um banco de dados especificado por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DCOUNTA(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DCOUNTA(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNT"
>DCOUNT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DGET">
<title
>DGET</title>
<para
>Retorna um valor simples de uma coluna de um banco de dados especificado por um conjunto de condições. Esta função retorna um erro se nenhum valor ou mais de um valor existir.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DGET(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DGET(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMAX">
<title
>DMAX</title>
<para
>Retorna o maior valor numa coluna de um banco de dados especificado por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DMAX(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DMAX(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DMIN"
>DMIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMIN">
<title
>DMIN</title>
<para
>Retorna o menor valor numa coluna de um banco de dados especificado por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DMIN(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DMIN(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DMAX"
>DMAX</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DPRODUCT">
<title
>DPRODUCT</title>
<para
>Retorna o produto de todos os valores numéricos numa coluna de um banco de dados especificado por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DPRODUCT(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DPRODUCT(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEV">
<title
>DSTDEV</title>
<para
>Retorna a estimativa do desvio padrão de um população baseada num exemplo usando todos os valores numéricos numa coluna de um banco de dados especificado por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DSTDEV(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DSTDEV(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEVP"
>DSTDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEVP">
<title
>DSTDEVP</title>
<para
>Retorna o desvio padrão de uma população baseada na população inteira usando todos os valores numéricos numa coluna de um banco de dados especificado por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DSTDEVP(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DSTDEVP(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEV"
>DSTDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSUM">
<title
>DSUM</title>
<para
>Somar acima os números na coluna de um banco de dados especificado por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DSUM(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DSUM(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVAR">
<title
>DVAR</title>
<para
>Retorna a variação estimada de uma população baseada em um exemplo usando todos os valores numéricos numa coluna de um banco de dados especificado por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DVAR(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DVAR(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DVARP"
>DVARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVARP">
<title
>DVARP</title>
<para
>Retorna a variação de uma população baseada em uma população inteira usando todos os valores numéricos numa coluna de um banco de dados especificados por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DVARP(BancodeDados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Marca intervalo do banco de dados</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Marca texto na coluna no banco de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Marca intervalo das condições</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DVARP(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DVAR"
>DVAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GETPIVOTDATA">
<title
>GETPIVOTDATA</title>
<para
>Busca dados sumários de uma tabela dinâmica.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GETPIVOTDATA(Bancodedados; "Vendas")</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo contendo a tabela dinâmica</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Nome do campo do qual você deseja o resumo de dados.</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Date---Time">
<title
>Data &amp; hora</title>

<sect3 id="CURRENTDATE">
<title
>CURRENTDATE</title>
<para
>A função CURRENTDATE() retorna a data atual. É equivalente à função TODAY.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CURRENTDATE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CURRENTDATE() retorna "Sábado 13 Abril 2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTDATETIME">
<title
>CURRENTDATETIME</title>
<para
>A função CURRENTDATETIME() retorna a data e hora atuais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CURRENTDATETIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CURRENTDATETIME() retorna "Sábado 13 Abril 2002 19:12:01"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTTIME">
<title
>CURRENTTIME</title>
<para
>A função CURRENTTIME() retorna a hora corrente formatada com parâmetros locais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CURRENTTIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CURRENTTIME() retorna "19:12:01"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE">
<title
>DATE</title>
<para
>A função DATE() retorna a data formatada com parâmetros locais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DATE(ano;mês;dia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Mês</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Dia</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DATE(2000;5;5) retorna Sexta-feira 05 de maio de 2000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE2UNIX">
<title
>DATE2UNIX</title>
<para
>A função DATE2UNIX() converte um valor de data e hora para uma hora Unix.</para>
<para
>Uma hora Unix é o número de segundos após a meia-noite de 1 de Janeiro de 1970.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DATE2UNIX(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DATE2UNIX("01/01/2000") retorna 946 684 800</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEDIF">
<title
>DATEDIF</title>
<para
>A função DATEDIF() retorna a diferença entre duas datas.</para>
<para
>O intervalo deverá ser um dos seguintes: "m": mês; "d": dias; "y": anos completo; "ym": mês, excluindo os anos; "yd": dias, excluindo os anos; "md": dias, excluindo os meses e anos</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DATEDIF(primeira data; segunda data; intervalo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeira data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segunda data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>intervalo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DATEDIF(A1;A2;"d"), com A1 igual a "1 de Janeiro de 1995" e A2 igual a "15 de Junho de 1999" retorna 1626 dias</para
></listitem>
</varlistentry>

<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DATEDIF(A1;A2;"m"), com o A1 igual a "1 de Janeiro de 1995" e A2 igual a "15 de Junho de 1999" retorna 53 meses</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEVALUE">
<title
>DATEVALUE</title>
<para
>A função DATEVALUE retorna uma representação numérica do dia, neste caso o número de dias passados desde 31 de Dezembro de 1899.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DATEVALUE(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DATEVALUE("22/2/2002") retorna 37309</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TIMEVALUE"
>TIMEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAY">
<title
>DAY</title>
<para
>A função DAY retorna o dia de uma data. Se nenhum parâmetro for especificado o dia atual é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAY(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAY("22/2/2002") retorna 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAY(2323,1285) retorna 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYNAME">
<title
>DAYNAME</title>
<para
>A função DAYNAME() retorna o nome do dia da semana (1..7). Em alguns países o primeiro dia da semana é segunda-feira, enquanto em outros o primeiro dia da semana é domingo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYNAME(dia da semana)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número do dia na semana (1..7)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAYNAME(1) retorna Segunda-feira (se a semana inicia na Segunda)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="WEEKDAY"
>WEEKDAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYOFYEAR">
<title
>DAYOFYEAR</title>
<para
>A função DAYOFYEAR() retorna o número do dia no ano (1...365).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYOFYEAR(ano;mês;dia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Mês</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Dia</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAYOFYEAR(2000;12;1) retorna 336</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAYOFYEAR(2000;2;29) retorna 60</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS">
<title
>DAYS</title>
<para
>A função DAYS() retorna a diferença entre duas datas em dias.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYS(data2; data1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro (anterior) valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAYS("22-02-2002"; "26-02-2002") retorna 4</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS360">
<title
>DAYS360</title>
<para
>A função DAYS360() retorna o número de dias da data1 até a data2 usando um calendário de 360 dias no qual todos os meses são considerados com tendo 30 dias. Se o método é falso (padrão) o método US será usado, caso contrário o Europeu.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYS360(data1; data2; método)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data1</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Data2</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Método</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAYS360("22/2/2002"; "21/4/2002"; FALSE) retorna 59</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAYS"
>DAYS</link
>&nbsp;</member>
<member
><link linkend="MONTHS"
>MONTHS</link
>&nbsp;</member>
<member
><link linkend="WEEKS"
>WEEKS</link
>&nbsp;</member>
<member
><link linkend="YEARS"
>YEARS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINMONTH">
<title
>DAYSINMONTH</title>
<para
>A função DAYSINMONTH() retorna o número de dias no ano e mês dados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYSINMONTH(ano;mês)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Mês</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAYSINMONTH(2000;2) retorna 29</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINYEAR">
<title
>DAYSINYEAR</title>
<para
>A função DAYSINYEAR() retorna o número de dias no ano dado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYSINYEAR(ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAYSINYEAR(2000) retorna 366</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EASTERSUNDAY">
<title
>EASTERSUNDAY</title>
<para
>A função EASTERSUNDAY() retorna a data que corresponde ao Domingo de Páscoa no ano fornecido como parâmetro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EASTERSUNDAY(ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EASTERSUNDAY(2003) retorna "20 de Abril de 2003"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EDATE">
<title
>EDATE</title>
<para
>A função EDATE retorna a data que é especifica por uma data fornecida e um número de meses antes ou após aquela data.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EDATE(data; meses)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Meses</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EDATE("22/2/2002"; 3) retorna "22/5/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EDATE("31/3/2002"; -1) retorna "28/2/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DATE"
>DATE</link
>&nbsp;</member>
<member
><link linkend="EOMONTH"
>EOMONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EOMONTH">
<title
>EOMONTH</title>
<para
>A função EOMONTH retorna o último dia no mês especificado por uma data e o número de meses a partir daquela data.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EOMONTH(data; meses)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Meses</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EOMONTH("22/2/2002"; 3) retorna "31/5/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EOMONTH("12/3/2002"; -1) retorna "28/2/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EOMONTH("12/3/2002"; 0) retorna "31/3/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EDATE"
>EDATE</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOUR">
<title
>HOUR</title>
<para
>A função HOUR retorna a hora de um horário. Se nenhum parâmetro for especificado a hora atual é retornada.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HOUR(tempo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tempo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HOUR("22:10:12") retorna 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HOUR(0,1285) retorna 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOURS">
<title
>HOURS</title>
<para
>A função HOURS() retorna o número de horas de um horário.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HOURS(tempo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tempo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HOURS("10:5:2") retorna 10</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLEAPYEAR">
<title
>ISLEAPYEAR</title>
<para
>A função ISLEAPYEAR() retorna Verdadeiro se o ano fornecido é bissexto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISLEAPYEAR(ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISLEAPYEAR(2000) retorna True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISOWEEKNUM">
<title
>ISOWEEKNUM</title>
<para
>A função ISOWEEKNUM() retorna o número de semanas que cabem dentro da data. Observe que esta função é compatível com o padrão ISO8601: uma semana sempre começa na Segunda e termina no Domingo. A primeira semana de um ano é aquela que contém a primeira Quinta do ano.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISOWEEKNUM(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISOWEEKNUM(A1) retorna 51 quando A1 é "21 de Dez".</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="WEEKNUM"
>WEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTE">
<title
>MINUTE</title>
<para
>A função MINUTE retorna os minutos de um horário. Se nenhum parâmetro for especificado o minuto atual é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MINUTE(tempo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tempo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MINUTE("22:10:12") retorna 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MINUTE(0,1234) retorna 57</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTES">
<title
>MINUTES</title>
<para
>A função MINUTES() retorna o número de minutos de um horário.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MINUTES(tempo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tempo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MINUTES("10:5:2") retorna 5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTH">
<title
>MONTH</title>
<para
>A função MONTH retorna o mês de uma data. Se nenhum parâmetro for especificado o mês atual é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MONTH(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MONTH("22/2/2002") retorna 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MONTH(2323,1285) retorna 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHNAME">
<title
>MONTHNAME</title>
<para
>A função MONTHNAME() retorna o nome do mês (1...12).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MONTHNAME(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número do mês (1..12)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MONTHNAME(5) retorna Maio</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHS">
<title
>MONTHS</title>
<para
>A função MONTHS() retorna a diferença entre duas datas em meses. O terceiro parâmetro indica o modo de cálculo: se o modo é 0, MONTHS() retorna o número máximo possível de meses entre as datas. Se o modo é 1, ele apenas retorna o número de meses completos entre as datas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MONTHS(data2; data1; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro (anterior) valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Modo de cálculo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MONTHS("18-01-2002"; "26-02-2002"; 0) retorna 1, porque há 1 mês e 8 dias entre as datas</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MONTHS("19-01-2002"; "26-02-2002"; 1) retorna 0, porque não há um mês completo entre as datas, iniciando no primeiro dia do mês até o último</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NETWORKDAY">
<title
>NETWORKDAY</title>
<para
>A função NETWORKDAY() retorna o número de dias de trabalho entre a data inicial e a final.</para>
<para
>Os feriados deverão ser um dos seguintes: número = dias a adicionar, uma única data ou uma lista de datas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NETWORKDAY(data inicial; data final; férias)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data inicial</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Data final</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Feriados</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NETWORKDAY("01/01/2001";"01/08/2001") retorna 5 dias de trabalho</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NETWORKDAY("01/01/2001";"01/08/2001";2) retorna 3 dias de trabalho</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOW">
<title
>NOW</title>
<para
>A função NOW() retorna a data e hora atuais. É idêntica à função CURRENTDATETIME e é fornecida para compatibilidade com outros aplicativos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NOW()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NOW() retorna "Sábado 13 de Abril de 2002 19:12:01"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECOND">
<title
>SECOND</title>
<para
>A função SECOND retorna os segundos de um horário. Se nenhum parâmetro for especificado o segundo atual é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SECOND(tempo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tempo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SECOND("22:10:12") retorna 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SECOND(0,1234) retorna 42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECONDS">
<title
>SECONDS</title>
<para
>A função SECONDS() retorna o valor em segundos de um horário.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SECONDS(tempo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tempo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SECONDS("10:5:2") retorna 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIME">
<title
>TIME</title>
<para
>A função TIME() retorna a hora formatada com parâmetros locais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TIME(horas;minutos;segundos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Horas</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Minutos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Segundos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TIME(10;2;2) retorna 10:02:02</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TIME(10;70;0) retorna 11:10:0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TIME(10;-40;0) retorna 9:20:0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIMEVALUE">
<title
>TIMEVALUE</title>
<para
>A função TIMEVALUE() retorna um número (entre 0 e 1) representando a hora do dia.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TIMEVALUE(tempo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tempo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TIMEVALUE("10:05:02") retorna 0.42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DATEVALUE"
>DATEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TODAY">
<title
>TODAY</title>
<para
>A função TODAY() retorna a data atual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TODAY()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TODAY() retorna "Sábado 13 de Abril de 2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="NOW"
>NOW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNIX2DATE">
<title
>UNIX2DATE</title>
<para
>A função UNIX2DATE() converte uma hora Unix para um valor de data e hora.</para>
<para
>Uma hora Unix é o número de segundos após a meia-noite de 1 de Janeiro de 1970.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>UNIX2DATE(hora Unix)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora UNIX</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>UNIX2DATE(0) retorna '01-01-1970'</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKDAY">
<title
>WEEKDAY</title>
<para
>A função WEEKDAY() retorna o dia da semana de uma data fornecida. Se o método é 1 (padrão) WEEKDAY() retorna 1 para domingo, 2 para segunda, ... Se o método é 2, segunda é 1, terça 2, ... e se o método é 3 WEEKDAY() retorna 0 para segunda, 1 para terça, ...</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEEKDAY(data; método)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Método (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>WEEKDAY("22-02-2002"; 2) retorna 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAYNAME"
>DAYNAME</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKNUM">
<title
>WEEKNUM</title>
<para
>A função WEEKNUM() retorna o número da semana não-ISO, no qual a data se encaixa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEEKNUM(data; método)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Método (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A função WEEKNUM(A1; 1) devolve 11 quando o A1 é "9 de Março de 2008". O número da semana no ano, com uma semana que começa no Domingo (1, este é o padrão se o Método for omitido).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O WEEKNUM(A1; 2) devolve 10 quando o A1 é "9 de Março de 2008". O número da semana no ano, com uma semana começando na Segunda-Feira (2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISOWEEKNUM"
>ISOWEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKS">
<title
>WEEKS</title>
<para
>A função WEEKS() retorna a diferença entre duas datas em semanas.O terceiro parâmetro indica o modo de cálculo: se o modo é 0, WEEKS() retorna o máximo possível de números de semanas entre os dias. Se o modo é 1, ele apenas retorna o número de todas as semanas entre eles.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEEKS(data2; data1; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro (anterior) valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Modo de cálculo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>WEEKS("18-02-2002"; "26-02-2002"; 0) retorna 1, porque há apenas uma semana e 1 dia entre as datas</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>WEEKS("19-02-2002"; "19-02-2002"; 1) retorna 0, porque não há nenhuma semana inteira entra as datas, iniciando no primeiro dia da semana (segunda ou domingo, dependendo de suas configurações locais)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKSINYEAR">
<title
>WEEKSINYEAR</title>
<para
>A função WEEKSINYEAR() retorna o número de semanas no ano dado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEEKSINYEAR(ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>WEEKSINYEAR(2000) retorna 52</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WORKDAY">
<title
>WORKDAY</title>
<para
>A função WORKDAY() retorna a data que é um dia de trabalho a partir da data inicial.</para>
<para
>Os feriados deverão ser um dos seguintes: número = dias a adicionar, uma única data ou uma lista de datas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WORKDAY(data inicial; dias; feriados)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data inicial</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Dias de trabalho</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Feriados</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>Se B9 for "01/01/2001", D3 "03/01/2001", D4 "04/01/2001" então WORKDAY(B9;2;D3:D4) retorna "sex jan 5 2001"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEAR">
<title
>YEAR</title>
<para
>A função YEAR retorna o ano de uma data. Se nenhum parâmetro for especificado o ano atual é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YEAR(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>YEAR("22/2/2002") retorna 2002</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>YEAR(2323,1285) retorna 1906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARFRAC">
<title
>YEARFRAC</title>
<para
>A função YEARFRAC() retorna o número de dias completos entre a data inicial e a final, de acordo com a base.</para>
<para
>A base deverá ser um dos seguintes valores: 0 = 30/360 EUA, 1 = Atual/atual, 2 = Atual/360, 3 = Atual/365, 4 = Europeu 30/360</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YEARFRAC(data inicial; data final; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeira data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segunda data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>intervalo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARS">
<title
>YEARS</title>
<para
>A função YEARS() retorna a diferença entre duas datas em anos. O terceiro parâmetro indica o modo de cálculo: se o modo é 0, YEARS() retorna o número máximo possível de anos entre as duas datas. Se o modo é 1, retorna apenas anos completos, iniciados em 1 de Jan e terminados em 31 de Dez.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YEARS(data2; data1; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro (anterior) valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Modo de cálculo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>YEARS("19-02-2001"; "26-02-2002"; 0) retorna 1, porque existe uma ano e 7 dias entre as datas</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>YEARS("19-02-2002"; "26-02-2002"; 1) retorna 0, porque não há uma ano inteiro entre as datas, iniciando do primeiro ao último dia do ano</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Engineering">
<title
>Engenharia</title>

<sect3 id="BASE">
<title
>BASE</title>
<para
>A função BASE() converte um número da base 10 para um valor texto na base alvo de 2 à 36.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BASE(número;base;precisão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Comprimento Mínimo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BASE(128;8) retorna "200"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELI">
<title
>BESSELI</title>
<para
>A função BESSELI() retorna a função modificada de Bessel In(x).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BESSELI(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Onde a função é avaliada</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem da função</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BESSELI(0,7;3) retorna 0,007367374</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELJ">
<title
>BESSELJ</title>
<para
>A função BESSELJ() retorna a função Bessel.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BESSELJ(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Onde a função é avaliada</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem da função</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BESSELJ(0,89;3) retorna 0,013974004</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELK">
<title
>BESSELK</title>
<para
>A função BESSELK() retorna a função Bessel modificada, que é equivalente a função Bessel avaliada por argumentos puramente imaginários.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BESSELK(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Onde a função é avaliada</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem da função</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BESSELK(3;9) retorna 397,95880</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELY">
<title
>BESSELY</title>
<para
>A função BESSELY() retorna a função Bessel, que é também chamada a função de Weber ou a função de Neumann.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BESSELY(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Onde a função é avaliada</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem da função</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BESSELY(4;2) igual à 0,215903595</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="BIN2DEC">
<title
>BIN2DEC</title>
<para
>A função BIN2DEC() retorna o valor formatado como um número decimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BIN2DEC(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BIN2DEC("1010") retorna 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BIN2DEC("11111") retorna 31 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2HEX">
<title
>BIN2HEX</title>
<para
>A função BIN2HEX() retorna o valor formatado como um número hexadecimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BIN2HEX(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BIN2HEX("1010") retorna "a"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BIN2HEX("11111") retorna "1f"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2OCT">
<title
>BIN2OCT</title>
<para
>A função BIN2OCT() retorna o valor formatado como um número octal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BIN2OCT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BIN2OCT("1010") retorna "12" </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BIN2OCT("11111") retorna "37" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPLEX">
<title
>COMPLEX</title>
<para
>A função COMPLEX(real;imag) retorna um número complexo na forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMPLEX(real;imag)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Coeficiente real</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Coeficiente imaginário</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMPLEX(1.2;3.4) retorna "1.2+3.4i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMPLEX(0;-1) retorna "-i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONVERT">
<title
>CONVERT</title>
<para
>A função CONVERT() retorna uma conversão de um sistema de medida para outro.</para>
<para
>Unidades de massa suportadas: g (grama), sg (pedaços), lb (libra), u (massa atômica), oz (onça), pedra, ton, grão, pweight (centavo de peso), hweight (centena de peso).</para>
<para
>Unidades de distância suportadas: m (metro), pol (polegada), ft (pés), mi (milha), Nmi (milha náutica), ang (Angstrom), parsec, ano-luz.</para>
<para
>Unidades de pressão suportadas: Pa (Pascal), atm (atmosfera), mmHg (mm de Mercúrio), psi, Torr.</para>
<para
>Unidades de força suportadas: N (Newton), dyn, pound.</para>
<para
>Unidades de energia suportadas: J (Joule), e (erg), c (caloria Termodinâmica), cal (caloria IT), eV (elétron-volt), HPh (Cavaloforça-hora), Wh (Watt-hora), flb (pé-pound), BTU.</para>
<para
>Unidades de força suportadas: W (Watt), HP (cavaloforça), PS (Pferdestaerke).</para>
<para
>Unidades de magnetismo suportadas: T (Tesla), ga (Gauss).</para>
<para
>Unidades de temperatura suportadas: C (Celsius), F (Fahrenheit), K (Kelvin).</para>
<para
>Unidades de volume suportadas: l (litro), tsp (teaspoon), tbs (tablespoon), oz (onça líquida), cup, pt (pint), qt (quart), gal (galão), barril, m3 (metro cúbico), mi3 (milha cúbica), Nmi3 (milha náutica cúbica), pol3 (polegada cúbica), ft3 (pé cúbico), yd3 (jarda cúbica), GRT ou regton (tonelada bruta).</para>
<para
>Unidades de área suportadas: m2 (metro quadrado), mi2 (milha quadrada), Nmi2 (milha Náutica quadrada), pol2 (polegada quadrada), ft2 (pé quadrado), yd2 (jarda quadrada), acre, ha (hectare).</para>
<para
>Unidades de velocidade suportadas: m/s (metros por segundo), m/h (metros por hora), mph (milhas por hora), kn (nó).</para>
<para
>Para unidades métricas qualquer um dos seguintes prefixos pode ser usado: E (exa, 1E+18), P (peta, 1E+15), T (tera, 1E+12), G (giga, 1E+09), M (mega, 1E+06), k (kilo, 1E+03), h (hecto, 1E+02), e (dekao, 1E+01), d (deci, 1E-01), c (centi, 1E-02), m (mili, 1E-03), u (micro, 1E-06), n (nano, 1E-09), p (pico, 1E-12), f (femto, 1E-15), a (atto, 1E-18).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CONVERT(Número; Da Unidade; Para Unidade)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Da unidade</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Para unidade</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CONVERT(32;"C";"F") igual à 89,6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CONVERT(3;"lbm";"kg") igual à 1,3608</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CONVERT(7,9;"cal";"J") igual à 33,0757</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2BIN">
<title
>DEC2BIN</title>
<para
>A função DEC2BIN() retorna o valor formatado como um número binário.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEC2BIN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEC2BIN(12) retorna "1100"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEC2BIN(55) retorna "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2HEX">
<title
>DEC2HEX</title>
<para
>A função DEC2HEX() retorna o valor formatado como um número hexadecimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEC2HEX(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEC2HEX(12) retorna "c"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEC2HEX(55) retorna "37"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2OCT">
<title
>DEC2OCT</title>
<para
>A função DEC2OCT() retorna o valor formatado como um número octal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEC2OCT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEC2OCT(12) retorna "14"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEC2OCT(55) retorna "67"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DELTA">
<title
>DELTA</title>
<para
>A função DELTA() retorna 1 se x é igual a y, caso contrário retorna 0. O y padrão é 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DELTA(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DELTA(1,2; 3,4) retorna 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DELTA(3; 3) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DELTA(1; TRUE) retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERF">
<title
>ERF</title>
<para
>A função ERF() retorna a função do erro. Com um único argumento, o ERF() devolve a função de erro entre 0 e esse argumento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ERF(Limite inferior, Limite superior)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Limite inferior</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Limite superior</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ERF(0,4) igual à 0,42839236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ERFC"
>ERFC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERFC">
<title
>ERFC</title>
<para
>A função ERFC() retorna a função de erro complementar.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ERFC(Limite inferior; Limite superior)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Limite inferior</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Limite superior</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ERFC(0,4) igual à 0,57160764</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ERF"
>ERF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GESTEP">
<title
>GESTEP</title>
<para
>A função GESTEP() retorna 1 se x é maior ou igual a y, caso contrário retorna 0. O y padrão é 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GESTEP(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GESTEP(1,2; 3,4) retorna 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GESTEP(3; 3) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GESTEP(0,4; TRUE) retorna 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GESTEP(4; 3) retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2BIN">
<title
>HEX2BIN</title>
<para
>A função HEX2BIN() retorna o valor formatado como um número binário.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HEX2BIN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HEX2BIN("a") retorna "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HEX2BIN("37") retorna "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2DEC">
<title
>HEX2DEC</title>
<para
>A função HEX2DEC() retorna o valor formatado como um número decimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HEX2DEC(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HEX2DEC("a") retorna 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HEX2DEC("37") retorna 55 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2OCT">
<title
>HEX2OCT</title>
<para
>A função HEX2OCT() retorna o valor formatado como um número octal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HEX2OCT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HEX2OCT("a") retorna "12" </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HEX2OCT("37") retorna "67" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMABS">
<title
>IMABS</title>
<para
>IMABS() retorna o módulo de um número complexo na forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMABS(número complexo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMABS("1.2+5i") retorna 5.1419</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMABS("-i") retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMABS("12") retorna 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMAGINARY">
<title
>IMAGINARY</title>
<para
>A função IMAGINARY(string) retorna o coeficiente imaginário de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMAGINARY(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMAGINARY("1.2+3.4i") retorna 3.4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMAGINARY("1.2") retorna 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMARGUMENT">
<title
>IMARGUMENT</title>
<para
>IMARGUMENT(número complexo) retorna o argumento de um número complexo na forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMARGUMENT(número complexo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMARGUMENT("1.2+5i") retorna 0.6072</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMARGUMENT("-i") retorna -1.57079633 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMARGUMENT("12") retorna "#Div/0"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCONJUGATE">
<title
>IMCONJUGATE</title>
<para
>IMCONJUGATE(número complexo) retorna o conjugado de um número complexo na forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCONJUGATE(número complexo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCONJUGATE("1.2+5i") retorna "1.2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCONJUGATE("-i") retorna "i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCONJUGATE("12") retorna "12"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOS">
<title
>IMCOS</title>
<para
>A função IMCOS(string) retorna o cosseno de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCOS(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCOS("1+i") retorna "0.83373-0.988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCOS("12i") retorna 81 377.4 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOSH">
<title
>IMCOSH</title>
<para
>A função IMCOSH(texto) retorna o cosseno hiperbólico de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>

<listitem
><para
>IMCOSH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCOSH("1+i") retorna "0,83373+0,988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCOSH("12i") retorna 0,84358 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOT">
<title
>IMCOT</title>
<para
>A função IMCOT(string) retorna o cotangente de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCOT(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCOT("1+i") retorna "0.21762-0.86801i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSC">
<title
>IMCSC</title>
<para
>A função IMCSC(string) retorna o cossecante de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCSC(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCSC("1+i") retorna "0.62151-0.30393i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSCH">
<title
>IMCSCH</title>
<para
>A função IMCSCH(texto) retorna o cossecante hiperbólico de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCSCH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMCSCH("1+i") retorna "0.30393-i0.62151"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMDIV">
<title
>IMDIV</title>
<para
>IMDIV() retorna a divisão de diversos números complexos na forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMDIV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMDIV(1.2;"3.4+5i") retorna "0.111597-0.164114i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMDIV("12+i";"12-i") retorna "0.986207+0.16551i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMEXP">
<title
>IMEXP</title>
<para
>IMEXP(string) retorna a potência de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMEXP(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMEXP("2-i") retorna "3.99232-6.21768i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMEXP("12i") retorna "0.843854-0.536573i" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLN">
<title
>IMLN</title>
<para
>IMLN(texto) retorna o logaritmo natural de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMLN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMLN("3-i") retorna "1.15129-0.321751i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMLN("12") retorna 2.48491 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG10">
<title
>IMLOG10</title>
<para
>O IMLOG10(texto) devolve o logaritmo de base 10 de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMLOG10(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMLOG10("3+4i") retorna "0,69897+0,402719i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG2">
<title
>IMLOG2</title>
<para
>O IMLOG2(texto) retorna o logaritmo de base 2 de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMLOG2(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMLOG2("3+4i") retorna "2,321928+1,337804i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPOWER">
<title
>IMPOWER</title>
<para
>IMPOWER(string) retorna um número complexo elevado a uma potência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMPOWER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Potência</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMPOWER("4-i";2) retorna "15-8i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMPOWER("1.2";2) retorna 1.44 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPRODUCT">
<title
>IMPRODUCT</title>
<para
>IMPRODUCT() retorna o produto de diversos números complexos na forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMPRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMPRODUCT(1.2;"3.4+5i") retorna "4.08+6i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMPRODUCT(1.2;"1i") retorna "+1.2i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMREAL">
<title
>IMREAL</title>
<para
>A função IMREAL(string) retorna o coeficiente real de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMREAL(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMREAL("1.2+3.4i") retorna 1.2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMREAL("1.2i") retorna 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSEC">
<title
>IMSEC</title>
<para
>A função IMSEC(string) retorna o secante de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSEC(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSEC("1+i") retorna "0.49833+i0.59108"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSECH">
<title
>IMSECH</title>
<para
>A função IMSECH(texto) retorna o secante hiperbólico de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSECH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSECH("1+i") retorna "0.49833-i0.59108"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSIN">
<title
>IMSIN</title>
<para
>A função IMSIN(string) retorna o seno de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSIN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSIN("1+i") retorna "1.29846+0.634964i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSIN("1.2") retorna -0.536573 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSINH">
<title
>IMSINH</title>
<para
>A função IMSINH(texto) retorna o seno hiperbólico de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSINH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSINH("1+i") retorna "0,63496+1,29846i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSINH("1,2") retorna 1,50946 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSQRT">
<title
>IMSQRT</title>
<para
>IMSQRT(string) retorna a raiz quadrada de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSQRT(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSQRT("1+i") retorna "1.09868+0.45509i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSQRT("1.2i") retorna "0.774597+0.774597i" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUB">
<title
>IMSUB</title>
<para
>IMSUB() retorna a diferença de diversos números complexos na forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSUB(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSUB(1.2;"3.4+5i") retorna "-2.2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSUB(1.2;"1i") retorna "1.2-i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUM">
<title
>IMSUM</title>
<para
>IMSUM() retorna a soma de diversos números complexos na forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSUM(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSUM(1.2;"3.4+5i") retorna "4.6+5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMSUM(1.2;"1i") retorna "1.2+i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTAN">
<title
>IMTAN</title>
<para
>A função IMTAN(texto) retorna a tangente de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMTAN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMTAN("1+i") retorna "0,27175+1,08392i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMTAN("1,2") retorna 2,57215</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTANH">
<title
>IMTANH</title>
<para
>A função IMTANH(texto) retorna a tangente hiperbólica de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMTANH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMTANH("1+i") retorna "1,08392+0,27175i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IMTANH("1,2") retorna 0,83365</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2BIN">
<title
>OCT2BIN</title>
<para
>A função OCT2BIN() retorna o valor formatado como um número binário.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OCT2BIN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>OCT2BIN("12") retorna "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>OCT2BIN("55") retorna "101101"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2DEC">
<title
>OCT2DEC</title>
<para
>A função OCT2DEC() retorna o valor formatado como um número decimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OCT2DEC(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>OCT2DEC("12") retorna 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>OCT2DEC("55") retorna 45 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2HEX">
<title
>OCT2HEX</title>
<para
>A função OCT2HEX() retorna o valor formatado como um número hexadecimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>

<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OCT2HEX(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>OCT2HEX("12") retorna "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>OCT2HEX("55") retorna "2D"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Financial">
<title
>Financeiro</title>

<sect3 id="ACCRINT">
<title
>ACCRINT</title>
<para
>A função ACCRINT retorna o juro acumulado por um seguro que paga uma taxa periódica. As frequências permitidas são 1 - anual, 2 - semestral ou 4 - quadrimestral. Base é o tipo de contagem de dias que você deseja usar: 0: US 30/360 (padrão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europeu 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACCRINT(emissão; primeiro juro; ajuste; taxa; valor; frequência; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data de emissão</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Primeiro juro</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa anual de seguro</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor igual</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de pagamentos por ano</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem de dias</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ACCRINT("28/2/2001"; "31/8/2001"; "1/5/2001"; 0,1; 1000; 2; 0) retorna 16.944</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINTM"
>ACCRINTM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACCRINTM">
<title
>ACCRINTM</title>
<para
>A função ACCRINTM retorna o juro acumulado por um seguro que paga uma taxa na data de vencimento. Base é o tipo de contagem de dias que você deseja usar: 0: US 30/360 (padrão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europeu 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACCRINTM(emissão; ajuste; taxa; valor; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data de emissão</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa anual de seguro</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor igual</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem de dias</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ACCRINTM("28/2/2001"; "31/8/2001"; 0,1; 100) retorna 5,0278</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINT"
>ACCRINT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORDEGRC">
<title
>AMORDEGRC</title>
<para
>A função AMORDEGRC calcula o valor de amortização para o sistema de contabilidade Francês, usando uma desvalorização decrescente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AMORDEGRC( Custo; dataCompra; data fim primeiro período; salvado; período; taxa; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vp</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vf</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AMORDEGRC( 1000; "2006-02-01"; "2006-12-31"; 10; 0; 0,1; 1 ) retorna 228</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="AMORLINC"
>AMORLINC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORLINC">
<title
>AMORLINC</title>
<para
>A função AMORLINC calcula o valor da amortização para o sistema de contabilidade Francês, usando uma desvalorização linear.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AMORLINC( Custo; data compra; data fim primeiro período; salvado; período; taxa; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Vp</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vf</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AMORLINC( 1000; "2004-02-01"; "2004-12-31"; 10; 0; 0,1; 1 ) retorna 91,256831</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="AMORDEGRC"
>AMORDEGRC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPOUND">
<title
>COMPOUND</title>
<para
>A função COMPOUND() retorna o valor de um investimento, dados o principal, taxa de juros nominal, frequência de capitalização e tempo. Por exemplo: $5000 a 12% de juros compostos trimestralmente por 5 anos é igual a COMPOUND(5000;0.12;4;5) ou $9030,56.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMPOUND(inicial;juros;períodos;períodos_por_ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Principal</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juros</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos por ano</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Anos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMPOUND(5000;0.12;4;5) é igual a 9030,56</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONTINUOUS">
<title
>CONTINUOUS</title>
<para
>A função CONTINUOUS() calcula o retorno continuamente capitalizado de juros, dados o principal, taxa de juros nominal e tempo em anos. Por exemplo: $1000 a 10% nominais ao ano por 1 ano é igual a CONTINUOUS(1000;,1;1) ou $1105,17. [N do T: esta modalidade de capitalização é quase inexistente no Brasil.]</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CONTINOUS(principal;juros;anos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Principal</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juros</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Anos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CONTINUOUS(1000;0.1;1) é igual a 1105.17</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUPNUM">
<title
>COUPNUM</title>
<para
>A função COUPNUM retorna o número de cupons a serem pagos entre o ajuste e o vencimento. Base é o tipo de contagem de dias que você deseja usar: 0: US 30/360 (padrão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europeu 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUPNUM(acordo; maturidade; frequência; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem de dias</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COUPNUM("28/2/2001"; "31/8/2001"; 2; 0) retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMIPMT">
<title
>CUMIPMT</title>
<para
>Calcula o pagamento de empréstimo acumulado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CUMIPMT(taxa, períodos, valor, início, fim, tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>valor</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>início</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>fim</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CUMIPMT( 0,06/12; 5*12; 100000; 5; 12; 0 ) é igual a -3562,187023</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="CUMPRINC"
>CUMPRINC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMPRINC">
<title
>CUMPRINC</title>
<para
>Calcula o pagamento principal acumulado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CUMPRINC(taxa, períodos, valor, início, fim, tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>valor</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>início</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>fim</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CUMPRINC( 0.06/12; 5*12; 100000; 5; 12; 0 ) é igual a -11904,054201</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="CUMIPMT"
>CUMIPMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DB">
<title
>DB</title>
<para
>A função DB() calcula a depreciação de um investimento por um período fornecido usando um método de declínio fixo do balancete. Mês é opcional, se omitido é assumido que vale 12.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DB(custo; valor assegurado; vida; período [;mês])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Assegurado</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Mês</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DB(8000;400;6;3) igual à 1158.40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DB(8000;400;6;3;2) igual à 1783.41</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DDB">
<title
>DDB</title>
<para
>A função DB() calcula a depreciação de um investimento por um período fornecido usando um método aritmético de declinação. O fator é opcional, se omitido é assumido que é 2. Todos os parâmetros devem ser maiores que zero.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DB(custo; valor assegurado; vida; período [;fator])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Assegurado</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Fator</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DDB(75000;1;60;12;2) retorna 1721.81</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DISC">
<title
>DISC</title>
<para
>A função DISC retorna a taxa de desconto para um seguro. Base é o tipo de contagem de dias que você deseja usar: 0: US 30/360 (padrão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europeu 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DISC(acordo; maturidade; par; retenção [; base ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Preço por valores de face de $100</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Amortização</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem de dias</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DISC("28/2/2001"; "31/8/2001"; 12; 14) retorna 0,2841</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARDE">
<title
>DOLLARDE</title>
<para
>A função DOLLARDE() retorna um preço em dólar expresso como um número decimal. O dólar fracional é o número a ser convertido e a fração é o denominador da fração.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DOLLARDE(dólar fracional; fração)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dólar Fracional</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Fração</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DOLLARDE(1,02; 16) - padrão para 1 e 2/16 - retorna 1,125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARFR"
>DOLLARFR</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARFR">
<title
>DOLLARFR</title>
<para
>A função DOLLARFR() retorna um preço em dólar expresso como uma fração. O dólar decimal é o número a ser convertido e a fração é o denominador da fração.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DOLLARFR(dólar fracional; fração)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dólar Decimal</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Fração</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DOLLARFR(1,125; 16) retorna 1,02. (1 + 2/16)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARDE"
>DOLLARDE</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION">
<title
>DURATION</title>
<para
>Retorna o número de períodos necessários para um investimento reter um valor desejado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DURATION(rate; vp; vf)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor presente (VP)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (VF)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DURATION(0.1; 1000; 2000) retorna 7.27</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION_ADD">
<title
>DURATION_ADD</title>
<para
>Retorna a duração de Macauley de um seguro de prêmio fixo em anos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DURATION_ADD(Acordo; Maturidade; Cupom; Receita; Frequência; Base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Cupom</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Rendimento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DURATION_ADD( "1998-01-01"; "2006-01-01"; 0,08; 0,09; 2; 1 ) retorna 5,9937749555</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MDURATION"
>MDURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EFFECT">
<title
>EFFECT</title>
<para
>A função EFFECT() calcula o rendimento efetivo dada uma taxa de juros nominal (alegada ou APR). Por exemplo: Juros de 8% ao ano compostos mensalmente fornecem um rendimento efetivo de EFFECT(.08;12) ou 8,3%.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EFFECT(nominal;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa de juros nominal</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EFFECT(0,08;12) igual à 0,083</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EFFECTIVE"
>EFFECTIVE</link
>&nbsp;</member>
<member
><link linkend="NOMINAL"
>NOMINAL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="EFFECTIVE">
<title
>EFFECTIVE</title>
<para
>A função EFFECTIVE() calcula a taxa efetiva para uma dada taxa de juros (taxa anual ou APR). Faz o mesmo que a EFFECT.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EFFECTIVE(nominal;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa de juros nominal</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EURO">
<title
>EURO</title>
<para
>A função EURO() converte um Euro para a moeda nacional de um determinado país da união monetária Europeia. A moeda é uma das seguintes: ATS (Áustria), BEF (Bélgica), DEM (Alemanha), ESP (Espanha), EUR (Euro), FIM (Finlândia), FRF (França), GRD (Grécia), IEP (Irlanda), ITL (Itália), LUF (Luxemburgo), NLG (Holanda) ou PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EURO(monetário)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Monetário</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EURO("DEM") igual à 1.95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EUROCONVERT"
>EUROCONVERT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EUROCONVERT">
<title
>EUROCONVERT</title>
<para
>A função EUROCONVERT() converte um número de uma moeda nacional para outra moeda da União Europeia, usando o Euro como intermediário. A moeda é uma das seguintes: ATS (Áustria), BEF (Bélgica), DEM (Alemanha), ESP (Espanha), EUR (Euro), FIM (Finlândia), FRF (França), GRD (Grécia), IEP (Irlanda), ITL (Itália), LUF (Luxemburgo), NLG (Holanda) ou PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EUROCONVERT(número; moeda origem; moeda destino)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Moeda de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Moeda de destino</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EUROCONVERT(1; "EUR"; "DEM") é igual a 1,95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EURO"
>EURO</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV">
<title
>FV</title>
<para
>A função FV() retorna o valor futuro de um investimento, dados o principal, a taxa de juros e o tempo decorrido. Se você tem $1000 em uma conta bancária rendendo 8% de juros, após dois anos você terá FV(1000;0,08;2) ou $1166,40.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FV(valor atual;rendimento;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor presente</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FV(1000;0.08;2) retorna 1166.40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV_ANNUITY">
<title
>FV_ANNUITY</title>
<para
>A função FV_ANNUITY() devolve o valor futuro duma sequência de pagamentos dado o valor do pagamento, a taxa de juros e o número de períodos. Por exemplo, se você recebe 500 reais por ano em 20 anos e o investir a 8%, o total ao fim de 20 anos será FV_annuity (500;0,08;20) ou 22.880,98 reais. Esta função assume que os pagamentos são feitos ao fim de cada período.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FV_ANNUITY(quantia;taxa;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Pagamento por período</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juros</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FV_ANNUITY(1000;0,05;5) é igual a 5525,63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTRATE">
<title
>INTRATE</title>
<para
>A função INTRATE retorna a taxa de juros para um seguro completamente investido. Base é o tipo de contagem de dias que você deseja usar: 0: US 30/360 (padrão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europeu 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INTRATE(ajuste; vencimento; investimento; amortização; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Investimento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Amortização</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem de dias</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INTRATE("28/2/2001"; "31/8/2001"; 1000000; 2000000; 1) retorna 1,98</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IPMT">
<title
>IPMT</title>
<para
>IPMT calcula a quantia de um pagamento de uma anuidade indo para um juro.</para>
<para
>Taxa é a taxa de juros periódica.</para>
<para
>Período é o período de amortização. 1 para o primeiro e NPER para o último período.</para>
<para
>NPER é o número total de períodos durante os quais a anuidade é paga.</para>
<para
>PV é o valor atual na sequência de pagamentos.</para>
<para
>FV (opcional) é o valor (futuro) desejado. Padrão: 0.</para>
<para
>Tipo (opcional) define a data devida. 1 para pagamento no início de um período e 0 (padrão) para pagamento no final do período.</para>
<para
>O exemplo mostra o juro pago no último ano de um empréstimo de três anos. A taxa de juros é de 10 por cento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IPMT(Taxa; Período; NPer; VP; VF; Tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores presentes</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (opcional)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>IPMT(0,1;3;3;8000) igual à -292,45</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IRR">
<title
>IRR</title>
<para
>A função IRR calcula a taxa interna de retorno para uma série de fluxos monetários.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IRR( Valores[; Adivinhar = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Adivinhar</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="XIRR"
>XIRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISPMT">
<title
>ISPMT</title>
<para
>Calcula o juro pago para um período fornecido de um investimento.</para>
<para
>Taxa é a taxa de juros periódica.</para>
<para
>Período é o período de amortização. 1 para o primeiro e NPer para o último período.</para>
<para
>NPer é o número total de períodos durante os quais a anuidade é paga.</para>
<para
>PV é o valor atual na sequência de pagamentos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISPMT(Taxa; Período; NPer; VP)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Valor presente (VP)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISPMT(0,1; 1; 3; 8000000) igual à -533333</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEVEL_COUPON">
<title
>LEVEL_COUPON</title>
<para
>A função LEVEL_COUPON() calcula o valor de um título 'level-coupon'. Por exemplo: se a taxa de juros é 10%, um título de $1000 com cupons semianuais a uma taxa de 13% que amadurece em 4 anos vale LEVEL_COUPON( 1000; .13; 2; 4; .1) ou $1096.95.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEVEL_COUPON(valor de face;taxa do cupom;cupons por ano;anos;taxa de mercado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de face</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa do cupom</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Cupons por ano</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Anos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juros do mercado</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LEVEL_COUPON(1000;.13;2;4;.1) igual à 1096.95</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDURATION">
<title
>MDURATION</title>
<para
>A função MDURATION() irá calcular a duração de Macauley modificada para um seguro de prêmio fixo em anos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MDURATION( Acordo; Maturidade; Cupão; Receita; Frequência; [ Base=0 ])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Cupom</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Rendimento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MDURATION("2004-02-01"; "2004-05-31"; 0,08; 0,09; 2; 0) retorna 0,316321106</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DURATION"
>DURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIRR">
<title
>MIRR</title>
<para
>A função MIRR() irá calcular a taxa interna modificada de retorno (IRR) de uma série de investimentos periódicos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MIRR(valores; investimento; reinvestimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Investimento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Reinvestimento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MIRR({100;200;-50;300;-200}, 5%, 6%) é igual a 34,2823387842%</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOMINAL">
<title
>NOMINAL</title>
<para
>A função NOMINAL() calcula a taxa de juros nominal (alegada) dada uma taxa de juros efetiva (anualizada) capitalizada a um intervalo regular. Por exemplo: para obter 8% de uma conta capitalizada mensalmente, você precisa de um retorno NOMINAL(.08;12) ou 7,72%.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NOMINAL(efetivo;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa de juros efetiva</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NOMINAL(0.08;12) igual a 0.0772</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPER">
<title
>NPER</title>
<para
>Retorna o número de períodos de um investimento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NPER(taxa;pagamento;vp;vf;tipe)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Pagamento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor presente (VP)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (VF - opcional)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NPER(0.1; -100; 1000) igual à 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NPER(0.06; 0; -10000; 20000 ;0) retorna 11.906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPV">
<title
>NPV</title>
<para
>O valor presente líquido (NPV) para uma série de fluxos monetários periódicos.</para>
<para
>Calcula o valor líquido atual para uma série de fluxos monetários periódicos com a taxa de desconto. Os valores deverão ser positivos se forem créditos ou negativos se forem débitos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NPV(Taxa; Valores)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NPV(100%;4;5;7) = 4,125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLPRICE">
<title
>ODDLPRICE</title>
<para
>A função ODDLPRICE calcula o valor do seguro por cada 100 unidades monetárias do valor de face. O seguro tem uma última data de juro irregular.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ODDLPRICE( Acordo; Maturidade; Último; Taxa; Receita Anual; Retenção; Frequência [; Base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Último</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Receita Anual</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Amortização</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ODDLPRICE(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;5%;100;2) retorna 90,991042345</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLYIELD">
<title
>ODDLYIELD</title>
<para
>A função ODDLYIELD calcula a receita do seguro que tem uma última data de juro irregular.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ODDLYIELD( Acordo; Maturidade; Último; Taxa; Preço; Retenção; Frequência [; Base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Último</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Preço</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Amortização</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ODDLYIELD(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;91;100;2) retorna 4,997775351</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ODDLPRICE"
>ODDLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PMT">
<title
>PMT</title>
<para
>PMT retorna o aumento do pagamento para um empréstimo baseado numa taxa de juros constante e pagamentos constantes (cada pagamento possui valor igual).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PMT(taxa; períodos ; vp [; vf = 0 [; tipo = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos (NPer)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor presente (VP)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (VF - opcional)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PMT(0,1; 4; 10000) igual à -3154,71</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PPMT">
<title
>PPMT</title>
<para
>PPMT calcula a quantia de um pagamento de uma anuidade indo para o principal.</para>
<para
>Taxa é a taxa de juros periódica.</para>
<para
>Período é o período de amortização. 1 para o primeiro e NPER para o último período.</para>
<para
>NPER é o número total de períodos durante os quais a anuidade é paga.</para>
<para
>PV é o valor atual na sequência de pagamentos.</para>
<para
>FV (opcional) é o valor (futuro) desejado. Padrão: 0.</para>
<para
>Tipo (opcional) define a data devida. 1 para pagamento no início de um período e 0 (padrão) para pagamento no final do período.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PPMT(Taxa; Período; Núm Períodos; VP [; VF = 9 [; Tipo = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor presente</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (opcional)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PPMT(0,0875;1;36;5000;8000;1) igual à -18,48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRICEMAT">
<title
>PRICEMAT</title>
<para
>O PRICEMAT calcula o preço por cada 100 unidades monetárias do valor de face do seguro que paga o juro na data de maturidade.</para>
<para
>Método de cálculo de base</para>
<para
>0 Método dos EUA, 12 meses, com meses de 30 dias</para>
<para
>1 Número atual de dias no ano, número atual de dias nos meses </para>
<para
>2 360 dias num ano, número atual de dias nos meses</para>
<para
>4 365 dias num ano, número atual de dias nos meses</para>
<para
>5 Método Europeu, 12 meses, cada mês com 30 dias</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PRICEMAT(acordo final; maturidade; acordo; taxa; receita [; base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Rendimento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PRICEMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);6%;5%) retorna 103,819218241</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV">
<title
>PV</title>
<para
>A função PV() retorna o valor atual de um investimento -- o valor que hoje geraria uma quantidade de dinheiro no futuro, fornecido o tempo e a taxa de juros. Por exemplo, se você quer ter $1166,40 para comprar um computador novo e pretende comprá-lo em dois anos com uma taxa de 8% ao ano, você precisa depositar hoje PV(1166,4;0,08;2) ou $1000.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PV(valor_futuro;juros;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor futuro</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juros</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PV(1166,40;0,08;2) retorna 1000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV_ANNUITY">
<title
>PV_ANNUITY</title>
<para
>A função PV_ANNUITY() devolve o valor atual de uma anuidade ou sequência de pagamentos. Por exemplo, um bilhete de loteria de "um milhão de reais" que paga 50.000 reais por 20 anos, com uma taxa de juro de 5%, vale na realidade PV_ANNUITY(50000;0,05;20) ou 623 111 reais. Esta função assume que os pagamentos são feitos no fim de cada período.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PV_ANNUITY(quantidade;taxa;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Pagamento por período</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juros</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PV_ANNUITY(1000;0,05;5) é igual a 4329,48</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RATE">
<title
>RATE</title>
<para
>A função RATE() calcula a taxa de juro fixa por período de um investimento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RATE(nper;pagamento;vp;vf;tipo;adivinhar))</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Período de pagamento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Pagamentos regulares</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor presente</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Adivinhar</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RATE(4*12;-200;8000) igual a 0.007701472</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RECEIVED">
<title
>RECEIVED</title>
<para
>A função RECEIVED retornou a quantia recebida na data de vencimento por um seguro investido. Base é o tipo de contagem de dias que você deseja usar. 0: US 30/360 (padrão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europeu 30/365. A data de ajuste deve ser anterior à data de vencimento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RECEIVED(ajuste; vencimento; investimento; desconto; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Investimento</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RECEIVED("28/2/2001"; "31/8/2001"; 1000; 0,05; 0) retorna 1.025,787</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RRI">
<title
>RRI</title>
<para
>A função RRI calcula a taxa de juro resultante do lucro (retorno) de um investimento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RRI( P; VP; VF)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Vp</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vf</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RRI(1;100;200) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLN">
<title
>SLN</title>
<para
>A função SLN() determinará a linha de depreciação de um investimento por um período simples. Custo é a quantidade que você paga pelo investimento. Assegurado é o valor de seu investimento no fim do período. Vida é o número de períodos através do qual seu investimento será depreciado. SLN divide o custo pela vida de um investimento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLN(custo; valor assegurado; vida)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Assegurado</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SLN(10000;700;10) igual à 930</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SYD"
>SYD</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SYD">
<title
>SYD</title>
<para
>A função SYD() calcula o somatório de anos de depreciação para um investimento baseado num custo, valor assegurado, vida antecipada, e um período específico. Este método acelera a taxa de depreciação, então gastos cada vez mais depreciativos ocorrem nos primeiros períodos do que nos últimos. O custo de depreciação é menor que o valor assegurado. A vida útil é o número de períodos (tipicamente anos) pelo qual o investimento é depreciado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SYD(custo; valor assegurado; vida; período)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Assegurado</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SYD(5000; 200; 5; 2) igual à 1280</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLEQ">
<title
>TBILLEQ</title>
<para
>A função TBILLEQ retorna a obrigação equivalente para um papel do tesouro público. A data de vencimento deve ser posterior à data de ajuste mas dentro de 365 dias.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TBILLEQ(ajuste; vencimento; desconto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TBILLEQ("28/2/2001"; "31/8/2001"; 0,1) retorna 0,1068</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLPRICE">
<title
>TBILLPRICE</title>
<para
>A função TBILLPRICE retorna o preço por valores de $100 para um papel do tesouro público. A data de vencimento deve ser posterior à data de ajuste mas dentro de 365 dias. A taxa de desconto deve ser positiva.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TBILLPRICE(ajuste; vencimento; desconto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TBILLPRICE("28/2/2001"; "31/8/2001"; 0,05) retorna 97,4444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLYIELD">
<title
>TBILLYIELD</title>
<para
>A função TBILLYIELD retorna o rendimento para um papel do tesouro público. A data de vencimento deve ser posterior à data de ajuste mas dentro de 365 dias. O preço deve ser positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TBILLYIELD(ajuste; vencimento; preço)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Preço por valores de face de $100</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TBILLYIELD("28/2/2001"; "31/8/2001"; 600) retorna -1,63</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VDB">
<title
>VDB</title>
<para
>O VDB calcula a permissão de desvalorização de um bem com um determinado valor inicial, um tempo de vida útil esperado e um valor final de salvação para um dado período, usando o método de balanço em declinação com taxa variável.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VDB(custo; salvado; vida; período-início; período-fim; [; fator-desvalorização = 2 [; mudar = falso ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Preço</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Amortização</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VDB(10000;600;10;0;0,875;1,5) retorna 1312,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XIRR">
<title
>XIRR</title>
<para
>A função XIRR calcula a taxa interna de retorno para uma série não-periódica de fluxos monetários.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>XIRR( Valores; Data[; Adivinhar = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Datas</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Adivinhar</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>XIRR(B1:B4;C1:C4) Supondo que B1:B4 contém -20000, 4000, 12000, 8000 enquanto C1:C4 contém "=DATE(2000;1;1)", "=DATE(2000;6;1)", "=DATE(2000;12;30)", "=DATE(2001;3;1)" retorna 0.2115964</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XNPV">
<title
>XNPV</title>
<para
>A função XNPV calcula o valor presente líquido para uma série de fluxos monetários.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>XNPV( Taxa; Valores; Datas )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Datas</seg
><seg
>Data</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>XNPV(5%;B1:B4;C1:C4), supondo que B1:B4 contém -20000, 4000, 12000, 8000 enquanto C1:C4 contém "=DATE(2000;1;1)", "=DATE(2000;6;1)", "=DATE(2000;12;30)", "=DATE(2001;3;1)", retorna 2907,83187</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="NPV"
>NPV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDDISC">
<title
>YIELDDISC</title>
<para
>O YIELDDISC calcula a receita de um seguro descontado por cada 100 unidades monetárias do valor de face.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YIELDDISC(acordo; maturidade; preço, retenção, base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Preço</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Amortização</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>YIELDDISC(DATE(1990;6;1);DATE(1990;12;31);941,66667;1000) retorna 0,106194684</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDMAT">
<title
>YIELDMAT</title>
<para
>A função YIELDMAT calcula a receita do seguro que paga os juros na data de maturidade.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YIELDMAT( Acordo Atual; Maturidade; Acordo; Taxa; Preço; Base )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ajuste</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Vencimento</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Preço</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>YIELDMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990; 1; 1); 6%;103,819218241) retorna 0,050000000</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="YIELDDISC"
>YIELDDISC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZERO_COUPON">
<title
>ZERO_COUPON</title>
<para
>A função ZERO_COUPON() calcula o valor de um título 'zero-coupon' (desconto puro). Por exemplo: Se a taxa de juros é 10%, um título de $1000 que amadurece em 20 anos vale ZERO_COUPON(1000; .1; 20) ou $148,64.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ZERO_COUPON(valor de face;taxa;anos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de face</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juros</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Anos</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ZERO_COUPON(1000;.1;20) igual à 148.64</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2
><sect2 id="Information">
<title
>Informações</title>

<sect3 id="ERRORTYPE">
<title
>ERRORTYPE</title>
<para
>A função ERRORTYPE() converte um erro para um número. Se o valor não for um erro, é devolvido um erro. Caso contrário, é devolvido um código numérico. Os códigos de erro estão modelados no Excel.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ERRORTYPE(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Erro</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ERRORTYPE(NA()) retorna 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ERRORTYPE(0) retorna um erro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FILENAME">
<title
>FILENAME</title>
<para
>Retorna o nome do arquivo atual. Se o arquivo atual ainda não foi salve, um texto vazio é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FILENAME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FORMULA">
<title
>FORMULA</title>
<para
>A função FORMULA() retorna a fórmula de uma célula como uma string.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FORMULA(A1) retorna "=SUM(1+2)" se a célula A1 contém tal fórmula.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INFO">
<title
>INFO</title>
<para
>A função INFO() retorna informação sobre o ambiente operacional atual. Tipos de parâmetros especificam que tipo de informação você deseja retornar. Pode ser um dos seguintes: "directory" retorna o caminho do diretório atual, "numfile" retorna número de documentos ativos, "release" retorna a versão do &sheets; como texto, "recalc" retorna o modo atual de recálculo: "Automatic" ou "Manual", "system" retorna o nome do ambiente operacional, "osversion" retorna a versão do sistema operacional atual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INFO(tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo de informação</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISBLANK">
<title
>ISBLANK</title>
<para
>A função ISBLANK() retorna Verdadeiro se o parâmetro é vazio. De outro modo ela retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISBLANK(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISBLANK(A1) retorna True se A1 é vazio</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISBLANK(A1) retorna False se A1 possui um valor</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISDATE">
<title
>ISDATE</title>
<para
>A função ISDATE() retorna Verdadeiro se o parâmetro é um valor de data. Caso contrário retorna Falso</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISDATE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISDATE("2000-2-2") retorna Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISDATE("olá") retorna False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERR">
<title
>ISERR</title>
<para
>A função ISERR() retorna Verdadeiro se o parâmetro é um erro que não o N/D. Caso contrário, retorna Falso. Use o ISERROR() se quiser incluir também o erro N/D.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISERR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERROR">
<title
>ISERROR</title>
<para
>A função ISERROR() devolve Verdadeiro se o parâmetro é um erro de qualquer tipo. Caso contrário devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISERROR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISEVEN">
<title
>ISEVEN</title>
<para
>A função ISEVEN() retorna Verdadeiro se o número é par. Caso contrário, retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISEVEN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISEVEN(12) retorna Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISEVEN(-7) retorna Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISFORMULA">
<title
>ISFORMULA</title>
<para
>A função ISFORMULA() retorna Verdadeiro, se a célula referenciada tiver uma fórmula. Caso contrário, retorna um valor falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISFORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLOGICAL">
<title
>ISLOGICAL</title>
<para
>A função ISLOGICAL() retorna Verdadeiro se o parâmetro é um valor booleano. Caso contrário retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISLOGICAL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISLOGICAL(A1
>A2) retorna True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISLOGICAL(12) retorna False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNA">
<title
>ISNA</title>
<para
>A função ISNA() retorna Verdadeiro se o parâmetro é um erro N/D. Caso contrário devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNONTEXT">
<title
>ISNONTEXT</title>
<para
>A função ISNONTEXT() devolve Verdadeiro se o parâmetro não é uma sequência de texto. Caso contrário, devolve Falso. Faz o mesmo que o ISNOTTEXT.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNONTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISNONTEXT(12) retorna Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISNONTEXT("olá") retorna Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNOTTEXT"
>ISNOTTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNOTTEXT">
<title
>ISNOTTEXT</title>
<para
>A função ISNOTTEXT() devolve Verdadeiro se o parâmetro não é uma sequência de texto. Caso contrário, devolve Falso. Faz o mesmo que a ISNONTEXT.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNOTTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNOTTEXT(12) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNOTTEXT("alô") devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNONTEXT"
>ISNONTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUM">
<title
>ISNUM</title>
<para
>A função ISNUM() devolve Verdadeiro se o parâmetro é um valor numérico; caso contrário devolve Falso. Faz o mesmo que a ISNUMBER.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNUM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNUM(12) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNUM(alô) devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNUMBER"
>ISNUMBER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUMBER">
<title
>ISNUMBER</title>
<para
>A função ISNUMBER() devolve Verdadeiro se o parâmetro é um valor numérico; caso contrário devolve Falso. Faz o mesmo que a ISNUM.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNUMBER(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISNUMBER(12) retorna Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISNUMBER(olá) retorna Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNUM"
>ISNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISODD">
<title
>ISODD</title>
<para
>A função ISODD() retorna Verdadeiro se o número é ímpar. Caso contrário retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISODD(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISODD(12) retorna Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISODD(-7) retorna Verdadeiro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISREF">
<title
>ISREF</title>
<para
>A função ISREF() retorna Verdadeiro se o parâmetro refere-se a uma referência. Caso contrário retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISREF(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISREF(A12) retorna Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISREF("olá") retorna Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTEXT">
<title
>ISTEXT</title>
<para
>A função ISTEXT() retorna Verdadeiro se o parâmetro é um texto (string). Caso contrário retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISTEXT(12) retorna Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISTEXT("olá") retorna Verdadeiro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTIME">
<title
>ISTIME</title>
<para
>A função ISTIME() retorna Verdadeiro se o parâmetro é um valor de tempo. Caso contrário, retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISTIME(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISTIME("12:05") retorna Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ISTIME("olá") retorna False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="N">
<title
>N</title>
<para
>A função N() converte um valor para um número. Se o valor é ou refere-se à um número, esta função retorna um número. Se o valor é Verdadeiro, a função retorna 1. Se o valor é uma data, a função retorna o número de série daquela data. Qualquer outro valor faz a função retornar 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>N(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>N(3.14) retorna 3.14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>N("7") retorna 0 (porque "7" é um texto)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NA">
<title
>NA</title>
<para
>A função NA() retorna o valor do erro de constante, N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Erro</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NA()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TYPE">
<title
>TYPE</title>
<para
>A função TYPE() retorna 1 se o valor é um número, 2 se ele é um texto, 4 se o valor é um valor lógico, 16 se é um valor de erro ou 64 se o valor é uma matriz. Se o valor da célula contém uma fórmula, então a função retorna o tipo de resultado da fórmula.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>

<listitem
><para
>TYPE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TYPE(A1) retorna 2, se A1 contém "Texto"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TYPE(-7) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TYPE(A2) retorna 1, se A2 contém "=CURRENTDATE()"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Logical">
<title
>Lógico</title>

<sect3 id="AND">
<title
>AND</title>
<para
>A função AND() retorna Verdadeiro se todos os valores forem também verdadeiros. Caso contrário, retorna Falso (a menos que qualquer dos valores sejam errados - nesse caso, retorna um erro).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AND(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AND(true;true;true) retorna True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AND(true;false) retorna False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FALSE">
<title
>FALSE</title>
<para
>A função FALSE() retorna o valor booleano de FALSO.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FALSE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FALSE() retorna FALSO</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IF">
<title
>IF</title>
<para
>A função IF() é uma função condicional. Esta função retorna o segundo parâmetro se a condição for Verdadeira. Caso contrário, retorna o terceiro parâmetro (que é falso, por padrão).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IF(condição;se_verdadeiro;se_falso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Condição</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Se verdadeiro</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem>
<seglistitem
><seg
>Se falso</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A1=4; A2=6; IF(A1
>A2;5;3) retorna 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFERROR">
<title
>IFERROR</title>
<para
>Retorna X a menos que seja um erro; nesse caso, retorna um valor alternativo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IFERROR(Qualquer X;Qualquer Alternativa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer X</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem>
<seglistitem
><seg
>Qualquer Alternativa</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IFERROR(A1;A2) retorna o conteúdo de A1, caso esse conteúdo não seja inválido; caso contrário, retornará o conteúdo de A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFNA">
<title
>IFNA</title>
<para
>Retorna X a menos que seja um N/D; nesse caso, retorna um valor alternativo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IFNA(Qualquer X;Qualquer Alternativa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer X</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem>
<seglistitem
><seg
>Qualquer Alternativa</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IFNA(A1;A2) retorna o conteúdo de A1, caso esse conteúdo não seja um valor de erro #N/D; caso contrário, é retornado o conteúdo de A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NAND">
<title
>NAND</title>
<para
>A função NAND() retorna Verdadeiro se pelo menos um dos valores é falso. Caso contrário retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NAND(valor;valor;....)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NAND(true;false;false) retorna True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NAND(true;true) retorna False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOR">
<title
>NOR</title>
<para
>A função NOR() retorna Verdadeiro se todos os valores dados como parâmetros são do tipo booleano e têm o valor Falso. Do contrário, retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NOR(valor;valor;....)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NOR(true;false;false) retorna False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NOR(false;false) retorna True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOT">
<title
>NOT</title>
<para
>A função NOT() retorna Verdadeiro se o valor for Falso e retorna Falso se o valor for Verdadeiro. Retorna um erro no caso de a entrada ser um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NOT(booleano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor lógico</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NOT(false) retorna True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NOT(true) retorna False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OR">
<title
>OR</title>
<para
>A função OR() retorna Verdadeiro se pelo menos um dos valores for verdadeiro. Caso contrário, retorna um valor Falso (a menos que qualquer dos valores seja um erro, onde então retorna um erro).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>OR(false;false;false) retorna False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>OR(true;false) retorna True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUE">
<title
>TRUE</title>
<para
>A função TRUE() retorna o valor booleano de VERDADEIRO.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRUE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TRUE() retorna VERDADEIRO</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XOR">
<title
>XOR</title>
<para
>A função XOR() retorna Falso se o número de valores Verdadeiros for par. Caso contrário, retorna Verdadeiro. Retorna um erro se algum dos argumentos for um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>XOR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma faixa de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>XOR(false;false;false) retorna True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>XOR(true;false) retorna True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Lookup---Reference">
<title
>Pesquisa e referência</title>

<sect3 id="ADDRESS">
<title
>ADDRESS</title>
<para
>O ADDRESS cria uma célula de endereço. O parâmetro Linha é o número da linha e Coluna é o número da coluna.</para>
<para
>Número absoluto especifica o tipo de referência: 1 ou omitido = Absoluto, 2 = Linha absoluta, coluna relativa, 3 = Linha relativa, coluna absoluta e 4 - Relativo.</para>
<para
>Estilo A1 especifica o estilo do endereço a retornar. Se A1 é configurado para VERDADEIRO (padrão) o endereço é retornado no estilo A1, se ele é configurado para FALSO no estilo R1C1.</para>
<para
>Nome da planilha é o texto especificando o nome de uma planilha.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ADDRESS(linha; coluna; absoluto; estilo; nome da planilha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número da linha</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número da coluna</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número absoluto (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Estilo A1 (opcional)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Nome da planilha</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ADDRESS(6; 4) retorna $D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ADDRESS(6; 4; 2) retorna D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ADDRESS(6; 4; 2; FALSE; "Plan1") retorna Plan1!R6C[4]</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ADDRESS(6; 4; 1; FALSE; "Plan1") retorna Plan1!R6C4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ADDRESS(6; 4; 4; TRUE; "Plan1") retorna Plan1!D6</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AREAS">
<title
>AREAS</title>
<para
>Retorna o número de áreas num string de referência. Uma área pode ser uma célula simples ou um conjunto de células.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AREAS(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AREAS(A1) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AREAS((A1; A2:A4)) retorna 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CELL">
<title
>CELL</title>
<para
>Retorna informações sobre a posição, a formatação ou o conteúdo de uma referência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CELL(tipo; referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CELL("COL", C7) retorna 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CELL("ROW", C7) retorna 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CELL("ADDRESS", C7) retorna $C$7</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHOOSE">
<title
>CHOOSE</title>
<para
>Retorna o parâmetro especificado pelo índice.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CHOOSE(índice; parâmetro1; parâmetro2;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Índice</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Argumentos</seg
><seg
></seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CHOOSE(1; "1st"; "2nd") retorna "1st"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CHOOSE(2; 3; 2; 4) retorna 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMN">
<title
>COLUMN</title>
<para
>A função COLUMN retorna a coluna da referência de célula fornecida. Se nenhum parâmetro for especificado a coluna da célula atual é retornada.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COLUMN(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COLUMN(A1) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COLUMN(D2) retorna 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMNS">
<title
>COLUMNS</title>
<para
>A função COLUMNS retorna o número de colunas na referência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COLUMNS(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COLUMNS(A1:C3) retorna 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COLUMNS(D2) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HLOOKUP">
<title
>HLOOKUP</title>
<para
>Procura por um valor correspondente na primeira linha da tabela indicada, retornando o valor da linha indicada.</para>
<para
>Procura o 'valor de pesquisa' na primeira linha da 'fonte de dados'. Se existir um valor correspondente, o valor na 'linha' e a coluna onde o valor foi encontrado, são então devolvidos. Se o 'ordenado' for verdadeiro (padrão), assume-se que a primeira linha está ordenada. A pesquisa irá terminar se o 'valor de pesquisa' for inferior ao valor comparado atualmente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto/Numérico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HLOOKUP(Valor de pesquisa; fonte de dados; Linha; Ordenado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor da procura</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Fonte de dados</seg
><seg
>Lista</seg
></seglistitem>
<seglistitem
><seg
>Linha</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Ordenado (opcional)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDEX">
<title
>INDEX</title>
<para
>Se for indicado um intervalo, devolve o valor guardado numa dada linha/coluna. Se for indicada uma célula que contenha uma lista, então será devolvido um elemento da lista.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INDEX(célula, linha, coluna)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Linha</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Coluna</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INDEX(A1:C3;2;2) retorna o conteúdo do B2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INDEX(A1;2;2), se o A1 for o resultado do cálculo de uma lista, retorna o seu elemento (2,2).</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDIRECT">
<title
>INDIRECT</title>
<para
>Retorna o conteúdo da célula especificada pelo texto de referência. O segundo parâmetro é opcional.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INDIRECT(Texto de referência, estilo a1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Estilo A1 (opcional)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INDIRECT(A1), A1 contém "B1", e B1 1 =
> retorna 1</para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INDIRECT("A1"), retorna conteúdo de A1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOOKUP">
<title
>LOOKUP</title>
<para
>A função LOOKUP procura pelo primeiro parâmetro do vetor de procura. Ela devolve um valor no vetor de resultado com o mesmo índice que o valor correspondente no vetor de procura. Se o valor não estiver no vetor de procura, irá obter o menor a seguir. Se não corresponder a nenhum valor no vetor de procura, é devolvido um erro. O vetor de procura deverá estar por ordem ascendente e os vetores de procura e do resultado deverão ter o mesmo tamanho. Os valores numéricos, de texto e booleanos são reconhecidos. A comparação entre cadeias de caracteres não faz distinção entre maiúsculas e minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOOKUP(valor, vetor de procura, vetor de resultado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor da procura</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Vetor de procura</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Vetor de resultado</seg
><seg
>Texto/Numérico</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOOKUP(1.232; A1:A6; B1:B6) para A1 = 1, A2 = 2 retorna o valor de B1.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MATCH">
<title
>MATCH</title>
<para
>Procura um valor de pesquisa dentro de uma determinada região, devolvendo a sua posição (começando em 1). O tipo de correspondência poderá ser -1, 0 ou 1, definindo como será pesquisado o valor. Se o tipo for 0, é devolvido o índice do primeiro valor que corresponda ao texto procurado. Se o tipo for igual a 1 (ou omitido), é devolvido o índice do primeiro valor que seja menor ou igual ao valor a pesquisa, sendo os valores na região de pesquisa ordenados de forma ascendente. Se o tipo de ocorrência for -1, é procurado o valor menor que seja maior ou igual ao valor a procurar, tendo a região de pesquisa que estar ordenada de forma descendente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MATCH(Valor a pesquisar; Região da pesquisa; Tipo de correspondência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Pesquisar valor</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Pesquisar região</seg
><seg
>Referência/Lista</seg
></seglistitem>
<seglistitem
><seg
>Tipo de correspondência (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLE.OPERATIONS">
<title
>MULTIPLE.OPERATIONS</title>
<para
>O MULTIPLE.OPERATIONS executa a expressão da fórmula indicada pela Célula da Fórmula e todas as expressões de que ela depende, substituindo todas as referências à Célula da Linha por referências à Substituição da linha, fazendo o mesmo para a coluna. A função pode ser usada para criar facilmente tabelas de expressões que dependam de dois parâmetros de entrada.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto/Numérico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MULTIPLE.OPERATIONS(Célula da fórmula; Célula da linha; Substituição da linha; Célula da coluna; Substituição da coluna)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Célula da fórmula</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Célula da linha</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Substituição da linha</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Célula da coluna (opcional)</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Substituição da coluna (opcional)</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OFFSET">
<title
>OFFSET</title>
<para
>Modifica a posição e dimensão de uma referência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OFFSET(Reference referência; Integer posicaoLinha; Integer posicaoColuna; Integer novaAltura; Integer novaLargura)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência ou intervalo</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Número de linhas do deslocamento</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de colunas do deslocamento</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Altura do intervalo de deslocamento (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Largura do intervalo de deslocamento (opcional)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROW">
<title
>ROW</title>
<para
>A função ROW retorna a linha da referência de célula fornecida. Se nenhum parâmetro for especificado a linha da célula atual é retornada.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROW(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROW(A1) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROW(D2) retorna 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROWS">
<title
>ROWS</title>
<para
>A função ROWS retorna o número de linhas numa referência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROWS(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROWS(A1:C3) retorna 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROWS(D2) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEET">
<title
>SHEET</title>
<para
>Retorna o número da planilha da referência ou do texto que representa um nome de planilha.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SHEET(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SHEET(Planilha1!C7) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SHEET(Planilha2!C7) retorna 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEETS">
<title
>SHEETS</title>
<para
>Retorna o número de planilhas numa referência ou no documento atual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SHEETS(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VLOOKUP">
<title
>VLOOKUP</title>
<para
>Procura por um valor correspondente na primeira coluna da tabela indicada, retornando o valor da coluna indicada.</para>
<para
>Procura o 'valor de pesquisa' na primeira coluna da 'fonte de dados'. Se existir um valor correspondente, o valor na 'coluna' e a linha onde o valor foi encontrado, são então devolvidos. Se o 'ordenado' for verdadeiro (padrão), assume-se que a primeira coluna está ordenada. A pesquisa irá terminar se o 'valor de pesquisa' for inferior ao valor comparado atualmente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto/Numérico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VLOOKUP(Valor de pesquisa; fonte de dados; Coluna; Ordenado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor da procura</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Fonte de dados</seg
><seg
>Lista</seg
></seglistitem>
<seglistitem
><seg
>Coluna</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Ordenado (opcional)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Math">
<title
>Matemática</title>

<sect3 id="ABS">
<title
>ABS</title>
<para
>A função ABS() retorna o valor absoluto do número de ponto flutuante x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ABS(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ABS(12,5) igual à 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ABS(-12,5) igual à 12,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEIL">
<title
>CEIL</title>
<para
>A função CEIL() arredonda o valor de 'x' para cima, com o primeiro inteiro após o valor de entrada, retornando um valor com precisão dupla.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um inteiro (como 0, -5, 14 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CEIL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CEIL(12,5) igual à 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CEIL(-12,5) igual à -12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEILING">
<title
>CEILING</title>
<para
>A função CEILING() arredonda o valor de 'x' para cima (para longe do zero) para o múltiplo mais próximo de Grau Significativo, com o primeiro inteiro após o valor de entrada. O valor padrão do Grau Significativo é 1 (ou -1 se o número for negativo), o que significa um arredondamento para o inteiro mais próximo. Se o parâmetro Modo não for zero, a função arredonda a partir do zero, ao invés de para frente do positivo infinito.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um inteiro (como 0, -5, 14 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CEILING(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Significância (opcional)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Modo (opcional)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CEILING(12,5) igual à 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CEILING(6,43; 4) igual à 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CEILING(-6,43; -4; 1) é igual a -8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CEILING(-6,43; -4; 0) é igual a -4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNT">
<title
>COUNT</title>
<para
>Esta função retorna a contagem dos argumentos inteiros e flutuantes passados. Você pode usar um intervalo: COUNT(A1:B5) ou usar uma lista de valores como COUNT(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUNT(valor;valor;valor...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COUNT(-5;"KSpread";2) retorna 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COUNT(5) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTA">
<title
>COUNTA</title>
<para
>Esta função retorna a contagem de todos os argumentos não vazios passados. Você pode usar um intervalo: COUNT(A1:B5) ou usar uma lista de valores como COUNT(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUNTA(valor;valor;valor...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COUNTA(-5;"KSpread";2) retorna 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COUNTA(5) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTBLANK">
<title
>COUNTBLANK</title>
<para
>Esta função retorna a contagem de todas as células vazias dentro do intervalo de células.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUNTBLANK(intervalo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de células</seg
><seg
>Intervalo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COUNTBLANK(A1:B5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTIF">
<title
>COUNTIF</title>
<para
>A função COUNTIF retorna o número de células no intervalo fornecido que atende o critério fornecido.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUNTIF(intervalo;critério)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Critério</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COUNTIF(A2:A3;"14") retorna 1 se o A2 for -4 e o A3 for 14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUR">
<title
>CUR</title>
<para
>A função CUR() retorna a raiz cúbica não-negativa de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CUR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CUR(27) é igual a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DIV">
<title
>DIV</title>
<para
>A função DIV() divide o primeiro valor pelos outros valores respectivos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DIV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DIV(20;2;2) retorna 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DIV(25;2.5) retorna 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="MOD"
>MOD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EPS">
<title
>EPS</title>
<para
>EPS() retorna o epsilon da máquina, que é a diferença entre 1 e o próximo maior número de ponto flutuante. Como os computadores podem expressar um número finito de dígitos, erros de arredondamento são inevitáveis (mas geralmente insignificantes) em qualquer cálculo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EPS()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>Na maioria dos sistemas, retorna 2^-52=2.2204460492503131e-16</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>0.5*EPS() retorna a "unidade de arredondamento"; este valor é interessante pois é o maior número x onde (1+x)-1=0 (devido aos erros de arredondamento).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EPS() é tão pequeno que o &sheets; mostra 1+eps() como 1.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>Pegue um número x entre 0 e EPS(). Observe que 1+x arredonda x para zero ou EPS() na equação (1+x)-1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EVEN">
<title
>EVEN</title>
<para
>A função EVEN() retorna o número arredondado para o próximo par.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EVEN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>

<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EVEN(1.2) retorna 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EVEN(2) retorna 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ODD"
>ODD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXP">
<title
>EXP</title>
<para
>A função EXP() retorna o valor de e (a base dos logaritmos naturais) elevada à potência x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EXP(9) igual à 8 103.08392758</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EXP(-9) igual à 0,00012341</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACT">
<title
>FACT</title>
<para
>A função FACT() calcula o fatorial do parâmetro. A expressão matemática é (valor)!.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FACT(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FACT(10) retorna 3628800</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FACT(0) retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACTDOUBLE">
<title
>FACTDOUBLE</title>
<para
>A função FACTDOUBLE() calcula o fatorial duplo de um número, por exemplo x!!.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FACTDOUBLE(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FACTDOUBLE(6) retorna 48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FACTDOUBLE(7) retorna 105</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIB">
<title
>FIB</title>
<para
>A função FIB calcula o N-ésimo termo de uma sequência de Fibonacci (1, 1, 2, 3, 5, 8, 13, 21...), na qual cada número a seguir aos dois primeiros é a soma dos dois números precedentes. O FIB(0) está definido como 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FIB(n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Termo enésimo</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FIB(9) retorna 34</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FIB(26) retorna 121393</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FLOOR">
<title
>FLOOR</title>
<para
>Arredonda um número 'x' para o múltiplo mais próximo do segundo parâmetro, o Grau Significativo.</para>
<para
>A função FLOOR() arredonda o valor de 'x' por defeito (em direção ao zero) para o múltiplo mais próximo do Grau Significativo, com o primeiro inteiro após o valor de entrada. O valor padrão do Grau Significativo é igual a 1, se o 'x' for positivo. É igual a -1 se o valor for negativo, o que significa um arredondamento por excesso para o inteiro mais próximo. Se o modo for indicado e não for igual a zero, o valor de 'x' é arredondado para zero com um mínimo de grau significativo e depois é-lhe aplicado o sinal. Caso contrário, ele arredonda até ao infinito negativo. Se algum dos dois parâmetros 'x' ou Grau Significativo forem zero, o resultado é igual a zero.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um inteiro (como 0, -5, 14 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FLOOR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Significância (opcional)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Modo (opcional)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FLOOR(12,5) igual à 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FLOOR(-12,5) é igual a -13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FLOOR(5; 2) é igual a 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FLOOR(5; 2,2) é igual a 4,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMA">
<title
>GAMMA</title>
<para
>A função GAMMA() retorna o valor da função 'gama'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAMMA(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GAMMA(1) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FACT"
>FACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GCD">
<title
>GCD</title>
<para
>A função GCD() retorna o maior denominador comum de dois ou mais valores inteiros.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GCD(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Uma faixa de números inteiros (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Uma faixa de números inteiros (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Terceiro número</seg
><seg
>Uma faixa de números inteiros (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GCD(6;4) retorna 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GCD(10;20) retorna 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GCD(20;15;10) retorna 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LCM"
>LCM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="G_PRODUCT">
<title
>G_PRODUCT</title>
<para
>A função G_PRODUCT() é a mesma que o KPRODUCT. É oferecida por razões de compatibilidade com o Gnumeric.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>G_PRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT">
<title
>INT</title>
<para
>A função INT() retorna a parte inteira do valor.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INT(12.55) é igual a 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INT(15) é igual a 15</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="QUOTIENT"
>QUOTIENT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INV">
<title
>INV</title>
<para
>Esta função multiplica o valor por -1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INV(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INV(-5) retorna 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INV(5) retorna -5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INV(0) retorna 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KPRODUCT">
<title
>KPRODUCT</title>
<para
>A função KPRODUCT() calcula o produto de todos os valores fornecidos como parâmetros. Você pode calcular o produto de um intervalo: KPRODUCT(A1:B5) ou de uma lista de valores como KPRODUCT(12;5;12,5). Se nenhum valor numérico for encontrado 1 é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>KPRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>KPRODUCT(3;5;7) igual à 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>KPRODUCT(12.5;2) igual à 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="G_PRODUCT"
>G_PRODUCT</link
>&nbsp;</member>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LCM">
<title
>LCM</title>
<para
>A função LCM() retorna o menor múltiplo comum para dois ou mais valores flutuantes</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LCM(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>FLOAT</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LCM(6;4) retorna 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LCM(1.5;2.25) retorna 4.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LCM(2;3;4) retorna 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="GCD"
>GCD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LN">
<title
>LN</title>
<para
>A função LN() retorna o logaritmo natural de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LN(0.8) igual à -0.22314355</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LN(0) igual à -inf</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG">
<title
>LOG</title>
<para
>A função LOG() retorna o logaritmo decimal de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOG(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante, maior que zero</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOG(0.8) igual à -0.09691001</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOG(0) é um erro.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG10">
<title
>LOG10</title>
<para
>A função LOG10() retorna o logaritmo de base 10 do argumento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOG10(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor positivo de vírgula flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOG10(10) é igual a 1.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOG10(0) é um erro.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG2">
<title
>LOG2</title>
<para
>A função LOG2() retorna o logaritmo de base 2 de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOG2(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOG2(0,8) é igual a -0,32192809</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOG2(0) é igual a -inf.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGN">
<title
>LOGN</title>
<para
>A função log() retorna o logaritmo decimal de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOGn(valor;base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOGn(12;10) é igual a 1.07918125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOGn(12;2) é igual a 3.5849625</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAX">
<title
>MAX</title>
<para
>A função MAX() calcula o maior número dado nos parâmetros. Os valores de texto e lógicos são ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MAX(valor;valor;...)</para
></listitem>
</varlistentry>

<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAX(12;5;7) retorna 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAX(12,5;2) retorna 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAX(0,5; 0,4;TRUE; 0,2) retorna 0,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAXA">
<title
>MAXA</title>
<para
>A função MAXA() retorna o maior número dado nos parâmetros. O TRUE é avaliado como 1, enquanto o FALSE é visto como 0. Os valores texto são ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MAXA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAXA(12;5;7) retorna 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAXA(12,5;2) retorna 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAXA(0,5; 0,4;TRUE; 0,2) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDETERM">
<title
>MDETERM</title>
<para
>A função MDETERM retorna o determinante de uma matriz fornecida. A matriz terá de ser do tipo 'n x n'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MDETERM(matriz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MDETERM(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MMULT"
>MMULT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIN">
<title
>MIN</title>
<para
>A função MIN() retorna o menor valor fornecido nos parâmetros. Os valores texto e lógicos são ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MIN(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MIN(12; 5; 7) retorna 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MIN(12,5; 2) retorna 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MIN(0,4; 2; FALSE; 0,7) retorna 0,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINA">
<title
>MINA</title>
<para
>A função MINA() retorna o menor valor fornecido nos parâmetros. O TRUE é avaliado como 1, enquanto o FALSE é como 0. Os valores texto são ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MINA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MINA(12; 5; 7) retorna 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MINA(12,5; 2) retorna 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MINA(0,4; 2; FALSE; 0,7) retorna 0.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINVERSE">
<title
>MINVERSE</title>
<para
>Calcula a inversa da matriz.</para>
<para
>A matriz multiplicada pela sua inversa resulta na matriz de identidade da mesma dimensão.</para>
<para
>As matrizes invertíveis têm um determinante não-nulo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MINVERSE(matriz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Matriz</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MINVERSE(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
<member
><link linkend="MUNIT"
>MUNIT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MMULT">
<title
>MMULT</title>
<para
>A função MMULT multiplica duas matrizes. O número de colunas da primeira matriz deverá ser o mesmo que o número de linhas da segunda. O resultado é uma matriz.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MMULT(matriz1;matriz2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeira matriz</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Segunda matriz</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MMULT(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MOD">
<title
>MOD</title>
<para
>A função MOD() retorna o resto após a divisão. Se o segundo parâmetro for nulo, retorna #DIV/0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MOD(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MOD(12;5) retorna 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MOD(5;5) retorna 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MROUND">
<title
>MROUND</title>
<para
>A função MROUND() retorna um valor arredondado para o múltiplo especificado. O valor e o múltiplo devem possuir o mesmo sinal</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MROUND(valor; múltiplo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Múltiplo</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MROUND(1,252; 0.5) igual à 1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MROUND(-1,252; -0,5) igual à -1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTINOMIAL">
<title
>MULTINOMIAL</title>
<para
>A função MULTINOMIAL() retorna o multinomial de cada número nos parâmetros. Ele usa a fórmula para MULTINOMIAL(a,b,c):</para>
<para
>(a+b+c)! / a!b!c!</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MULTINOMIAL(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MULTINOMIAL(3;4;5) igual à 27720</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLY">
<title
>MULTIPLY</title>
<para
>A função MULTIPLY() multiplica todos os valores fornecidos nos parâmetros. Você pode multiplicar os valores dados por um intervalo (MULTIPLY(A1:B5)) ou por uma lista de valores MULTIPLY(12;5;12,5). É equivalente ao PRODUCT.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MULTIPLY(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MULTIPLY(12;5;7) igual à 420</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MULTIPLY(12,5;2) igual à 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MUNIT">
<title
>MUNIT</title>
<para
>Cria a matriz de identidade da dimensão indicada.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MUNIT(dimensão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dimensão</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MUNIT(3) cria uma matriz de identidade 3x3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MINVERSE"
>MINVERSE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODD">
<title
>ODD</title>
<para
>A função ODD() retorna o número arredondado para cima (ou para baixo, no caso dos valores negativos) para o inteiro ímpar mais próximo. Por definição, o ODD(0) é igual a 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ODD(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ODD(1.2) retorna 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ODD(2) retorna 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ODD(-2) retorna -3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EVEN"
>EVEN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POW">
<title
>POW</title>
<para
>A função POW(x;y) retorna o valor de x elevado a y. Faz o mesmo que a POWER.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POW(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POW(1,2;3,4) é igual a 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POW(2;3) é igual a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POWER"
>POWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POWER">
<title
>POWER</title>
<para
>A função POWER(x;y) retorna o valor de x elevado à potência y.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POWER(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>POWER(1,2;3,4) retorna 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>POWER(2;3) igual à 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POW"
>POW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRODUCT">
<title
>PRODUCT</title>
<para
>A função PRODUCT() calcula o produto de todos os valores fornecidos como parâmetros. Você pode calcular o produto de um intervalo: PRODUCT(A1:B5) ou de uma lista de valores como PRODUCT(12;5;12,5). Se nenhum valor numérico for encontrado 0 é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PRODUCT(3;5;7) igual à 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PRODUCT(12.5;2) igual à 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="QUOTIENT">
<title
>QUOTIENT</title>
<para
>A função QUOTIENT retorna a porção inteira do numerador/denumerador.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>QUOTIENT(numerador;denumerador)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numerador</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Denumerador</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>QUOTIENT(21;4) retorna 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="INT"
>INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RAND">
<title
>RAND</title>
<para
>A função RAND() retorna um número pseudo-aleatório entre 0 e 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RAND()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RAND() é igual a por exemplo 0,78309922...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RANDBETWEEN"
>RANDBETWEEN</link
>&nbsp;</member>
<member
><link linkend="RANDEXP"
>RANDEXP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBERNOULLI">
<title
>RANDBERNOULLI</title>
<para
>A função RANDBERNOULLI() retorna um número pseudo-aleatório Bernoulli-distribuído.</para>

<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDBERNOULLI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (entre 0 e 1)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDBERNOULLI(0,45)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBETWEEN">
<title
>RANDBETWEEN</title>
<para
>A função RANDBETWEEN() retorna um número pseudo-aleatório entre os valores de fundo e de topo. Se fundo 
> topo esta função retorna Erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDBETWEEN(fundo;topo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de fundo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Valor de topo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDBETWEEN(12;78) é igual a 61.0811...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBINOM">
<title
>RANDBINOM</title>
<para
>A função RANDBINOM() retorna um número pseudo-aleatório distribuído-binomiamente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (entre 0 e 1)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Provas (maior que 0)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDNEGBINOM"
>RANDNEGBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDEXP">
<title
>RANDEXP</title>
<para
>A função RANDEXP() retorna um número pseudo-aleatório distribuído-exponencialmente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDEXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (maior que 0)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDEXP(0,88)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNEGBINOM">
<title
>RANDNEGBINOM</title>
<para
>A função RANDNEGBINOM() retorna um número negativo pseudo-aleatório distribuído-binomiamente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDNEGBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (entre 0 e 1)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Falhas (maior que 0)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDNEGBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDBINOM"
>RANDBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNORM">
<title
>RANDNORM</title>
<para
>A função RANDNORM() retorna um número pseudo-aleatório distribuído-Normal(Gaussian).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDNORM(mu; sigma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor significativo da distribuição normal</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dispersão da distribuição normal</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDNORM(0; 1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDPOISSON">
<title
>RANDPOISSON</title>
<para
>A função RANDPOISSON() retorna um número pseudo-aleatório poison-distribuído.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDPOISSON(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (maior que 0)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDPOISSON(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROOTN">
<title
>ROOTN</title>
<para
>A função ROOTN() retorna a enésima raiz não negativa de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROOTN(x;n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROOTN(9;2) igual à 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUND">
<title
>ROUND</title>
<para
>A função ROUND(valor[;dígitos]) retorna o valor arredondado para cima, pelo número de dígitos especificado. Se o número de dígitos for zero ou não for declarado, o valor é arredondado para o inteiro mais próximo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROUND(valor;[dígitos])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dígitos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUND(-1,252;2) igual à -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUND(-1,252;2) igual à -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUND(1,252;2) igual à 1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUND(-12.25;-1) igual à -10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUND(-1,252;0) igual à -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MROUND"
>MROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDDOWN">
<title
>ROUNDDOWN</title>
<para
>A função ROUNDDOWN(valor[;dígitos]) retorna o valor arredondado de modo que seu valor absoluto seja menor. Os dígitos são o número de dígitos para o qual deseja arredondar o número. Se o número de dígitos for zero ou não for declarado, o valor é arredondado para o inteiro mais próximo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROUNDDOWN(valor;[dígitos])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dígitos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUNDDOWN(1.252) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUNDDOWN(1.252;2) é igual a 1.25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUNDDOWN(-1.252;2) é igual a -1.25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUNDDOWN(-1.252) é igual a -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDUP">
<title
>ROUNDUP</title>
<para
>A função ROUNDUP(valor[;dígitos]) retorna o valor arredondado de modo que seu valor absoluto seja maior. Os dígitos são o número de dígitos para o qual você deseja arredondar o número. Se o número de dígitos for zero ou não for declarado, o valor é arredondado para o inteiro mais próximo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROUNDUP(valor;[dígitos])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dígitos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUNDUP(1.252) é igual a 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUNDUP(1.252;2) é igual a 1.26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUNDUP(-1.252;2) é igual a -1.26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROUNDUP(-1.252) é igual a -2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SERIESSUM">
<title
>SERIESSUM</title>
<para
>A função SERIESSUM() retorna a soma de uma série de potência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SERIESSUM( X; N; M; Coeficientes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>X a variável independente da série de potências</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>N o expoente inicial a que o X será elevado</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>M o incremento pelo qual o N será aumentado para cada termo da série</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Coeficientes um conjunto de coeficientes pelos quais cada potência sucessiva da variável X será multiplicada</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SERIESSUM(2;0;2;{1;2}) retorna 9</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIGN">
<title
>SIGN</title>
<para
>Esta função retorna -1 se o número é negativo; 0 se o número é zero e 1 se o número é positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SIGN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SIGN(5) igual à 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SIGN(0) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SIGN(-5) igual à -1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRT">
<title
>SQRT</title>
<para
>A função SQRT() retorna a raiz quadrada não-negativa do argumento. É um erro se o argumento for negativo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SQRT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SQRT(9) igual à 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SQRT(-9) é um erro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IMSQRT"
>IMSQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRTPI">
<title
>SQRTPI</title>
<para
>A função SQRTPI() retorna a raiz quadrada não-negativa de x * PI. É um erro se o argumento for negativo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SQRTPI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SQRTPI(2) igual à 2.506628</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBTOTAL">
<title
>SUBTOTAL</title>
<para
>A função SUBTOTAL() retorna o subtotal de uma lista de argumentos fornecidos ignorando outros subtotais resultantes nela. A função pode ter um dos seguintes números: 1 - Média, 2 - Contar, 3 - ContarA, 4 - Máx, 5 - Mín, 6 - Produto, 7 - DesvPadrão, 8 - DesvPadrãoP, 9 - Soma, 10 - Var, 11 - VarP.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUBTOTAL(função; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Função</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>Se A1:A5 contém 7, 24, 23, 56 e 9:</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUBTOTAL(1; A1:A5) retorna 23.8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUBTOTAL(4; A1:A5) retorna 56</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUBTOTAL(9; A1:A5) retorna 119</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUBTOTAL(11; A1:A5) retorna 307.76</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="AVERAGE"
>AVERAGE</link
>&nbsp;</member>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM">
<title
>SUM</title>
<para
>A função SUM() calcula a soma de todos os valores dados como parâmetros. Você pode calcular a soma de uma faixa SUM(A1:B5) ou de uma lista de valores como SUM(12;5;12.5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUM(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUM(12;5;7) igual à 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUM(12,5;2) igual à 14,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUMA"
>SUMA</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMA">
<title
>SUMA</title>
<para
>A função SUMA() calcula a soma de todos os valores dados como parâmetros. Você pode calcular a soma de uma faixa SUM(A1:B5) ou de uma lista de valores como SUM(12;5;12.5). Se um parâmetro contém texto ou valor booleano FALSO ele é contado como 0, se um parâmetro retorna VERDADEIRO ele é contado como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUM(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMA(12;5;7) igual à 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMA(12,5; 2; VERDADEIRO) igual à 15,5</para
></listitem>
</varlistentry>

<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMIF">
<title
>SUMIF</title>
<para
>A função SUMIF() calcula o somatório de todos os valores fornecidos como parâmetros com um critério de correspondência. O intervalo de soma é opcional. Se não fornecido, os valores no intervalo de verificação são somados. O comprimento do intervalo de verificação deve ser igual ou menor que o do intervalo de soma.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMIF(intervaloverificação;critério;intervalosoma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Verificar intervalo</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Critério</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Somar intervalo</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMIF(A1:A4;"
>1") soma todos os valores no intervalo A1:A4 maiores que 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMIF(A1:A4;"=0";B1:B4) soma todos os valores no intervalo B1:B4 se o valor correspondente em A1:A4 corresponde à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMSQ">
<title
>SUMSQ</title>
<para
>A função SUMSQ() calcula a soma dos quadrados dos valores dados como parâmetros. Você pode calcular a soma de uma faixa SUMSQ(A1:B5) ou uma lista de valores como SUMSQ(12;5;12.5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMSQ(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMSQ(12;5;7) igual à 218</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMSQ(12,5;2) igual à 173</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRANSPOSE">
<title
>TRANSPOSE</title>
<para
>Retorna a transposta de uma matriz, por ex.: as linhas e colunas da matriz são trocadas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRANSPOSE(matriz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Matriz</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TRANSPOSE(A1:C3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUNC">
<title
>TRUNC</title>
<para
>A função TRUNC() trunca um valor numérico para uma certa precisão. Se a precisão é omitida, 0 é assumido.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRUNC(valor; precisão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Precisão</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TRUNC(1,2) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TRUNC(213,232; 2) retorna 213,23</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Statistical">
<title
>Estatístico</title>

<sect3 id="AVEDEV">
<title
>AVEDEV</title>
<para
>A função AVEDEV() calcula a média dos desvios absolutos de um dado do seu significado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AVEDEV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AVEDEV(11.4;17.3;21.3;25.9;40.1) retorna 7.84</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AVEDEV(A1:A5) ...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGE">
<title
>AVERAGE</title>
<para
>A função AVERAGE() calcula a média de todos os valores dados como parâmetros. Você pode calcular a média de uma faixa - AVERAGE(A1:B5) ou de uma lista de valores como AVERAGE(12; 5; 12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AVERAGE(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AVERAGE(12;5;7) igual à 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AVERAGE(12,5;2) igual à 7,25</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGEA">
<title
>AVERAGEA</title>
<para
>A função AVERAGEA() calcula a média dos argumentos fornecidos. Números, texto e valores lógicos são incluídos no cálculo também. Se as células contém texto ou os argumentos retorna FALSO, é contado como um valor zero (0). Se os argumentos retornam VERDADEIRO, é contado com um (1). Note que células vazias não são contadas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AVERAGEA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de string</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AVERAGEA(11.4;17.3;"algumtexto";25.9;40.1) igual à 18.94</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETADIST">
<title
>BETADIST</title>
<para
>A função BETADIST() retorna a probabilidade beta cumulativa em função da densidade.</para>
<para
>O terceiro e quarto parâmetros são opcionais. Eles definem os limites inferior e superior, caso contrário assumem-se os valores 0,0 e 1,0 respectivamente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BETADIST(número;alfa;beta;início;fim[;acumulativo=Verdadeiro])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Alfa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Beta</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Início</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Fim</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Acumulada</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BETADIST(0.2859;0.2606;0.8105) retorna 0.675444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BETADIST(0.2859;0.2606;0.8105;0.2;0.9) retorna 0.537856</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETAINV">
<title
>BETAINV</title>
<para
>A função BETAINV() retorna a inversa da BETADIST(x;alfa;beta;a;b;TRUE()).</para>
<para
>Os parâmetros inicial e final são opcionais. Eles definem os limites inferior e superior, caso contrário assumem-se os valores 0,0 e 1,0 respectivamente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BETAINV(número;alfa;beta [; início=0 [; fim=1]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Alfa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Beta</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Início</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Fim</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BETADIST(BETAINV(0,1;3;4);3;4) é igual a 0,1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BETADIST(BETAINV(0,3;3;4);3;4) é igual a 0,3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BINO">
<title
>BINO</title>
<para
>A função BINO() retorna a distribuição binomial.</para>
<para
>O primeiro parâmetro é o número de tentativas, o segundo é o número de sucessos, e o terceiro é a probabilidade de sucesso. O número de tentativas deve ser maior que o número de sucessos e a probabilidade deve ser menor ou igual a 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BINO(tentativas;sucesso;probabilidade_de_sucesso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de tentativas</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de tentativas bem-sucedidas</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Probabilidade de sucesso</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BINO(12;9;0,8) retorna 0,236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHIDIST">
<title
>CHIDIST</title>
<para
>A função CHIDIST() retorna a probabilidade do valor do quadrado do Chi indicado que uma hipótese confirma.</para>
<para
>CHIDIST compara o valor do quadrado de Chi com o obtido de um exemplo randômico que é calculado do somatório do (valor observado-valor esperado)^2/valor esperado para todos os valores com a distribuição teórica do quadrado de Chi e determina a probabilidade de erro para as hipóteses testadas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CHIDIST(número;grau_liberdade)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Grau de liberdade</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CHIDIST(13.27;5) retorna 0.021</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBIN">
<title
>COMBIN</title>
<para
>A função COMBIN() calcula o número de combinações possíveis. O primeiro parâmetro é a contagem total de elementos. O segundo é o número de elementos a escolher. Estes dois parâmetros devem ser positivos. O primeiro parâmetro deve ser maior que o segundo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMBIN(total;escolhidos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a escolher</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMBIN(12;5) retorna 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMBIN(5;5) retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBINA">
<title
>COMBINA</title>
<para
>A função COMBINA() calcula o número de combinações possíveis. O primeiro parâmetro é o número total de elementos. O segundo parâmetro é a quantidade total de elementos. O segundo parâmetro é o número de elementos a escolher. Ambos os parâmetros deverão ser positivos e o primeiro parâmetro não deverá ser inferior ao segundo. Caso contrário, a função retorna um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMBIN(total;escolhidos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a escolher</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMBIN(12;5) retorna 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMBIN(5;5) retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONFIDENCE">
<title
>CONFIDENCE</title>
<para
>A função CONFIDENCE() retorna o intervalo de confiança para uma população significativa.</para>
<para
>O parâmetro alfa deve estar entre 0 e 1 (exclusive), stddev deve ser positivo e seu tamanho deve ser maior ou igual à 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CONFIDENCE(alfa;stddev;tamanho)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Nível do intervalo confiança</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio padrão da população total</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tamanho da população total</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CONFIDENCE(0.05;1.5;100) retorna 0.294059</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CORREL">
<title
>CORREL</title>
<para
>A função CORREL() calcula o coeficiente de correlação de dois intervalos de células.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CORREL(intervalo1; intervalo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Segundo intervalo de valores de célula</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CORREL(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PEARSON"
>PEARSON</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COVAR">
<title
>COVAR</title>
<para
>A função COVAR() calcula a co-variação de dois intervalos de células.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COVAR(intervalo1; intervalo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Segundo intervalo de valores de célula</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COVAR(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEVSQ">
<title
>DEVSQ</title>
<para
>A função DEVSQ() calcula o somatório dos quadrados dos desvios.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEVSQ(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEVSQ(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEVSQ(21; 33; 54; 23) retorna 684,75</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXPONDIST">
<title
>EXPONDIST</title>
<para
>A função EXPONDIST() retorna a distribuição exponencial.</para>
<para
>O parâmetro lambda deve ser positivo.</para>
<para
>Cumulativo = 0 calcula a função densidade, cumulativo - 1 calcula a distribuição.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EXPONDIST(número;lambda;cumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro lambda</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>0 = densidade, 1 = distribuição</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EXPONDIST(3;0.5;0) retorna 0.111565</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EXPONDIST(3;0.5;1) retorna 0.776870</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FDIST">
<title
>FDIST</title>
<para
>A função FDIST() retorna a distribuição F.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FDIST(número;grau_liberdade_1;grau_liberdade_2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Grau de liberdade 1</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Grau de liberdade 2</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FDIST(0.8;8;12) retorna 0.61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINV">
<title
>FINV</title>
<para
>A função FINV() retorna o número único não-negativo 'x' tal que FDIST(x;r1;r2) = p.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FINV(número; r1; r2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número r1</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número r2</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FDIST(FINV(0,1;3;4);3;4) é igual a 0,1</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="FISHER">
<title
>FISHER</title>
<para
>A função FISHER() retorna a transformação de Fisher para x e cria uma função fechada para uma distribuição normal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FISHER(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FISHER(0.2859) retorna 0.294096</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FISHER(0.8105) retorna 1.128485</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FISHERINV">
<title
>FISHERINV</title>
<para
>A função FISHERINV() retorna o inverso da transformação de Fisher para x e cria uma função fechada para uma distribuição normal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FISHERINV(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FISHERINV(0.2859) retorna 0.278357</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FISHERINV(0.8105) retorna 0.669866</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FREQUENCY">
<title
>FREQUENCY</title>
<para
>Conta o número de valores para cada intervalo, indicado pelos valores-fronteira no segundo parâmetro.</para>
<para
>Os valores no segundo parâmetro determinam os limites superiores dos intervalos. Os intervalos incluem os limites superiores. A lista devolvida é um vetor de coluna e tem um elemento a mais que o segundo parâmetro; o último elemento representa o número de todos os elementos maiores que o último valor no segundo parâmetro. Se o segundo parâmetro estiver vazio, são contados todos os valores do primeiro parâmetro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FREQUENCY(Dados do intervalo; Grupos do intervalo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante, os quais deverão ser contados.</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante, que representam os limites superiores dos intervalos.</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMADIST">
<title
>GAMMADIST</title>
<para
>A função GAMMADIST() retorna a distribuição gamma.</para>
<para
>Se o último parâmetro (cumulativo) é 0, ele calcula a função de densidade, se for 1, a distribuição é retornada.</para>
<para
>Os primeiros três parâmetros devem ser positivos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAMMADIST(número;alfa;beta;cumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Alfa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Beta</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Sinalizador cumulativo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GAMMADIST(0.758;0.1;0.35;1) retorna 0.995450</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GAMMADIST(0.758;0.1;0.35;0) retorna 0.017179</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMAINV">
<title
>GAMMAINV</title>
<para
>A função GAMMAINV() retorna o número único x 
>= 0 tal que GAMMAINV(x;alfa;beta;TRUE()) = p.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAMMAINV(número;alfa;beta)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Alfa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Beta</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0,1;3;4);3;4) é igual a 0,1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0,3;3;4);3;4) é igual a 0,3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMALN">
<title
>GAMMALN</title>
<para
>A função GAMMALN() retorna o logaritmo natural da função gamma: G(x). O parâmetro numérico deve ser positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAMMALN(Número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GAMMALN(2) retorna 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAUSS">
<title
>GAUSS</title>
<para
>A função GAUSS() retorna valores integrais para um distribuição cumulativa normal padrão.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAUSS(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O número para qual o valor integral da distribuição normal será calculado.</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GAUSS(0.25) retorna 0.098706</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GEOMEAN">
<title
>GEOMEAN</title>
<para
>A função GEOMEAN() retorna o significado geométrico de argumentos fornecidos. Isto é equivalente à enésima raiz do produto dos termos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GEOMEAN(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GEOMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GEOMEAN(21; 33; 54; 23) retorna 30,45886</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="HARMEAN"
>HARMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HARMEAN">
<title
>HARMEAN</title>
<para
>A função HARMEAN() calcula a média harmônica do N pontos de dados (N dividido pelo somatório dos inversos dos pontos de dados).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HARMEAN(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HARMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HARMEAN(21; 33; 54; 23) retorna 28,588</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="GEOMEAN"
>GEOMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HYPGEOMDIST">
<title
>HYPGEOMDIST</title>
<para
>A função HYPGEOMDIST() retorna a distribuição hipergeométrica.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HYPGEOMDIST(x; n; M; N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de sucessos no exemplo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de tentativas</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de sucessos em todos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Tamanho da população</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HYPGEOMDIST(2; 5; 6; 20) retorna 0,3522</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTERCEPT">
<title
>INTERCEPT</title>
<para
>A função INTERCEPT() calcula a interseção da linha da regressão linear com o eixo dos Y.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INTERCEPT(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>valores em Y (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>valores em X (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INVBINO">
<title
>INVBINO</title>
<para
>A função INVBINO() retorna a distribuição binomial negativa. O primeiro parâmetro é o número de tentativas, o segundo é o número de falhas, e o terceiro é a probabilidade de falha. O número de tentativas deve ser maior que o número de falhas e a probabilidade deve ser menor ou igual a 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INVBINO(tentativas;falha;chance_de_falha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de tentativas</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de falhas</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Probabilidade de falha</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INVBINO(12;3;0,2) retorna 0,236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURT">
<title
>KURT</title>
<para
>A função KURT() calcula uma estimativa imparcial de kurtosis de um conjunto de dados. Você deve fornecer pelo menos 4 valores, caso contrário um erro é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>KURT(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>KURT(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>KURT(21; 33; 54; 23) retorna 1,344239</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="KURTP"
>KURTP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURTP">
<title
>KURTP</title>
<para
>A função KURTP() calcula uma população kurtosis de um conjunto de dados. Você deve fornecer pelo menos 4 valores, caso contrário um erro é retornado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>KURTP(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>KURTP(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>KURTP(21; 33; 54; 23) retorna -1,021</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="KURT"
>KURT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LARGE">
<title
>LARGE</title>
<para
>A função LARGE() retorna o enésimo maior valor de um conjunto de dados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LARGE(intervalo; n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Posição (do maior)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> LARGE(A1:A3; 2) retorna 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEGACYFDIST">
<title
>LEGACYFDIST</title>
<para
>A função LEGACYFDIST() retorna a distribuição-f.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEGACYFDIST(número;graus-liberdade-1;graus-liberdade-2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Grau de liberdade 1</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Grau de liberdade 2</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LEGACYFDIST(0,8;8;12) retorna 0,61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGINV">
<title
>LOGINV</title>
<para
>A função LOGINV() retorna o inverso da distribuição lognormal cumulativa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOGINV(p; projeção; desvpadrão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Probabilidade</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Significa o valor da distribuição logarítmica padrão</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio padrão da distribuição logarítmica padrão</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOGINV(0,1;0;1) igual à 0,2776</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGNORMDIST">
<title
>LOGNORMDIST</title>
<para
>A função LOGNORMDIST() retorna a distribuição lognormal cumulativa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOGNORMDIST(Número;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor da probabilidade para o qual a distribuição logarítmica padrão será calculada</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Significa o valor da distribuição logarítmica padrão</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio padrão da distribuição logarítmica padrão</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOGNORMDIST(0.1;0;1) retorna 0.01</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MEDIAN">
<title
>MEDIAN</title>
<para
>A função MEDIAN() calcula a mediana de todos os valores dados como parâmetros. Você pode calcular a mediana de uma faixa MEDIAN(A1:B5) ou de uma lista de valores como MEDIAN(12; 5; 12.5). Células em branco serão consideradas como um zero, e células com texto serão ignoradas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MEDIAN(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de ponto flutuante ou intervalo de valores</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante ou intervalo de valores</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante ou intervalo de valores</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante ou intervalo de valores</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante ou intervalo de valores</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MEDIAN(12; 5; 5,5) igual à 5,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MEDIAN(12; 7; 8; 2) igual à 7,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MODE">
<title
>MODE</title>
<para
>A função MODE() retorna o valor mais frequentemente encontrado em um conjunto de dados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MODE(número; número2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MODE(12; 14; 12; 15) retorna 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NEGBINOMDIST">
<title
>NEGBINOMDIST</title>
<para
>A função NEGBINOMDIST() retorna a distribuição binomial negativa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NEGBINOMDIST(falhas; sucesso; prob_de_sucesso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de falhas</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de tentativas bem-sucedidas</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Probabilidade de sucesso</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NEGBINOMDIST(2;5;0,.55) retorna 0,152872629</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMDIST">
<title
>NORMDIST</title>

<para
>A função NORMDIST() retorna a distribuição cumulativa normal.</para>
<para
>O número é o valor da distribuição baseado no qual a distribuição normal é calculada.</para>
<para
>MV é a linha média da distribuição.</para>
<para
>STD é o desvio padrão da distribuição.</para>
<para
>K = 0 calcula a função densidade, K = 1 calcula a distribuição.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NORMDIST(Número;MV;STD;K)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Linha média da distribuição</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio padrão da distribuição</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>0 = densidade, 1 = distribuição</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NORMDIST(0.859;0.6;0.258;0) retorna 0.934236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NORMDIST(0.859;0.6;0.258;1) retorna 0.842281</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMINV">
<title
>NORMINV</title>
<para
>A função NORMINV() retorna o inverso da distribuição cumulativa normal. O número deve estar entre 0 e 1 (exclusive) e STD deve ser positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NORMINV(número;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor da probabilidade para o qual a distribuição logarítmica padrão será calculada</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor médio numa distribuição normal</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio padrão numa distribuição normal</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NORMINV(0.9;63;5) retorna 69.41</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSDIST">
<title
>NORMSDIST</title>
<para
>A função NORMSDIST() retorna a distribuição normal padrão.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NORMSDIST(Número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor para o qual a distribuição normal padrão é calculada</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NORMSDIST(1) retorna 0.84</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSINV">
<title
>NORMSINV</title>
<para
>A função NORMSINV() retorna o inverso da distribuição normal cumulativa padrão. O número deve estar entre 0 e 1 (exclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NORMSINV(Número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NORMSINV(0.908789) retorna 1.3333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PEARSON">
<title
>PEARSON</title>
<para
>A função PEARSON() calcula o coeficiente de correlação de dois intervalos de células. É a mesma função que a CORREL.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PEARSON(intervalo1; intervalo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Segundo intervalo de valores de célula</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PEARSON(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CORREL"
>CORREL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERCENTILE">
<title
>PERCENTILE</title>
<para
>A função PERCENTILE() devolve o percentil dos valores de dados da x-ésima amostra dos dados. Um percentil devolve o valor de escala para uma série de dados que vai do valor menor (alfa=0) para o maior (alfa=1) de uma série de dados. Para um alfa = 25%, o percentil corresponde ao primeiro quartil; alfa = 50% é a mediana. As células em branco correspondem a zero e as células com texto serão ignoradas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PERCENTILE(dados;alfa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>O valor do percentil entre 0 e 1, inclusive.</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MEDIAN"
>MEDIAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUT">
<title
>PERMUT</title>
<para
>A função PERMUT() retorna o número de permutações. O primeiro parâmetro é o número de elementos, e o segundo é o número de elementos usados na permutação.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PERMUT(total;permutados)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a permutar</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PERMUT(8;5) retorna 6720</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PERMUT(1;1) retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUTATIONA">
<title
>PERMUTATIONA</title>
<para
>A função PERMUTATIONA() devolve o número de arranjos ordenados. O primeiro parâmetro é o número de elementos e o segundo parâmetro é o número de elementos a escolher. Ambos os números deverão ser positivos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PERMUTATIONA(total;escolhidos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a escolher</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PERMUTATIONA(2,3) retorna 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PERMUTATIONA(0,0) retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PHI">
<title
>PHI</title>
<para
>A função PHI() retorna o valor da função de distribuição para uma distribuição normal padrão.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PHI(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O número para o qual a distribuição normal padrão será calculada</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PHI(0.25) retorna 0.386668</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POISSON">
<title
>POISSON</title>
<para
>A função POISSON() retorna a distribuição de Poisson.</para>
<para
>Os parâmetros número e lambda devem ser positivos.</para>
<para
>Cumulativo = 0 calcula a função densidade, cumulativo - 1 calcula a distribuição.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POISSON(número;lambda;cumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro lambda (o valor médio)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>0 = densidade, 1 = distribuição</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>POISSON(60;50;0) retorna 0.020105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>POISSON(60;50;1) retorna 0.927840</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANK">
<title
>RANK</title>
<para
>A função RANK() devolve a classificação de um número numa lista de números.</para>
<para
>A ordem define como classificar os números:</para>
<para
>Se for 0 ou omitido, os Dados classificam-se em ordem descendente.</para>
<para
>Se não for 0, os Dados classificam-se em ordem ascendente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RSQ(Valor; Dados; Ordem)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dados (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANK (2;{1;2;3}) é igual a 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RSQ">
<title
>RSQ</title>
<para
>A função RSQ() devolve o quadrado do coeficiente de correção do momento do produto de Pearson, através dos pontos de dados em x_conhecidos e y_conhecidos.</para>
<para
>Se a "listaY" e a "listaX" estiverem vazias ou tiverem uma quantidade diferente de pontos de dados, é retornado o valor #N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RSQ(Y conhecido; X conhecido)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Y conhecido (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>X conhecido (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEW">
<title
>SKEW</title>
<para
>A função SKEW() retorna uma estimativa para a simetria de uma distribuição</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SKEW(número; número2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SKEW(11,4; 17,3; 21,3; 25,9; 40,1) retorna 0,9768</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SKEWP"
>SKEWP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEWP">
<title
>SKEWP</title>
<para
>A função SKEWP() retorna a simetria da população de uma distribuição</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SKEWP(número; número2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SKEWP(11,4; 17,3; 21,3; 25,9; 40,1) retorna 0,6552</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SKEW"
>SKEW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLOPE">
<title
>SLOPE</title>
<para
>A função SLOPE() calcula a inclinação da linha de regressão linear.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>valores em Y (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>valores em X (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SMALL">
<title
>SMALL</title>
<para
>A função SMALL() retorna o enésimo menor valor de um conjunto de dados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SMALL(intervalo; n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores de célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Posição (do menor)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> SMALL(A1:A3; 1) retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STANDARDIZE">
<title
>STANDARDIZE</title>
<para
>A função STANDARDIZE() calcula um valor normalizado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STANDARDIZE(x; significado, desviopadrão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número a ser normalizado</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Média da distribuição</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Desvio padrão</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>STANDARDIZE(4; 3; 7) retorna 0,1429</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEV">
<title
>STDEV</title>
<para
>A função STDEV() retorna o desvio padrão estimado baseado em um exemplo. O desvio padrão é uma medida de quão largamente valores são dispersados do valor médio.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STDEV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>STDEV(6;7;8) igual à 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVA">
<title
>STDEVA</title>
<para
>A função STDEVA() retorna o desvio padrão estimado baseado em um exemplo. O desvio padrão é uma medida de quão largamente valores são dispersados do valor médio. Se uma referência de célula contém texto ou valor booleano FALSO, isto é contado como 0. Se o valor booleano é VERDADEIRO é contado como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STDEVA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) igual à 1, se A1 estiver vazio</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) igual à 3,109, se A1 for VERDADEIRO</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVP">
<title
>STDEVP</title>
<para
>A função STDEVP() retorna o desvio padrão baseado em uma população inteira</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STDEVP(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>STDEVP(6;7;8) igual à 0,816497...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVPA">
<title
>STDEVPA</title>
<para
>A função STDEVPA() retorna o desvio padrão baseado numa população inteira. Se uma referência de célula contém texto ou valor booleano FALSO, isto é contado como 0. Se o valor booleano é VERDADEIRO é contado como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STDEVPA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) igual à 0,816497..., se A1 estiver vazio</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) igual à 2,69, se A1 for VERDADEIRO</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) igual à 3,11..., se A1 for FALSO</para
></listitem>
</varlistentry>

<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STEYX">
<title
>STEYX</title>
<para
>A função STEYX() calcula o erro-padrão do valor previsto em Y para cada X na regressão.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>valores em Y (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>valores em X (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM2XMY">
<title
>SUM2XMY</title>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMPRODUCT">
<title
>SUMPRODUCT</title>
<para
>A função SUMPRODUCT() (SUM(X*Y)) retorna a soma dos produtos dos valores. O número de valores deve ser igual nas duas matrizes, do contrário a função retorna Erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMPRODUCT(matriz1;matriz2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (matriz)</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor (matriz)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMPRODUCT(A1:A2;B1:B2) com A1=2, A2=5, B1=3 e B2=5 retorna 31</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2MY2">
<title
>SUMX2MY2</title>
<para
>A função SUMX2MY2() (SUM(X^2-Y^2)) retorna a diferença dos quadrados dos valores. O número de valores deve ser igual nas duas matrizes, do contrário a função retorna Erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMX2MY2(matriz1;matriz2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (matriz)</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor (matriz)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMX2MY2(A1:A2;B1:B2) com A1=2, A2=5, B1=3 e B2=5 retorna -5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2PY2">
<title
>SUMX2PY2</title>
<para
>A função SUMX2PY2() (SUM(X^2+Y^2)) retorna a soma dos quadrados dos valores. O número de valores deve ser igual nas duas matrizes, do contrário a função retorna Erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMX2PY2(matriz1;matriz2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (matriz)</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor (matriz)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMX2PY2(A1:A2;B1:B2) com A1=2, A2=5, B1=3 e B2=5 retorna 63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMXMY2">
<title
>SUMXMY2</title>
<para
>A função SUMXMY2() (SUM((X-Y)^2)) retorna o quadrado das diferenças entre estes valores. O número de valores nas duas listas deverá ser igual. Caso contrário, esta função devolve um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMXMY2(lista-1;lista-2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (matriz)</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor (matriz)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMXMY2(A1:A2;B1:B2), com A1=2, A2=5, B1=3 e B2=5, retorna 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TDIST">
<title
>TDIST</title>
<para
>A função TDIST() retorna a distribuição T.</para>
<para
>Modo = 1 retorna o teste de uma passada, Modo = 2 retorna o teste de duas passadas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TDIST(número;grau_liberdade;modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Grau de liberdade para a distribuição t</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Modo (1 ou 2)</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TDIST(12;5;1) retorna 0.000035</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TREND">
<title
>TREND</title>
<para
>A função TREND() calcula uma sequência de valores com base numa regressão linear de pares de valores conhecidos.</para>
<para
>Restrições: COUNT(yConhecido) = COUNT(xConhecido).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TREND(yConhecido[;xConhecido[;novoX[;permitirDeslocamento = TRUE]]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>yConhecido</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>xConhecido</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Sequência-Números novoX</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>permitirDeslocamento</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIMMEAN">
<title
>TRIMMEAN</title>
<para
>A função TRIMMEAN() calcula a média de uma fração de um conjunto de dados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRIMMEAN(conjuntoDados; fraçãoCorte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>conjuntoDados</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>fraçãoCorte</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TTEST">
<title
>TTEST</title>
<para
>A função TTEST() calcula a probabilidade de um teste 't'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TTEST(x; y; tipo; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>X (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Y (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>modo</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VAR">
<title
>VAR</title>
<para
>A função VAR() calcula a variância estimada baseada em um exemplo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VAR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VAR(12;5;7) igual à 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VAR(15;80;3) igual à 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VAR(6;7;8) igual à 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VARIANCE"
>VARIANCE</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARA">
<title
>VARA</title>
<para
>A função VARA() calcula a variância estimada baseada em um exemplo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VARA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VARA(12;5;7) igual à 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VARA(15;80;3) igual à 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VARA(6;7;8) igual à 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARIANCE">
<title
>VARIANCE</title>
<para
>A função VARIANCE() calcula a estimativa da variância baseada numa amostra. É a mesma função que a VAR.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VARIANCE(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARIANCE(12;5;7) é igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A VARIANCE(15;80;3) é igual a 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A VARIANCE(6;7;8) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARP">
<title
>VARP</title>
<para
>A função VARP() calcula a variância baseada em uma população inteira.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VARP(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VARP(12;5;7) igual à 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VARP(15;80;3) igual à 1144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VARP(6;7;8) igual à 0,6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARPA">
<title
>VARPA</title>
<para
>A função VARPA() calcula a variação baseada numa população inteira. Valores de texto e booleanos que retornam FALSO são contados como 0, valores booleanos que retornam VERDADEIRO são contados como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VARPA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valores de ponto flutuante</seg
><seg
>Uma faixa de números de ponto flutuante (como 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VARPA(12;5;7) igual à 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VARPA(15;80;3) igual à 1144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VARPA(6;7;8) igual à 0,6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEIBULL">
<title
>WEIBULL</title>
<para
>A função WEIBULL() retorna a distribuição de Weibull.</para>
<para
>Os parâmetros alfa e beta devem ser positivos, o número (primeiro parâmetro) deve ser não-negativo.</para>
<para
>Cumulativo = 0 calcula a função densidade, cumulativo - 1 calcula a distribuição.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEIBULL(número;alfa;beta;cumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Alfa</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro Beta</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>0 = densidade, 1 = distribuição</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>WEIBULL(2;1;1;0) retorna 0.135335</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>WEIBULL(2;1;1;1) retorna 0.864665</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZTEST">
<title
>ZTEST</title>
<para
>A função ZTEST() calcula a probabilidade de dois extremos de um teste 'z' com a distribuição normal.</para>
<para
>Efetua um teste da hipótese nula, onde a amostra foi retirada de uma variável aleatória com uma distribuição normal em torno de uma 'média' e um desvio-padrão 'sigma'. Um valor devolvido igual a 1 indica que a hipótese nula é rejeitada, p. ex., a amostra não é uma amostra aleatória da distribuição normal. Se o 'sigma' for omitido, é estimado a partir da amostra com o STDEV. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ZTEST(x; média; desvioPadrão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>X (lista)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>média</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>desvioPadrão</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Text">
<title
>Texto</title>

<sect3 id="ASC">
<title
>ASC</title>
<para
>A função ASC() retorna os caracteres de meia-largura, comparados ao argumento largura-completa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ASC(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Caracteres de largura completa</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="JIS"
>JIS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BAHTTEXT">
<title
>BAHTTEXT</title>
<para
>A função BAHTTEXT() converte um número para um texto em caracteres Thai (Baht).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BAHTTEXT(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BAHTTEXT(23) devolve "ยสบสามบาทถวน"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHAR">
<title
>CHAR</title>
<para
>A função CHAR() retorna o caractere especificado por um número.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CHAR(código)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Código do caractere</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CHAR(65) retorna "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="CLEAN">
<title
>CLEAN</title>
<para
>A função CLEAN() remove todos caracteres não imprimíveis de um texto</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CLEAN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CLEAN(AsciiToChar(7) + "ALÔ") retorna "ALÔ"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CODE">
<title
>CODE</title>
<para
>A função CODE() retorna o código numérico para o primeiro caractere numa string de texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CODE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CODE("KDE") retorna 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPARE">
<title
>COMPARE</title>
<para
>A função COMPARE() retorna 0 se dois strings são iguais; -1 se o primeiro é menor em valor que o segundo; de outra maneira retorna 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMPARE(string1; string2; true|false)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro string</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>String para comparar com</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Comparar diferença entre maiúsculas e minúsculas (verdadeiro/falso)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMPARE("Calligra"; "Calligra"; true) retorna 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMPARE("calligra"; "Calligra"; true) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COMPARE("kspread"; "Calligra"; false) retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EXACT"
>EXACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONCATENATE">
<title
>CONCATENATE</title>
<para
>A função CONCATENATE() retorna um texto que é a concatenação dos textos passados como parâmetros.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CONCATENATE(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de string</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Valores de string</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Valores de string</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Valores de string</seg
><seg
>Uma faixa de strings</seg
></seglistitem>
<seglistitem
><seg
>Valores de string</seg
><seg
>Uma faixa de strings</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CONCATENATE("Sheets";"Calligra";"KDE") retorna "SheetsCalligraKDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLAR">
<title
>DOLLAR</title>
<para
>A função DOLLAR() converte um número para texto usando o formato monetário, com os decimais arredondados para o lugar específico. Apesar do nome ser DOLLAR, esta função fará a conversão de acordo com o local corrente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DOLLAR(número;decimais)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Decimais</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DOLLAR(1403,77) retorna "$ 1.403,77"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DOLLAR(-0,123;4) retorna "$-0,1230"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXACT">
<title
>EXACT</title>
<para
>A função EXACT() retorna Verdadeiro se as duas strings são iguais. Caso contrário retorna Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EXACT(string1;string2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>String</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EXACT("Calligra";"Calligra") retorna Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EXACT("KSpread";"Calligra") retorna Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COMPARE"
>COMPARE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIND">
<title
>FIND</title>
<para
>A função FIND() procura um texto (texto_procurado) dentro de outro texto (texto) e retorna o número da posição inicial do texto_procurado, do caractere mais à esquerda do texto.</para>
<para
>O parâmetro iniciar_num especifica o caractere do qual a procura iniciará. O primeiro caractere é o de número 1. Se iniciar_num é omitido, é assumido que ele é 1.</para>
<para
>Você pode também usar a função SEARCH, mas diferentemente de SEARCH, a FIND diferencia as maiúsculas de minúsculas e não permite caracteres curinga.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FIND(texto_procurado;texto;número_inicial)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O texto que você deseja encontrar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O texto que deve conter procura_texto</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Especifica índice para iniciar a procura</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FIND("Cal";"Calligra") retorna 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FIND("i";"Calligra") retorna 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FIND("a";"Sheets in Calligra";4) returns 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINDB">
<title
>FINDB</title>
<para
>A função FINDB() procura uma sequência de texto (texto_procurado), dentro de outra cadeia de caracteres (dentro_texto), e devolve o número do ponto inicial de texto_procurado, a partir do carácter mais à esquerda de dentro_texto. Esta função assume posições em 'bytes'.</para>
<para
>O parâmetro num_inicio define o caractere onde começar a pesquisa. O primeiro caractere corresponde ao número 2. Se o num_inicio for omitido, o primeiro caractere corresponde ao número 2.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FINDB(texto_procurado;dentro_texto;num_inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O texto que você deseja encontrar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O texto que deve conter procura_texto</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Define a posição em 'bytes' onde iniciar a pesquisa</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIXED">
<title
>FIXED</title>
<para
>A função FIXED() arredonda um número para um número específico de decimais, formata o número em um string de formato decimal, e retorna o resultado como texto. Se decimais são negativos, o número é arredondado para o ponto decimal à esquerda. Se você omite os decimais, eles são assumidos como 2. e o parâmetro adicional sem_vírgulas é verdadeiro, separadores de centenas não serão mostrados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FIXED(número;decimais;sem_vírgulas)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Decimais</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Sem_vírgulas</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FIXED(1234,567;1) retorna "1.234,6"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FIXED(1234,567;1;FALSE) retorna "1234,6"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FIXED(44,332) retorna "44,33"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="JIS">
<title
>JIS</title>
<para
>A função JIS() retorna os caracteres de largura completa que correspondem ao argumento de meia-largura.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>JIS(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Caracteres de meio-tamanho</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ASC"
>ASC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFT">
<title
>LEFT</title>
<para
>A função LEFT() devolve uma subsequência de texto que contém os 'tamanho' caracteres mais à esquerda do texto. O texto inteiro será devolvido se o 'tamanho' ultrapassar o tamanho real do texto. É um erro se o número de caracteres for menor que 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEFT(texto;comprimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Número de caracteres</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LEFT("alô";2) retorna "al"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LEFT("KSpread";10) retorna "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LEFT("KSpread") retorna "K"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFTB">
<title
>LEFTB</title>
<para
>A função LEFTB() devolve uma subsequência de texto que contém os 'tamanho' caracteres mais à esquerda do texto, usando posições em bytes. O texto inteiro será devolvido se o 'tamanho' ultrapassar o tamanho real do texto. É um erro se o número de caracteres for menor que 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEFTB(texto;comprimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Comprimento em 'Bytes'</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEN">
<title
>LEN</title>
<para
>A função LEN() retorna o comprimento da string.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LEN("olá") retorna 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LEN("KSpread") retorna 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LENB"
>LENB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LENB">
<title
>LENB</title>
<para
>A função LENB() devolve o comprimento ou tamanho da sequência de texto em 'bytes'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LENB(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOWER">
<title
>LOWER</title>
<para
>A função LOWER() converte um texto para minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOWER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOWER("alô") retorna "alô"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>LOWER("ALÔ") retorna "alô"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MID">
<title
>MID</title>
<para
>A função MID() retorna um texto que contém 'comprimento' de caracteres deste texto, iniciando na 'posição' determinada.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MID(texto;posição;comprimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posição</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Comprimento</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MID("Calligra";2;3) retorna "all"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MID("Calligra";2) retorna "alligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIDB">
<title
>MIDB</title>
<para
>A função MIDB() devolve uma subsequência que contém os 'tamanho' caracteres desta sequência de texto, a começar na 'posição', usando posições em bytes.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MIDB(texto;posição;tamanho)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posição em 'Bytes'</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Comprimento em 'Bytes'</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PROPER">
<title
>PROPER</title>
<para
>A função PROPER() converte a primeira letra de cada palavra para maiúscula e o resto das letras para minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PROPER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PROPER("isto é um título") retorna "Isto É Um Título"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXP">
<title
>REGEXP</title>
<para
>Retorna uma parte do string que corresponde a uma expressão regular. Se o string não corresponder a expressão regular fornecida, o valor especificado como padrão é retornado.</para>
<para
>Se uma referência anterior for fornecida, então o valor da referência anterior é retornado.</para>
<para
>Se nenhum valor padrão for fornecido, um string vazio é assumido como padrão. Se nenhuma referência anterior é fornecida, 0 é assumido (assim toda a parte correspondente é retornada).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REGEXP(texto; expressão_regular; padrão; referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto procurado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Expressão regular</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Valor padrão (opcional)</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Referência anterior (opcional)</seg
><seg
>Número</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>REGEXP("Número é 15.";"[0-9]+") = "15" </para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>REGEXP("15, 20, 26, 41";"([0-9]+), *[0-9]+$";"";1) = "26" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXPRE">
<title
>REGEXPRE</title>
<para
>Substitui todas as correspondências de uma expressão regula com o texto de substituição</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REGEXPRE(texto; expressão_regular; substituição)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto procurado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Expressão regular</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Substituição</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>REGEXPRE("14 e 15 e 16";"[0-9]+";"num") retorna "num e num e num"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACE">
<title
>REPLACE</title>
<para
>A função REPLACE substitui parte de um texto com um texto diferente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REPLACE(texto;posição;tamanho;novo_texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto que você deseja para substituir alguns caracteres</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posição dos caracteres para substituir</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>Número de caracteres para substituir</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>O texto que irá substituir o texto antigo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>REPLACE("abcdefghijk";6;5;"-") retorna "abcde-k"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>REPLACE("2002";3;2;"03") retorna "2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACEB">
<title
>REPLACEB</title>
<para
>A função REPLACEB() substitui parte de uma sequência de caracteres por outra diferente, usando posições em 'bytes'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REPLACEB(texto;posição;comprimento;novo_texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto ao qual deseja substituir alguns caracteres, usando posições em 'bytes'</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posição em 'bytes' dos caracteres a substituir</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>O tamanho em 'bytes' dos caracteres a substituir</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem>
<seglistitem
><seg
>O texto que irá substituir o texto antigo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPT">
<title
>REPT</title>
<para
>A função REPT() repete o primeiro parâmetro tantas vezes quantas indicadas pelo segundo parâmetro. O segundo parâmetro não deverá ser negativo, sendo que esta função irá devolver um texto em branco se o segundo parâmetro for zero (ou seja arredondado para zero).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REPT(texto;contagem)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Número de repetições</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>REPT( "kspread"; 3 ) retorna "kspreadkspreadkspread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>REPT("KSpread";0) devolve ""</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHT">
<title
>RIGHT</title>
<para
>A função RIGHT() retorna um fragmento de texto que contém os 'comprimento' de caracteres mais à direita do texto. A string inteira é retornada se 'comprimento' excede o comprimento da mesma.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RIGHT(texto;comprimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Número de caracteres</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RIGHT("alô";2) retorna "lô"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RIGHT("KSpread";10) retorna "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RIGHT("KSpread") retorna "d"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHTB">
<title
>RIGHTB</title>
<para
>A função RIGHTB() devolve uma subsequência de texto que contém os 'tamanho' caracteres mais à direita do texto, usando posições em bytes. A sequência completa é devolvida se 'tamanho' exceder o tamanho do texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RIGHTB(texto;comprimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Comprimento em 'Bytes'</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROT13">
<title
>ROT13</title>
<para
>A função ROT13() criptografa um texto substituindo cada letra com 13 posições à frente no alfabeto. Se a décima terceira posição estiver depois da letra Z, ele reinicia a contagem a partir do A (rotação).</para>
<para
>Aplicando a função de criptografia novamente no texto resultante, você pode descriptografar o texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROT13(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROT13("KSpread") retorna "XFcernq"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ROT13("XFcernq") retorna "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCH">
<title
>SEARCH</title>
<para
>A função SEARCH() procura um texto (texto_procurado) dentro de outro texto (texto) e retorna o número do posição inicial do texto_procurado, do caractere mais à esquerda do texto.</para>
<para
>Você pode usar caracteres curingas, interrogação (?) e asterisco (*). Uma interrogação representa um caractere simples, e um asterisco representa qualquer sequência de caracteres.</para>
<para
>O parâmetro iniciar_num especifica o caractere do qual a procura iniciará. O primeiro caractere é o de número 1. Se iniciar_num é omitido, é assumido que ele é 1. SEARCH não faz distinção de letras maiúsculas e minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SEARCH(texto_procurado;texto;número_inicial)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O texto que você deseja encontrar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O texto que deve conter procura_texto</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Especifique o índice de início de procura</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SEARCH("a";"Afirmativas";6) retorna 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SEARCH("margem";"Profit Margem") retorna 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCHB">
<title
>SEARCHB</title>
<para
>A função SEARCHB() procura uma sequência de texto (texto_procurado), dentro de uma cadeia de caracteres (dentro_texto), e devolve o número do ponto inicial de texto_procurado, a contar do caractere mais à esquerda de dentro_texto. Esta função assume posições em 'bytes'.</para>
<para
>Você pode usar caracteres curingas, interrogação (?) e asterisco (*). Uma interrogação representa um caractere simples, e um asterisco representa qualquer sequência de caracteres.</para>
<para
>O parâmetro num_inicio indica o caractere onde iniciar a procura. O primeiro caractere corresponde ao número 2. Se o num_inicio for omitido, assume-se como sendo 2. O SEARCHB não distingue entre maiúsculas e minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SEARCHB(texto_procurado;dentro_texto;num_inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O texto que você deseja encontrar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O texto que deve conter procura_texto</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Índice de 'bytes' específico onde iniciar a pesquisa</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLEEK">
<title
>SLEEK</title>
<para
>A função SLEEK() remove todos os espaços de um string.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLEEK(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SLEEK("Isto é algum texto ") retorna "Istoéalgumtexto"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TRIM"
>TRIM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBSTITUTE">
<title
>SUBSTITUTE</title>
<para
>A função SUBSTITUTE() substitui novo_texto por texto_antigo num texto. Se instância_num é especificado, apenas uma instância do texto_antigo é substituído. Caso contrário, toda ocorrência do texto_antigo é mudada para novo_texto. Use SUBSTITUTE quando você deseja substituir um texto específico, use REPLACE quando você deseja substituir qualquer texto que ocorre em uma localização específica.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUBSTITUTE(texto; text_antigo; novo_texto; instância_num)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto o qual você deseja substituir</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Parte do texto que você deseja substituir</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Novo texto que você irá sobrepor</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Qual ocorrência substituir</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUBSTITUTE("Custo Data";"Custo";"Vendas") retorna "Vendas Data"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUBSTITUTE("Qtr 1, 2001";"1";"3";1) retorna "Qtr 3, 2001"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUBSTITUTE("Qtr 1, 2001";"1";"3";4) retorna "Qtr 3, 2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="T">
<title
>T</title>
<para
>A função T() retorna o texto referenciado por valor. Se o valor é, ou refere-se a, um texto então T retorna o valor. Se o valor não se refere a um texto então T retorna um texto vazio.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>T(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>T("Calligra") retorna "Calligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>T(1.2) retorna "" (texto vazio)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TEXT">
<title
>TEXT</title>
<para
>A função TEXT() converte um valor para texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TEXT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TEXT(1234.56) retorna "1234.56"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TEXT("KSpread") retorna "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TOGGLE">
<title
>TOGGLE</title>
<para
>A função TOGGLE() muda os caracteres minúsculos para maiúsculos e vice-versa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TOGGLE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TOGGLE("alô") retorna "ALÔ"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TOGGLE("ALÔ") retorna "alô"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TOGGLE("HéLlO") retorna "hÉLIo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIM">
<title
>TRIM</title>
<para
>A função TRIM() retorna o texto com apenas espaços simples entre as palavras.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRIM(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TRIM(" olá KSpread ") retorna "olá KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICHAR">
<title
>UNICHAR</title>
<para
>A função UNICHAR() devolve o caractere indicado com um ponto de código Unicode.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>UNICHAR(código)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Código do caractere</seg
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>UNICHAR(65) retorna "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UNICODE"
>UNICODE</link
>&nbsp;</member>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICODE">
<title
>UNICODE</title>
<para
>A função UNICODE() devolve um ponto de código Unicode para o primeiro caractere de um texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Número inteiro (como 1, 141, 5678)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>UNICODE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>UNICODE("KDE") retorna 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UNICHAR"
>UNICHAR</link
>&nbsp;</member>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UPPER">
<title
>UPPER</title>
<para
>A função UPPER() converte um texto para maiúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>UPPER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>String fonte</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>UPPER("alô") retorna "ALÔ"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>UPPER("ALÔ") retorna "ALÔ"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VALUE">
<title
>VALUE</title>
<para
>Converte um string de texto que representa um valor num valor real. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>

<listitem
><para
>VALUE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>VALUE("14.03") retorna 14.03</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Trigonometric">
<title
>Trigonométrica</title>

<sect3 id="ACOS">
<title
>ACOS</title>
<para
>A função ACOS() retorna o arco-cosseno em radianos e o valor é matematicamente definido para estar entre zero e PI (inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACOS(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ACOS(0.8) igual à 0.6435011</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ACOS(0) igual à 1.57079633</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOSH">
<title
>ACOSH</title>
<para
>A função ACOSH() calcula o inverso do cosseno hiperbólico de x. É o valor cujo cosseno hiperbólico é x. Se x é menor que 1.0, acosh() retorna um não-número (NaN) e errno é configurado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACOSH(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ACOSH(5) igual à 2.29243167</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ACOSH(0) igual à NaN</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COSH"
>COSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOT">
<title
>ACOT</title>
<para
>A função ACOT() retorna o inverso da cotangente de um número.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACOT(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ACOT(0) igual à 1,57079633</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASIN">
<title
>ASIN</title>
<para
>A função ASIN() retorna o arco-seno em radianos e o valor é matematicamente definido como entre -PI/2 e PI/2 (inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ASIN(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ASIN(0.8) igual à 0.92729522</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ASIN(0) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASINH">
<title
>ASINH</title>
<para
>A função ASINH() calcula o inverso do seno hiperbólico de x, que é o valor cujo seno hiperbólico é x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ASINH(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ASINH(0.8) igual à 0.73266826</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ASINH(0) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SINH"
>SINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN">
<title
>ATAN</title>
<para
>A função ATAN() retorna o arco-tangente em radianos e o valor é matematicamente definido como entre -PI/2 e PI/2 (inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ATAN(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ATAN(0.8) igual à 0.67474094</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ATAN(0) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TAN"
>TAN</link
>&nbsp;</member>
<member
><link linkend="ATAN2"
>ATAN2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN2">
<title
>ATAN2</title>
<para
>Esta função calcula o arco-tangente de duas variáveis x e y. É similar a calcular o arco-tangente de (y/x), exceto que os sinais dos dois argumentos permitem determinar o quadrante do resultado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ATAN2(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ATAN2(0.5;1.0) igual à 1.107149</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ATAN2(-0.5;2.0) igual à 1.815775</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATANH">
<title
>ATANH</title>
<para
>A função ATANH() calcula o inverso da tangente hiperbólica de x, que é o valor cuja tangente hiperbólica é x. Se o valor absoluto de x é maior que 1.0, ATANH() retorna um não-número (NaN).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ATANH(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ATANH(0.8) igual à 1.09861229</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ATANH(0) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TANH"
>TANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COS">
<title
>COS</title>
<para
>A função COS() retorna o cosseno de x, onde x é informado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COS(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COS(0) igual à 1.0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COS(PI()/2) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
<member
><link linkend="ACOS"
>ACOS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COSH">
<title
>COSH</title>
<para
>A função COSH() retorna o cosseno hiperbólico de x, que é definido matematicamente como (exp(x) + exp(-x))/2.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COSH(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COSH(0.8) igual à 1.33743495</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COSH(0) igual à 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ACOSH"
>ACOSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSC">
<title
>CSC</title>
<para
>A função CSC() devolve a co-secante de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CSC(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CSC(PI()/2) é igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSCH">
<title
>CSCH</title>
<para
>A função CSCH() devolve a co-secante hiperbólica de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CSCH(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CSCH(PI()/2) é igual a 0,434537208...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEGREES">
<title
>DEGREES</title>
<para
>Esta função transforma um ângulo de radianos para graus.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEGREES(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEGREES(0,78) igual à 44.69</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEGREES(1) igual à 57,29</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RADIANS"
>RADIANS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PI">
<title
>PI</title>
<para
>A função PI() retorna o valor PI.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PI()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PI() é igual a 3,141592654...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RADIANS">
<title
>RADIANS</title>
<para
>Esta função transforma um ângulo de graus para radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RADIANS(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (graus)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RADIANS(75) igual à 1,308</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RADIANS(90) igual à 1,5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DEGREES"
>DEGREES</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEC">
<title
>SEC</title>
<para
>A função SEC() retorna a secante de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SEC(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SEC(0) é igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECH">
<title
>SECH</title>
<para
>A função SECH() retorna a secante hiperbólica de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SECH(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SECH(0) é igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIN">
<title
>SIN</title>
<para
>A função SIN() retorna o seno de x, onde x é informado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SIN(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SIN(0) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SIN(PI()/2) igual à 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
<member
><link linkend="ASIN"
>ASIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SINH">
<title
>SINH</title>
<para
>A função SINH() retorna o seno hiperbólico de x, que é definido matematicamente como (exp(x) - exp(-x))/2.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SINH(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SINH(0.8) igual à 0.88810598</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SINH(0) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ASINH"
>ASINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TAN">
<title
>TAN</title>
<para
>A função TAN() retorna a tangente de x, onde x é informado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TAN(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>

<listitem
><para
>TAN(0.7) igual à 0.84228838</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TAN(0) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TANH">
<title
>TANH</title>
<para
>A função TANH() retorna a tangente hiperbólica de x, que é definida matematicamente como sinh(x)/cosh(x).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TANH(Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de ponto flutuante (como 1,3, 0,343, 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TANH(0.8) igual à 0.66403677</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TANH(0) igual à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ATANH"
>ATANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2>
</sect1>
</chapter>
 


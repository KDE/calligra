<chapter id="functions">
<!--
*************************** DO NOT EDIT MANUALLY ************************

This file is autogenerated from *.xml files in calligra/tables/functions/
all changes will be overwritten on the next script run
-->
<title
>Fonctions</title>
<para
>&sheets; dispose d'un grand nombre de fonctions mathématiques intégrées et d'autres fonctions qui peuvent être utilisées dans des formules dans des cellules.</para>
<sect1 id="supported-functions">
<title
>Fonctions prises en charge</title>
<para
>Ce chapitre est un bref aperçu de toutes les fonctions prises en charge dans les groupes suivants : </para>
<simplelist>
<member
><link linkend="Bit-Operations"
>Opérations par bit</link
>&nbsp;</member>
<member
><link linkend="Conversion"
>Conversion</link
>&nbsp;</member>
<member
><link linkend="Database"
>Base de données</link
>&nbsp;</member>
<member
><link linkend="Date---Time"
>Date et heure</link
>&nbsp;</member>
<member
><link linkend="Engineering"
>Technique</link
>&nbsp;</member>
<member
><link linkend="Financial"
>Financières</link
>&nbsp;</member>
<member
><link linkend="Information"
>Information</link
>&nbsp;</member>
<member
><link linkend="Logical"
>Logiques</link
>&nbsp;</member>
<member
><link linkend="Lookup---Reference"
>Recherche et références</link
>&nbsp;</member>
<member
><link linkend="Math"
>Mathématiques</link
>&nbsp;</member>
<member
><link linkend="Statistical"
>Statistiques</link
>&nbsp;</member>
<member
><link linkend="Text"
>Texte</link
>&nbsp;</member>
<member
><link linkend="Trigonometric"
>Trigonométrie</link
>&nbsp;</member>
</simplelist>
<!--
<para
>OpenFormula groups (small, medium, and large, more)? Which are supported by Sheets?</para>
<para
>Something about interoperablity / spread sheet exchange / known issues, incompabitilites, errors?</para>
-->
<sect2 id="Bit-Operations">
<title
>Opérations par bit</title>

<sect3 id="BITAND">
<title
>BITAND</title>
<para
>La fonction BITAND() produit une opération AND bit à bit pour les deux paramètres intégrés.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BITAND(valeur;valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Premier nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Deuxième nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BITAND(12;10) renvoie 8 (car la décimale 12 est une binaire de 1100, et la décimale 10 est une binaire de 1010 ; et 1100 « anded » avec 1010 est 1000, qui est un entier de 8).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITLSHIFT">
<title
>BITLSHIFT</title>
<para
>La fonction BITLSHIFT() produit un déplacement par unités de l'ascenseur à gauche selon le premier paramètre. Le nombre d'unités du déplacement est spécifié par le second paramètre. Noter qu'un nombre négatif d'unités à déplacer à gauche produit un déplacement à droite. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BITLSHIFT(valeur; taille de déplacement)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Premier nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Monter l'ascenseur de gauche par</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITOR">
<title
>BITOR</title>
<para
>La fonction BITOR() produit une opération OR par unités pour les deux paramètres intégrés. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BITOR(valeur;valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Premier nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Deuxième nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BITOR(12;10) renvoie 14 (car la décimale de 12 est une binaire de 1100, et une décimale de 10 est une binaire de 1010 ; et 1100 « ored » avec 1010 est 1110, qui est un entier de 14).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITRSHIFT">
<title
>BITRSHIFT</title>
<para
>La fonction BITRSHIFT() produit un déplacement par unités de l'ascenseur à droite selon le premier paramètre. Le nombre d'unités du déplacement est spécifié par le second paramètre. Noter qu'un nombre négatif d'unités à déplacer à droite produit un déplacement à gauche. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BITRSHIFT(valeur; taille de déplacement)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Premier nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Monter l'ascenseur de droite par</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITXOR">
<title
>BITXOR</title>
<para
>La fonction BITXOR() produit une opération OR exclusivement par unités pour les deux paramètres intégrés. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BITXOR(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Premier nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Deuxième nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BITXOR(12;10) renvoie 6 (car la décimale 12 est une binaire de 1100, et la décimale 10 est une binaire de 1010; et 1100 « xored » avec 1010 est 0110, qui est un entier de 6).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Conversion">
<title
>Conversion</title>

<sect3 id="ARABIC">
<title
>ARABIC</title>
<para
>La fonction ARABIC() convertit un nombre romain en un nombre.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ARABIC(Nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Numérique</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ARABIC("IV") renvoie 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ARABIC("XCIX") renvoie 99</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ROMAN"
>ROMAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASCIITOCHAR">
<title
>ASCIITOCHAR</title>
<para
>La fonction ASCIITOCHAR() renvoie le caractère pour chaque code ASCII donné</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ASCIITOCHAR(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur ASCII à convertir</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ASCIITOCHAR(118) renvoie "v"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ASCIITOCHAR(75; 68; 69) renvoie "KDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2INT">
<title
>BOOL2INT</title>
<para
>La fonction BOOL2INT() renvoie une valeur entière pour une valeur booléenne donnée. Cette méthode est prévue pour utiliser une valeur booléenne dans les méthodes qui ont besoin d'un entier.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BOOL2INT(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur booléenne à convertir</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BOOL2INT(Vrai) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BOOL2INT(Faux) renvoie 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="INT2BOOL"
>INT2BOOL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2STRING">
<title
>BOOL2STRING</title>
<para
>La fonction BOOL2STRING() renvoie une valeur de chaîne pour une valeur booléenne donnée. Cette méthode est prévue pour utiliser un booléen dans les méthodes qui ont besoin d'une chaîne.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BOOL2STRING(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur booléenne à convertir</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BOOL2STRING(vrai) renvoie "Vrai"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BOOL2STRING(faux) renvoie "Faux"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>upper(BOOL2STRING(find("nan";"banana"))) renvoie VRAI</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARX">
<title
>CARX</title>
<para
>La fonction CARX() renvoie l'abscisse correspondant à la position d'un point dans un espace polaire.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CARX(Rayon;Angle)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Rayon</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CARX(12;1,5707) renvoie 0,00115592</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CARX(12;0) renvoie 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARY">
<title
>CARY</title>
<para
>La fonction CARY() renvoie l'ordonnée correspondant à la position d'un point dans un espace polaire.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CARY(Rayon;Angle)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Rayon</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CARY(12;1.5707) renvoie 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CARY(12;0) renvoie 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHARTOASCII">
<title
>CHARTOASCII</title>
<para
>La fonction CHARTOASCII() renvoie le code ASCII pour le caractère donné.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CHARTOASCII(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une chaîne d'un caractère à convertir</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CHARTOASCII("v") renvoie 118</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CHARTOASCII(r) est une erreur. Le caractère doit être entre guillemets.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DECSEX">
<title
>DECSEX</title>
<para
>La fonction DECSEX() convertit une valeur double en valeur de temps.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DECSEX(double)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DECSEX(1.6668) renvoie 1:40 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DECSEX(7,8) renvoie 7:47</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT2BOOL">
<title
>INT2BOOL</title>
<para
>La fonction INT2BOOL() renvoie une valeur booléenne pour un entier donné. Cette méthode est prévue pour utiliser un entier dans les méthodes qui ont besoin d'un booléen. Elle n'accepte que 0 ou 1. Si toute autre valeur est donnée, il est retourné Faux.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>INT2BOOL(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur entière à convertir</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INT2BOOL(1) renvoie vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INT2BOOL(0) renvoie Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OR(INT2BOOL(1), faux) renvoie vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BOOL2INT"
>BOOL2INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NUM2STRING">
<title
>NUM2STRING</title>
<para
>La fonction NUM2STRING() renvoie une valeur de chaîne pour un nombre donné. Notez que &sheets; peut convertir automatiquement les nombres en chaîne si nécessaire ; cette fonction est par conséquent rarement requise.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NUM2STRING(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre à convertir en chaîne</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NUM2STRING(10) renvoie "10"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NUM2STRING(2,05) renvoie "2,05"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>=find("101";NUM2STRING(A1)) (A1 = 2.010102) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="STRING"
>STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLA">
<title
>POLA</title>
<para
>La fonction POLA() renvoie l'angle (en radians) correspondant à la position d'un point dans un espace cartésien.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>POLA(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur en X</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeur en Y</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POLA(12;12) renvoie 0,78539816</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POLA(12;0) renvoie 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POLA(0;12) renvoie 1,5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLR">
<title
>POLR</title>
<para
>La fonction POLR() renvoie le rayon correspondant à la position d'un point dans un espace cartésien.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>POLR(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur en X</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeur en Y</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POLR(12;12) renvoie 16,9705</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POLR(12;0) renvoie 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROMAN">
<title
>ROMAN</title>
<para
>La fonction ROMAN() renvoie le nombre en chiffre romain. Le nombre doit être entier et positif. L'argument optionnel du Format le niveau de concision et la valeur par défaut est 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ROMAN(Nombre)</para
></listitem>

</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Format</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROMAN(99) renvoie "XCIX"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROMAN(-55) renvoie "Err"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ARABIC"
>ARABIC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEXDEC">
<title
>SEXDEC</title>
<para
>La fonction SEXDEC() renvoie une valeur décimale. Vous pouvez aussi donner une valeur de temps.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SEXDEC(valeur de temps) ou SEXDEC(heures;minutes;secondes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Heures</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minutes</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Secondes</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SEXDEC(1;5;7) renvoie 1,0852778 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SEXDEC("8:05") renvoie 8,08333333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STRING">
<title
>CHAÎNE</title>
<para
>La fonction STRING() renvoie une valeur de chaîne pour un nombre donné. Elle est identique à la fonction NUM2STRING().</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre à convertir en chaîne</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="NUM2STRING"
>NUM2STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Database">
<title
>Base de données</title>

<sect3 id="DAVERAGE">
<title
>DAVERAGE</title>
<para
>Calcule la moyenne dans une colonne d'une base de données spécifiée par un jeu de conditions pour les valeurs qui sont des nombres</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DAVERAGE(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAVERAGE(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNT">
<title
>DCOUNT</title>
<para
>Compte les cellules qui contiennent des valeurs numériques dans une colonne d'une base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DCOUNT(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DCOUNT(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNTA"
>DCOUNTA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNTA">
<title
>DCOUNTA</title>
<para
>Compte les cellules qui contiennent des valeurs numériques ou alphanumériques dans une colonne d'une base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DCOUNTA(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DCOUNTA(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNT"
>DCOUNT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DGET">
<title
>DGET</title>
<para
>Renvoie une simple valeur d'une colonne d'une base de données spécifiée par un jeu de conditions. Cette fonction renvoie une erreur si aucune valeur ou plus d'une valeur existent.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DGET(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DGET(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMAX">
<title
>DMAX</title>
<para
>renvoie la plus grande valeur dans une colonne d'une base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DMAX(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DMAX(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DMIN"
>DMIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMIN">
<title
>DMIN</title>
<para
>renvoie la plus petite valeur dans une colonne d'une base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DMIN(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DMIN(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DMAX"
>DMAX</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DPRODUCT">
<title
>DPRODUCT</title>
<para
>renvoie le produit de toutes les valeurs numériques dans une colonne de base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DPRODUCT(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DPRODUCT(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEV">
<title
>DSTDEV</title>
<para
>renvoie l'estimation de l'écart-type d'une population en fonction d'un échantillon qui utilise toutes les valeurs numériques dans une colonne d'une base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DSTDEV(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DSTDEV(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEVP"
>DSTDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEVP">
<title
>DSTDEVP</title>
<para
>renvoie l'estimation de l'écart-type d'une population entière en utilisant toutes les valeurs numériques dans une colonne d'une base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DSTDEVP(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DSTDEVP(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEV"
>DSTDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSUM">
<title
>DSUM</title>
<para
>Additionne les nombres dans une colonne d'une base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DSUM(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DSUM(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVAR">
<title
>DVAR</title>
<para
>renvoie l'estimation de la variance d'une population fondée sur un échantillon qui utilise toutes les valeurs numériques dans une colonne d'une base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DVAR(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DVAR(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DVARP"
>DVARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVARP">
<title
>DVARP</title>
<para
>renvoie l'estimation de la variance d'une population entière qui utilise toutes les valeurs numériques dans une colonne d'une base de données spécifiée par un jeu de conditions.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DVARP(Base_de_données; "en-tête"; Conditions)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la base de données</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Chaîne marquant la colonne dans la base de données</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage marquant les conditions</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DVARP(A1:C5; "Salaire"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DVAR"
>DVAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GETPIVOTDATA">
<title
>GETPIVOTDATA</title>
<para
>Cherche les données de sommaire dans une table pivot.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>GETPIVOTDATA(Base de données; "Ventes")</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage marquant la table-pivot</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nom du champ dont vous voulez les données de sommaire</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Date---Time">
<title
>Date et heure</title>

<sect3 id="CURRENTDATE">
<title
>CURRENTDATE</title>
<para
>La fonction CURRENTDATE() renvoie la date actuelle. Elle est équivalente à la fonction TODAY.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CURRENTDATE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CURRENTDATE() renvoie "Samedi 13 avril 2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTDATETIME">
<title
>CURRENTDATETIME</title>
<para
>La fonction CURRENTDATETIME() renvoie la date et heure courante.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CURRENTDATETIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CURRENTDATETIME() renvoie "Samedi 15 juillet 2000 19:12:01"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTTIME">
<title
>CURRENTTIME</title>
<para
>La fonction CURRENTTIME() renvoie l'heure actuelle formatée avec les paramètres locaux.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CURRENTTIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CURRENTTIME() renvoie "19:12:01"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE">
<title
>DATE</title>
<para
>La fonction DATE() renvoie la date formatée avec les paramètres locaux.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DATE(année;mois;jour)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Année</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mois</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>jour</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DATE(2000;5;5) renvoie Vendredi 5 Mai 2000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE2UNIX">
<title
>DATE2UNIX</title>
<para
>La fonction DATE2UNIX() convertit une date et une valeur de temps en temps unix.</para>
<para
>Un temps unix est le nombre de secondes après le 1er Janvier 1970 minuit.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DATE2UNIX(date)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DATE2UNIX("01/01/2000") renvoie 946,681,200</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEDIF">
<title
>DATEDIF</title>
<para
>La fonction DATEDIF() renvoie la différence entre deux dates.</para>
<para
>l'intervalle doit être un des suivants : « m » : mois ; « j » : jours ; « a » : années complètes ; « am » : mois excluant les années ; « aj » : jours excluant les années ; « mj » : jours excluant les mois et les années</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DATEDIF(première date ; seconde date; intervalle)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Première date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Deuxième date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>intervalle</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DATEDIF(A1;A2;"d") si A1 est "1er Janvier 1995" et si A2 est "15 Juin 1999" calcule le nombre de jours entre les deux dates soit 1626</para
></listitem>
</varlistentry>

<varlistentry
><term
>Exemples</term>
<listitem
><para
>DATEDIF(A1;A2;"m") si A1 est "1er Janvier 1995" et si A2 est "15 Juin 1999" calcule le nombre de semaines entre les deux dates soit 53</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEVALUE">
<title
>DATEVALUE</title>
<para
>La fonction DATEVALUE renvoie un nombre représentant le jour, c'est-à-dire le nombre de jours écoulés depuis le 31 décembre 1899.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DATEVALUE(date)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DATEVALUE("2/22/2002") renvoie 37309</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="TIMEVALUE"
>TIMEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAY">
<title
>DAY</title>
<para
>La fonction DAY renvoie le jour d'une date. Si aucun paramètre n'est spécifié, le jour courant est retourné.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DAY(date)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAY("2/22/2002") renvoie 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAY(2323,1285) renvoie 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYNAME">
<title
>DAYNAME</title>
<para
>La fonction DAYNAME() renvoie le nom du jour de la semaine (1...7). Dans certains pays, le premier jour de la semaine est lundi, alors que dans d'autres, c'est dimanche.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DAYNAME(jour de la semaine)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Numéro du jour dans la semaine (1...7)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAYNAME(1) renvoie lundi (si la semaine commence le lundi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="WEEKDAY"
>WEEKDAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYOFYEAR">
<title
>DAYOFYEAR</title>
<para
>La fonction DAYOFYEAR() renvoie le numéro du jour dans l'année (1...365).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DAYOFYEAR(année;mois;jour)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Année</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mois</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>jour</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAYOFYEAR(2000;12;1) renvoie 336</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAYOFYEAR(2000;2;29) renvoie 60</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS">
<title
>DAYS</title>
<para
>La fonction DAYS() renvoie la différence entre deux dates en jours.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DAYS(date2; date1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Première valeur de date (plus tôt)</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Deuxième valeur de date</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAYS("22/02/2002"; "26/02/2002") renvoie 4</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS360">
<title
>DAYS360</title>
<para
>La fonction DAYS360() renvoie le nombre de jours de "date1" à "date2" en utilisant un calendrier de 360 jours dans lequel tous les mois sont supposés avoir 30 jours. Si "méthode" est Faux (par défaut), la méthode US sera utilisée, sinon ça sera la méthode européenne.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DAYS360(date1; date2; méthode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date1</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Date2</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Méthode</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAYS360("2/22/2002", "4/21/2002", FAUX) renvoie 59.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DAYS"
>DAYS</link
>&nbsp;</member>
<member
><link linkend="MONTHS"
>MONTHS</link
>&nbsp;</member>
<member
><link linkend="WEEKS"
>WEEKS</link
>&nbsp;</member>
<member
><link linkend="YEARS"
>YEARS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINMONTH">
<title
>DAYSINMONTH</title>
<para
>La fonction DAYSINMONTH() renvoie le nombre de jours dans le mois et l'année donnés.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DAYSINMONTH(année;mois)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Année</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mois</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAYSINMONTH(2000;2) renvoie 29</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINYEAR">
<title
>DAYSINYEAR</title>
<para
>La fonction DAYSINYEAR() renvoie le nombre de jours dans l'année donnée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DAYSINYEAR(année)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Année</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DAYSINYEAR(2000) renvoie 366</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EASTERSUNDAY">
<title
>EASTERSUNDAY</title>
<para
>La fonction EASTERSUNDAY() renvoie la date qui correspond au dimanche de Pâques dans l'année donnée en paramètre.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EASTERSUNDAY(année)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Année</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EASTERSUNDAY(2003) renvoie "20 avril 2003"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EDATE">
<title
>EDATE</title>
<para
>La fonction EDATE renvoie la date qui est spécifiée par une date donnée et un nombre de mois avant ou après cette date.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EDATE(date;mois)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Mois</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EDATE("2/22/2002"; 3) renvoie "5/22/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EDATE("3/31/2002"; -1) renvoie "2/28/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DATE"
>DATE</link
>&nbsp;</member>
<member
><link linkend="EOMONTH"
>EOMONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EOMONTH">
<title
>EOMONTH</title>
<para
>La fonction EOMONTH renvoie le dernier jour du mois spécifié par une date et le nombre de mois depuis cette date.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EOMONTH(date; mois)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Mois</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EOMONTH("2/22/2002"; 3) renvoie "5/31/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EOMONTH("3/12/2002"; -1) renvoie "2/28/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EOMONTH("3/12/2002"; 0) renvoie "3/31/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="EDATE"
>EDATE</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOUR">
<title
>HOUR</title>
<para
>La fonction HOUR renvoie l'heure d'un temps. Si aucun paramètre n'est spécifié, l'heure courante est retournée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>HOUR(temps)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Heure</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HOUR("22:10:12") renvoie 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HOUR(0,1285) renvoie 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOURS">
<title
>HOURS</title>
<para
>La fonction HOURS() renvoie la valeur des heures dans une expression de temps.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>HOURS(temps)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Heure</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HOURS("10:5:2") renvoie 10</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLEAPYEAR">
<title
>ISLEAPYEAR</title>
<para
>La fonction ISLEAPYEAR() renvoie Vrai si l'année donnée est bissextile.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISLEAPYEAR(année)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Année</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISLEAPYEAR(2000) renvoie Vrai</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISOWEEKNUM">
<title
>ISOWEEKNUM</title>
<para
>La fonction ISOWEEKNUM() renvoie le numéro de semaine qui contient la date. Notez que cette fonction se plie au standard ISO8601 : une semaine standard commence toujours un lundi et finit un dimanche. La première semaine de l'année est celle qui contient le premier jeudi de l'année.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISOWEEKNUM(date)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISOWEEKNUM(A1) renvoie 51quand A1 vaut "21 déc".</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="WEEKNUM"
>WEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTE">
<title
>MINUTE</title>
<para
>La fonction MINUTE renvoie les minutes d'un temps. Si aucun paramètre n'est spécifié, la minute courante est retournée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MINUTE(temps)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Heure</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MINUTE("22:10:12") renvoie 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MINUTE(0,1234) renvoie 57</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTES">
<title
>MINUTES</title>
<para
>La fonction MINUTES() renvoie la valeur des minutes dans une expression de temps.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MINUTES(temps)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Heure</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MINUTES("10:5:2") renvoie 5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTH">
<title
>MONTH</title>
<para
>La fonction MONTH renvoie le mois d'une date. Si aucun paramètre n'est spécifié, le mois courant est retourné.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MONTH(date)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MONTH("2/22/2002") renvoie 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MONTH(2323,1285) renvoie 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHNAME">
<title
>MONTHNAME</title>
<para
>La fonction MONTHNAME() renvoie le nom du mois (1...12).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MONTHNAME(Nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Numéro du mois (1..12)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MONTHNAME(5) renvoie mai</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHS">
<title
>MONTHS</title>
<para
>La fonction MONTHS() renvoie la différence entre deux dates en mois. Le troisième paramètre indique le mode de calcul : si le mode est 0, MONTHS() renvoie le nombre maximal possible de mois entre ces jours. Si le mode est 1, elle renvoie le nombre de mois complets entre elles.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MONTHS(date2; date1; mode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Première valeur de date (plus tôt)</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Deuxième valeur de date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Mode de calcul</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MONTHS("18/1/2002"; "26/2/2002"; 0) renvoie 1, car il y a 1 mois et 8 jours entre les dates</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MONTHS("19/1/2002", "26/2/2002", 1) renvoie 0, car il il n'y a pas un mois entier de séparation, en commençant par le premier jour du mois</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NETWORKDAY">
<title
>NETWORKDAY</title>
<para
>La fonction NETWORKDAY() renvoie le nombre de jours ouvrés entre la date de début et celle de fin.</para>
<para
>Les vacances doivent avoir une des valeurs suivantes : nombre = jours à ajouter, une date seule ou un intervalle de dates.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NETWORKDAY (date de début ; date de fin ; vacances)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date de début</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Date de fin</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Vacances	</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NETWORKDAY("01/01/2001";"01/08/2001") renvoie 5 jours ouvrés</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NETWORKDAY("01/01/2001";"01/08/2001";2) renvoie 3 jours ouvrés</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOW">
<title
>NOW</title>
<para
>La fonction NOW() renvoie la date et l'heure courante. Elle est identique à CURRENTDATETIME et fournie pour compatibilité avec d'autres applications.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NOW()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NOW() renvoie "Samedi 13 avril 2002 19:12:01"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECOND">
<title
>SECOND</title>
<para
>La fonction SECOND renvoie les secondes d'un temps. Si aucun paramètre n'est spécifié, la seconde courante est retournée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SECOND(temps)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Heure</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SECOND("22:10:12") renvoie 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SECOND(0,1234) renvoie 42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECONDS">
<title
>SECONDS</title>
<para
>La fonction SECONDS() renvoie la valeur des secondes dans une expression de temps.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SECONDS(temps)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Heure</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SECONDS("10:5:2") renvoie 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIME">
<title
>TIME</title>
<para
>La fonction TIME() renvoie l'heure formatée avec les paramètres locaux.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TIME(heures;minutes;secondes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Heures</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minutes</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Secondes</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TIME(10;2;2) renvoie 10:02:02</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TIME(10;70;0) renvoie 11:10:0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TIME(10;-40;0) renvoie 9:20:0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIMEVALUE">
<title
>TIMEVALUE</title>
<para
>La fonction TIMEVALUE() renvoie un nombre (entre 0 et 1) représentant l'heure du jour.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TIMEVALUE(temps)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Heure</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TIMEVALUE("10:05:02") renvoie 0,42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DATEVALUE"
>DATEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TODAY">
<title
>TODAY</title>
<para
>La fonction TODAY() renvoie la date actuelle.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TODAY()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TODAY() renvoie "Samedi 13 avril 2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="NOW"
>NOW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNIX2DATE">
<title
>UNIX2DATE</title>
<para
>La fonction UNIX2DATE() convertit un temps unix en une date et une valeur de temps.</para>
<para
>Un temps unix est le nombre de secondes après le 1er Janvier 1970 minuit.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>UNIX2DATE(unixtime)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Temps unix</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>UNIX2DATE(0) renvoie 1970-01-01</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKDAY">
<title
>WEEKDAY</title>
<para
>La fonction WEEKDAY() renvoie le jour de la semaine d'une date donnée. Si la méthode est 1 (par défaut), WEEKDAY() renvoie 1 pour dimanche, 2 pour lundi, etc. Si la méthode est 2, lundi est 1, mardi est 2, etc. et si la méthode est 3, WEEKDAY() renvoie 0 pour lundi, 1 pour mardi, etc.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>WEEKDAY(date; méthode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Méthode (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>WEEKDAY("2002-02-22"; 2) renvoie 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DAYNAME"
>DAYNAME</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKNUM">
<title
>WEEKNUM</title>
<para
>La fonction WEEKNUM() renvoie le numéro non-ISO de semaine à laquelle la date correspond;</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>WEEKNUM(date; méthode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Méthode (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NO.SEMAINE(A1; 1) renvoie 11 quand A1 est "9 Mars 2008". Numéro de la semaine dans l'année avec une semaine commençant le Dimanche (11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>WEEKNUM(A1; 2) renvoie 10 when A1 is "9th of March 2008". Number of the week in the year, with a week beginning on Monday (10)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ISOWEEKNUM"
>ISOWEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKS">
<title
>WEEKS</title>
<para
>La fonction WEEKS() renvoie l'écart entre deux dates en semaines. Le troisième paramètre indique le mode de calcul : si le mode est 0, WEEKS() renvoie le nombre maximal possible de semaines entre ces jours. Si le mode est 1, elle ne renvoie que le nombre de semaines entières entre elles.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>WEEKS(date2; date1; mode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Première valeur de date (plus tôt)</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Deuxième valeur de date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Mode de calcul</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>WEEKS("18/2/2002"; "26/2/2002"; 0) renvoie 1, parce qu'il y a une semaine et un jour entre</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>WEEKS("19/02/2002"; "19/02/2002"; 1) renvoie 0, car il n'y a pas une semaine entière entre, en commençant par le premier jour de la semaine (lundi ou dimanche en fonction de vos réglages locaux)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKSINYEAR">
<title
>WEEKSINYEAR</title>
<para
>La fonction WEEKSINYEAR() renvoie le nombre de semaines dans l'année donnée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>WEEKSINYEAR(année)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Année</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>WEEKSINYEAR(2000) renvoie 52</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WORKDAY">
<title
>WORKDAY</title>
<para
>La fonction WORKDAY() renvoie la date des jours ouvrés depuis la date de début..</para>
<para
>Les vacances doivent avoir une des valeurs suivantes : nombre = jours à ajouter, une date seule ou un intervalle de dates.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Date</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>WORKDAY (date début ; jours ; vacances)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date de début</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Jours ouvrés</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Vacances	</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>WORKDAY(B9;2;D3:E4) B9 est "01/01/2001", D3 est "01/03/2001", D4 est "01/04/2003" jours ouvrés "Vendredi 5 janvier 2001"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEAR">
<title
>YEAR</title>
<para
>La fonction YEAR renvoie l'année d'une date. Si aucun paramètre n'est spécifié, l'année courante est retournée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>YEAR(date)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>YEAR("2/22/2002") renvoie 2002</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>YEAR(2323,1285) renvoie 1906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARFRAC">
<title
>YEARFRAC</title>
<para
>La fonction YEARFRAC() renvoie le nombre de jours complets entre la date de début et la date de fin en fonction de la base.</para>
<para
>Base doit être une des valeurs suivantes : 0 = 30/360 US, 1 = Actual/actual, 2 = Actual/360, 3 = Actual/365, 4 = European 30/360</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FRACTION.ANNEE (date début ; date fin ; base)	</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Première date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Deuxième date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>intervalle</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARS">
<title
>YEARS</title>
<para
>La fonction YEARS() renvoie la différence entre deux dates en années. Le troisième paramètre indique le mode de calcul : si le mode est 0, YEARS() renvoie le nombre maximal possible d'années entre ces jours. Si le mode est 1, elle ne renvoie que les années entières, en commençant par le 1er janvier et en terminant par le 31 décembre.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>YEARS(date2; date1; mode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Première valeur de date (plus tôt)</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Deuxième valeur de date</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Mode de calcul</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>YEARS("19/02/2001"; "26/02/2002"; 0) renvoie 1, car il y a un an et 7 jours entre les dates</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>YEARS("19/02/2002"; "26/02/2002"; 1) renvoie 0, car il n'y a pas une année complète entre les dates lorsqu'on commence le premier jour de l'année</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Engineering">
<title
>Technique</title>

<sect3 id="BASE">
<title
>BASE</title>
<para
>La fonction BASE() convertit un nombre d'une base 10 en une valeur de chaîne dans une base cible entre 2 et 36.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BASE(nombre;base;prec)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>LongueurMini</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BASE(128;8) renvoie "200"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELI">
<title
>BESSELI</title>
<para
>La fonction BESSELI() renvoie la fonction Bessel ln(x) modifiée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BESSELI(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Où la fonction est évaluée</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordre de la fonction</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BESSELI(0,7;3) renvoie 0,007367374</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELJ">
<title
>BESSELJ</title>
<para
>La fonction BESSELJ() renvoie la fonction BESSEL.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BESSELJ(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Où la fonction est évaluée</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordre de la fonction</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BESSELJ(0,89;3) renvoie 0,013974004</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELK">
<title
>BESSELK</title>
<para
>La fonction BESSELK() renvoie la fonction Bessel modifiée, qui est équivalente à la fonction Bessel évaluée pour des arguments purement imaginaires.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BESSELK(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Où la fonction est évaluée</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordre de la fonction</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BESSELK(3;9) renvoie 397,95880</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELY">
<title
>BESSELY</title>
<para
>La fonction BESSELY() renvoie la fonction Bessel, qui est aussi nommée la fonction de Weber ou la fonction de Neumann.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BESSELY(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Où la fonction est évaluée</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordre de la fonction</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BESSELY(4;2) vaut 0,215903595</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="BIN2DEC">
<title
>BIN2DEC</title>
<para
>La fonction BIN2DEC() renvoie la valeur formatée comme un nombre décimal.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BIN2DEC(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BIN2DEC("1010") renvoie 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BIN2DEC("11111") renvoie 31 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2HEX">
<title
>BIN2HEX</title>
<para
>La fonction BIN2HEX() renvoie la valeur formatée comme un nombre hexadécimal.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BIN2HEX(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>La longueur minimun de la sortie</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BIN2HEX("1010") renvoie "a"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BIN2HEX("11111") "1f"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2OCT">
<title
>BIN2OCT</title>
<para
>La fonction BIN2OCT() renvoie la valeur formatée comme un nombre octal.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BIN2OCT(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>La longueur minimun de la sortie</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BIN2OCT("1010") renvoie "12" </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BIN2OCT("11111") renvoie "37" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPLEX">
<title
>COMPLEX</title>
<para
>COMPLEX(réel,imag) renvoie un nombre complexe de la forme x+yi.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COMPLEX(réel;imag)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Coefficient réel</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Coefficient imaginaire</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMPLEX(1,2;3,4) renvoie "1,2+3,4i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMPLEX(0;-1) renvoie "-i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONVERT">
<title
>CONVERT</title>
<para
>La fonction CONVERT() renvoie une conversion d'un système de mesure à un autre.</para>
<para
>Unités de masse gérées : g (gramme), sg (pieces), lbm (pound=livre), u (masse atomique), ozm (ounce), stone, ton, grain, pweight (pennyweight), hweight (hundredweight), bron (gross registered ton).</para>
<para
>Unités de distance gérées : m (mètre), in (inch=pouce), ft (feet=pied), mi (mile), Nmi (mile nautique), ang (Angstrom), parse, lightyear (année lumière).</para>
<para
>Unités de pression gérées : Pa (Pascal), atm (atmosphère), mmHg (mm de mercure), psi, Torr.</para>
<para
>Unités de force gérées : N (Newton), dyn, pound.</para>
<para
>Unités d'énergie gérées : J (Joule), e (erg), c (calorie thermodynamique), cal (IT calorie), eV (électron-volt), HPh (Cheval-vapeur.heure), Wh (Watt.heure), flb (foot-pound), BTU.</para>
<para
>Unités de puissance gérées : W (Watt), HP (horsepower=cheval-vapeur), PS (Pferdestaerke=cheval-vapeur).</para>
<para
>Unités de magnétisme gérées : T (Tesla), ga (Gauss).</para>
<para
>Unités de température gérées : C (Celsius), F (Fahrenheit), K (Kelvin).</para>
<para
>Unités de volume gérées : l (litre), tsp (cuiller à café), tbs (cuiller à soupe), oz (ounce liquid), cup, pt (pint), qt (quart), gal (gallon), barrel, m3 (mètre cube), mi3 (mile cubique), Nmi3 (mile nautique cubique), in3 (pouce cube), ft3 (pied cube), yd3 (yard cube).</para>
<para
>Unités de surface gérées : m2 (mètre carré), mi2 (mile carré), Nmi2 (mile nautique carré), in2 (pouce carré), ft2 (pied carré), yd2 (yard carré), acre, ha (hectare).</para>
<para
>Unités de vitesse gérées : m/s (mètres par seconde), m/h (mètres par heure), mph (miles par heure), kn (nœud).</para>
<para
>Pour les unités métriques, n'importe lequel des préfixes suivants peut être utilisé : E (exa, 1E+18), P (peta, 1E+15), T (tera, 1E+12), G (giga, 1E+09), M (mega, 1E+06), k (kilo, 1E+03), h (hecto, 1E+02), e (deca, 1E+01), d (deci, 1E-01), c (centi, 1E-02), m (milli, 1E-03), u (micro, 1E-06), n (nano, 1E-09), p (pico, 1E-12), f (femto, 1E-15), a (atto, 1E-18).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CONVERT(Nombre;de l'unité;vers l'unité)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Unité source</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Unité finale</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CONVERT(32;"C";"F") vaut 89,6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CONVERT(3;"lbm";"kg") vaut 1,3608</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CONVERT(7,9;"cal";"J") vaut 33,0757</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2BIN">
<title
>DEC2BIN</title>
<para
>La fonction DEC2BIN() renvoie la valeur formatée comme nombre binaire.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DEC2BIN(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La longueur minimun de la sortie</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEC2BIN(12) renvoie "1100"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEC2BIN(55) renvoie "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2HEX">
<title
>DEC2HEX</title>
<para
>La fonction DEC2HEX() renvoie la valeur formatée comme un nombre hexadécimal.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DEC2HEX(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La longueur minimun de la sortie</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEC2HEX(12) renvoie "c"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEC2HEX(55) renvoie "37"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2OCT">
<title
>DEC2OCT</title>
<para
>La fonction DEC2OCT() renvoie la valeur formatée comme un nombre octal.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DEC2OCT(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La longueur minimun de la sortie</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEC2OCT(12) renvoie "14"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEC2OCT(55) renvoie "67"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DELTA">
<title
>DELTA</title>
<para
>La fonction DELTA() renvoie 1 si x vaut y, sinon elle renvoie 0. La valeur par défaut de y est 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DELTA(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DELTA(1,2;3,4) renvoie 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DELTA(3;3) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DELTA(1;VRAI) renvoie 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERF">
<title
>ERF</title>
<para
>La fonction ERF() renvoie la fonction erreur. Avec un seul argument, ERF() renvoie la fonction erreur entre 0 et cet argument.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ERF(limite basse;limite haute)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Délimiteur bas</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Délimiteur haut</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ERF(0,4) vaut 0,42839236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ERFC"
>ERFC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERFC">
<title
>ERFC</title>
<para
>La fonction ERFC() renvoie la fonction d'erreur complémentaire.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ERFC(Limite basse;limite haute)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Délimiteur bas</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Délimiteur haut</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ERFC(0,4) vaut 0,57160764</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ERF"
>ERF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GESTEP">
<title
>GESTEP</title>
<para
>La fonction GESTEP() renvoie 1 si x est supérieur ou égal à y, sinon elle renvoie 0. La valeur de y par défaut est 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>GESTEP(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GESTEP(1,2;3,4) renvoie 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GESTEP(3;3) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GESTEP(0,4;VRAI) renvoie 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GESTEP(4;3) renvoie 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2BIN">
<title
>HEX2BIN</title>
<para
>La fonction HEX2BIN() renvoie la valeur formatée comme nombre binaire.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>HEX2BIN(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HEX2BIN("A") renvoie "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HEX2BIN("37") renvoie "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2DEC">
<title
>HEX2DEC</title>
<para
>La fonction HEX2DEC() renvoie la valeur formatée comme un nombre décimal.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>HEX2DEC(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HEX2DEC("a") renvoie 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HEX2DEC("37") renvoie 55 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2OCT">
<title
>HEX2OCT</title>
<para
>La fonction HEX2OCT() renvoie la valeur formatée comme un nombre octal.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>HEX2OCT(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HEX2OCT("a") renvoie "12" </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HEX2OCT("37") renvoie "67" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMABS">
<title
>IMABS</title>
<para
>IMABS(nombre complexe) renvoie la norme d'un nombre complexe de forme x+yi.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMABS(nombre complexe)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMABS("1,2+5i") renvoie 5,1419</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMABS("-i") renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMABS("12") renvoie 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMAGINARY">
<title
>IMAGINARY</title>
<para
>IMAGINARY(chaîne) renvoie le coefficient imaginaire d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMAGINARY(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMAGINARY("1,2+3,4i") renvoie 3,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMAGINARY("1,2") renvoie 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMARGUMENT">
<title
>IMARGUMENT</title>
<para
>IMARGUMENT(nombre complexe) renvoie l'argument d'un nombre complexe de forme x+yi.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMARGUMENT(nombre complexe)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMARGUMENT("1,2+5i") renvoie 0,6072</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMARGUMENT("-i") renvoie -1.57079633 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMARGUMENT("12") renvoie "#Div/0"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCONJUGATE">
<title
>IMCONJUGATE</title>
<para
>IMCONJUGATE(nombre complexe) renvoie le conjugué d'un nombre complexe de forme x+yi.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMCONJUGATE(nombre complexe)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCONJUGATE("1,2+5i") renvoie "1,2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCONJUGATE("-i") renvoie "i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCONJUGATE("12") renvoie "12"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOS">
<title
>IMCOS</title>
<para
>IMCOS(chaîne) renvoie le cosinus d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMCOS(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCOS("1+i") renvoie "0,83373-0,988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCOS("12i") renvoie 81 377.4 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOSH">
<title
>IMCOSH</title>
<para
>IMCOSh(chaîne) renvoie le cosinus hyperbolique d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>

<listitem
><para
>IMCOSH(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCOSH("1+i") renvoie "0.83373+0.988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCOSH("12i") renvoie 0.84358 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOT">
<title
>IMCOT</title>
<para
>IMCOT(chaîne) renvoie la cotangente d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMCOT(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCOT("1+i") renvoie « 0.21762-0.86801i »</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSC">
<title
>IMCSC</title>
<para
>IMCSC(string) renvoie la cosécante d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMCSC(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCSC("1+i") renvoie « 0.62151-0.30393i »</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSCH">
<title
>IMCSCH</title>
<para
>IMCSCH(chaîne) renvoie la cosécante hyperbolique d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMCSCH(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMCSCH("1+i") renvoie « 0.30393-i0.62151 »</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMDIV">
<title
>IMDIV</title>
<para
>IMDIV() renvoie la division de plusieurs nombres complexes de forme x+iy.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMDIV(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMDIV(1,2;"3,4+5i") renvoie "0,111597-0,164114i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMDIV("12+i";"12-i") renvoie "0,986207+0,16551i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMEXP">
<title
>IMEXP</title>
<para
>IMEXP(chaîne) renvoie l'exponentielle d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMEXP(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMEXP("2-i") renvoie "3,99232-6,21768i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMEXP("12i") renvoie « 0.843854-0.536573i » </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLN">
<title
>IMLN</title>
<para
>IMLN(chaîne) renvoie le logarithme naturel d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMLN(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMLN("3-i") renvoie "1,15129-0,321751i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMLN("12") renvoie 2,48491 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG10">
<title
>IMLOG10</title>
<para
>IMLLOG10chaîne) renvoie le logarithme en base 10 d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMLOG10(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMLOG10("3+4i") renvoie "0.69897+0.402719i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG2">
<title
>IMLOG2</title>
<para
>IMLOG2(chaîne) renvoie le logarithme en base-2 d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMLOG2(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMLOG2("3+4i") renvoie "2.321928+1.337804i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPOWER">
<title
>IMPOWER</title>
<para
>IMPOWER(chaîne) renvoie un nombre complexe élevé à une puissance.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMPOWER(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Puissance</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMPOWER("4-i";2) renvoie "15-8i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMPOWER("1.2";2) renvoie 1.44 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPRODUCT">
<title
>IMPRODUCT</title>
<para
>IMPRODUCT() renvoie le produit de plusieurs nombres complexes de forme x+yi.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMPRODUCT(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMPRODUCT(1,2;"3,4+5i") renvoie "4,08+6i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMPRODUCT(1,2;"1i") renvoie "+1,2i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMREAL">
<title
>IMREAL</title>
<para
>IMREAL(chaîne) renvoie le coefficient réel d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMREAL(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMREAL("1,2+3,4i") renvoie 1,2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMREAL("1.2i") renvoie 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSEC">
<title
>IMSEC</title>
<para
>IMSEC(chaîne) renvoie la sécante d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMSEC(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSEC("1+i") renvoie « 0.49833+i0.59108 »</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSECH">
<title
>IMSECH</title>
<para
>IMSECH(chaîne) renvoie la sécante hyperbolique d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMSECH(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSECH("1+i") renvoie « 0.49833-i0.59108 »</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSIN">
<title
>IMSIN</title>
<para
>La fonction IMSIN(chaîne) renvoie le sinus d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMSIN(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSIN("1+i") renvoie "1,29846+0,634964i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSIN("1,2") renvoie -0,536573 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSINH">
<title
>IMSINH</title>
<para
>La fonction IMSINH(chaîne) renvoie le sinus hyperbolique d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMSINH(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSINH("1+i") renvoie "0.63496+1.29846i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSINH("1.2") renvoie 1.50946 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSQRT">
<title
>IMSQRT</title>
<para
>IMSQRT(chaîne) renvoie la racine carrée d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMSQRT(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSQRT("1+i") renvoie "1,09868+0,45509i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSQRT("1.2i") renvoie "0.774597+0.774597i" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUB">
<title
>IMSUB</title>
<para
>IMSUB() renvoie la différence entre plusieurs nombres complexes de forme x+yi.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMSUB(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSUB(1,2;"3,4+5i") renvoie "-2,2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSUB(1,2;"1i") renvoie "1,2-i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUM">
<title
>IMSUM</title>
<para
>IMSUM() renvoie la somme de plusieurs nombres complexes de forme x+yi.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMSUM(valeur,valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSUM(1,2;"3,4+5i") renvoie "4,6+5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMSUM(1,2;"1i") renvoie "1,2+i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTAN">
<title
>IMTAN</title>
<para
>La fonction IMTAN(chaîne) renvoie la tangente d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMTAN(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMTAN("1+i") renvoie "0.27175+1.08392i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMTAN("12") renvoie 2.57215</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTANH">
<title
>IMTANH</title>
<para
>La fonction IMTAN(chaîne) renvoie la tangente hyperbolique d'un nombre complexe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IMTAN(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre complexe</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMTAN("1+i") renvoie "1.08392+0.27175i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IMTANH("1.2") renvoie 0.83365</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2BIN">
<title
>OCT2BIN</title>
<para
>La fonction OCT2BIN() renvoie la valeur formatée comme nombre binaire.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>OCT2BIN(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>La longueur minimun de la sortie</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OCT2BIN("12") renvoie "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OCT2BIN("55") renvoie "101101"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2DEC">
<title
>OCT2DEC</title>
<para
>La fonction OCT2DEC() renvoie la valeur formatée comme un nombre décimal.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>OCT2DEC(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OCT2DEC("12") renvoie 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OCT2DEC("55") renvoie 45 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2HEX">
<title
>OCT2HEX</title>
<para
>La fonction OCT2HEX() renvoie la valeur formatée comme un nombre hexadécimal.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>

<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>OCT2HEX(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>La valeur à convertir</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>La longueur minimun de la sortie</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OCT2HEX("12") renvoie "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OCT2HEX("55") renvoie "2D"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Financial">
<title
>Financières</title>

<sect3 id="ACCRINT">
<title
>ACCRINT</title>
<para
>La fonction ACCRINT renvoie l'intérêt accru pour un titre qui paie des intérêts périodiques. Les fréquences autorisées sont 1 - annuel, 2 - semi-annuel ou 4 - trimestriel. "Base" est le type de comptage de jours que vous voulez utiliser : 0 : 30 / 360 US (par défaut), 1 : vrais jours, 2 : vrais jours / 360, 3 : vrais jours / 365 ou 4 : 30 / 365 européen.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ACCRINT(terme;premier intérêt;règlement;taux;par;fréquence;base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date de sortie</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Premier intérêt</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Taux annuel d'un titre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Par valeur</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de paiements par an</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de comptage des jours</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ACCRINT("28/2/2001"; "31/8/2001"; "1/5/2001"; 0,1;1000; 2; 0) renvoie 16 944</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINTM"
>ACCRINTM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACCRINTM">
<title
>ACCRINTM</title>
<para
>La fonction ACCRINTM renvoie l'intérêt accru pour un titre qui paye des intérêts à la date d'échéance. "Base" est le type de comptage de jours que vous voulez utiliser : 0 : 30 / 360 US (par défaut), 1 : vrais jours, 2 : vrais jours / 360, 3 : vrais jours / 365 ou 4 : 30 / 365 européen.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ACCRINT(terme;règlement;taux;par;base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Date de sortie</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Taux annuel d'un titre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Par valeur</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de comptage des jours</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ACCRINTM("28/2/2001"; "31/8/2001"; 0.1; 100) renvoie 5,0278</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINT"
>ACCRINT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORDEGRC">
<title
>AMORDEGRC</title>
<para
>La fonction The AMORDEGRC calcule la valeur d'amortissement dans le système comptable français en utilisant la dépréciation dégressive.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>AMORDEGRC( Coût; DateAchat; DatefinPremièrePériode; résidu; période; taux; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Coût</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AMORDEGRC( 1000; "2006-02-01"; "2006-12-31"; 10; 0; 0.1; 1 ) renvoie 228</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="AMORLINC"
>AMORLINC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORLINC">
<title
>AMORLINC</title>
<para
>La fonction AMORLINC calcule la valeur d'amortissement pour le système comptable français utilisant la dépréciation linéaire.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>AMORLINC( Coût; DateAchat; DatefinPremièrePériode; résidu; période; taux; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AMORLINC( 1000; "2004-02-01"; "2004-12-31"; 10; 0; 0.1; 1 ) renvoie 91.256831</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="AMORDEGRC"
>AMORDEGRC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPOUND">
<title
>COMPOUND</title>
<para
>La fonction COMPOUND() renvoie la valeur d'un investissement, étant donnés le principal, le taux d'intérêt nominal, la fréquence de composition et le temps. Par exemple : 5 000 € à 12 % d'intérêt composé par trimestre pendant 5 ans deviendra COMPOUND(5000 ; 0,12 ; 4;5), soit 9 030,56 €.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COMPOUND(initial ; intérêt ; périodes ; périodes_par_année)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Principal</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taux d'intérêt</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Périodes par année</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Années</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMPOUND(5000 ; 0,12 ; 4 ; 5) vaut 9 030,56</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONTINUOUS">
<title
>CONTINUOUS</title>
<para
>La fonction CONTINUOUS() calcule le retour sur un intérêt continuellement composé, étant donné le principal, le taux d'intérêt, le taux nominal et le temps en années. Par exemple : 1 000 € gagnant 10 % pendant 1 an deviennent CONTINUOUS(1000 ; 0,1 ; 1), soit 1 105.17 €.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CONTINUOUS(principal ; intérêt ; années)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Principal</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taux d'intérêt</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Années</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CONTINUOUS(1000 ; 0,1 ; 1) vaut 1 105,17</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUPNUM">
<title
>COUPNUM</title>
<para
>La fonction COUPNUM renvoie le nombre de coupons qui doivent être payés entre le début et le terme. "Base" est le type de jour, sachant que vous pouvez utiliser : US 30 / 360 (par défaut), 1 : vrais jours, 2 : vrais jours / 360, 3 : vrais jours / 365 ou 4 : Européen 30 / 365.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COUPNUM(début, échéance, fréquence, base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>La fréquence</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de comptage des jours</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COUPNUM("28/2/2001"; "31/8/2001"; 2; 0) renvoie 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMIPMT">
<title
>CUMIPMT</title>
<para
>Calcule le montant des intérêts cumulatfs.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CUMIPMT(rate, periods, value, start, end, type)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>taux</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>valeur</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>start</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Fin</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>type</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CUMIPMT( 0.06/12; 5*12; 100000; 5; 12; 0 ) vaut -3562,187023</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="CUMPRINC"
>CUMPRINC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMPRINC">
<title
>CUMPRINC</title>
<para
>Calcule le principal paiement cumulatif.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CUMPRINC(taux, périodes, valeur, début, fin, type)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>taux</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>valeur</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>start</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Fin</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>type</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CUMPRINC( 0.06/12; 5*12; 100000; 5; 12; 0 ) vaut -11904,054201</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="CUMIPMT"
>CUMIPMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DB">
<title
>DB</title>
<para
>La fonction DB() calcule la dépréciation d'un bien pour une période donnée en utilisant la méthode de balance à déclin fixé. "Mois" est optionnel, si omis, il est supposé valoir 12.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DB(coût; valeur résiduelle; vie; période [;mois])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Coût</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Résidu</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Vie</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Période</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Mois</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DB(8000;400;6;3) vaut 1 158,40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DB(8000;400;6;3;2) vaut 1 783,41</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DDB">
<title
>DDB</title>
<para
>La fonction DDB() calcule la dépréciation d'un bien pour une période donnée en utilisant la méthode de déclinaison arithmétique. Le facteur est optionnel, si omis, il est supposé valoir 2. Tous les paramètres doivent être supérieurs à 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DDB(coût; valeur résiduelle; vie; période [;facteur])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Coût</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Résidu</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Vie</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Période</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Facteur</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DDB(75000;1;60;12;2) renvoie 1721,81</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DISC">
<title
>DISC</title>
<para
>La fonction DISC renvoie le taux d'escompte pour une titre. "Base" est le type de jour selon que vous voulez utiliser : 0 : 30 / 360 US (par défaut), 1 : vrais jours, 2 : vrais jours / 360, 3 : vrais jours / 365 ou 4 : 30 / 365 européen.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DISC(règlement; échéance; par; remise; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Prix par valeur faciale de 100 €</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Remise</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de comptage des jours</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DISC("28/2/2001"; "31/8/2001"; 12; 14) renvoie 0,2841</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARDE">
<title
>DOLLARDE</title>
<para
>La fonction DOLLARDE() renvoie un prix en dollars exprimé en nombre décimal. "Dollar fractionnel" est le nombre à convertir et "fraction" est le dénominateur de la fraction.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DOLLARDE(dollar fractionnel; fraction)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Dollar fractionnel</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Fraction</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DOLLARDE(1,02; 16) - vaut pour 1 et 2/16 - renvoie 1,125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARFR"
>DOLLARFR</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARFR">
<title
>DOLLARFR</title>
<para
>La fonction DOLLARFR() renvoie un prix en dollar exprimé comme une fraction. Le dollar décimal est le nombre à convertir et la fraction est le dénominateur de la fraction.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DOLLARFR(dollar fractionnel; fraction)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Dollar décimal</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Fraction</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DOLLARFR(1.125; 16) renvoie 1.02. (1 + 2/16)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARDE"
>DOLLARDE</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION">
<title
>DURATION</title>
<para
>Renvoie le nombre de périodes nécessaires pour un investissement pour obtenir une valeur désirée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DURATION(taux ; pv ; fv)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur actuelle (PV)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur future (FV)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DURATION(0,1 ; 1000 ; 2000) renvoie 7,27</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION_ADD">
<title
>DURATION_ADD</title>
<para
>renvoie la durée Macauley en années de la sécurisation d'un intérêt fixe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DURATION_ADD(réglement; début, coupon; échéance, rendement; fréquence; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Coupon</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>La fréquence</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DURATION_ADD( "1998-01-01"; "2006-01-01"; 0.08; 0.09; 2; 1 ) renvoie 5.9937749555</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MDURATION"
>MDURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EFFECT">
<title
>EFFECT</title>
<para
>La fonction EFFECT() calcule le rendement effectif pour un taux d'intérêt nominal (taux annuel ou APR). Par exemple : 8 % d'intérêts composés mensuellement fournissent un rendement effectif de EFFECT(0,08;12), soit 8,3 %.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EFFECT(nominal;périodes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Taux nominal d'intérêt</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EFFECT(0,08;12) vaut 0,083</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="EFFECTIVE"
>EFFECTIVE</link
>&nbsp;</member>
<member
><link linkend="NOMINAL"
>NOMINAL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="EFFECTIVE">
<title
>EFFECTIVE</title>
<para
>La fonction EFFECTIVE() calcule le rendement effectif pour un taux d'intérêt nominal (taux annuel ou APR). Elle a le même effet que la fonction EFFECT.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EFFECTIVE(nominal;périodes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Taux nominal d'intérêt</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EURO">
<title
>EURO</title>
<para
>La fonction EURO() convertit un Euro en monnaie nationale dans l'union monétaire européenne. La monnaie est l'une des suivantes : ATS (Autriche), BEF (Belgique), DEM (Allemagne), ESP (Espagne), FIM (Finlande), FRF (France), GRD (Grèce), IEP (Irlande), ITL (Italie), LUF (Luxembourg), NLG (Pays-Bas) ou PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EURO(monnaie)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Monnaie</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EURO("DEM") vaut 1,95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="EUROCONVERT"
>EUROCONVERT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EUROCONVERT">
<title
>EUROCONVERT</title>
<para
>La fonction EURO() convertit un Euro en monnaie nationale dans l'union monétaire Européenne. La monnaie est l'une des suivantes : ATS (Autriche), BEF (Belgique), DEM (Allemagne), ESP (Espagne), FIM (Finlande), FRF (France), GRD (Grèce), IEP (Irlande), ITL (Italie), LUF (Luxembourg), NLG (Pays-Bas) ou PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EUROCONVERT(nombre; devise source; devise cible)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Monnaie source</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Monnaie cible</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EUROCONVERT(1; "EUR"; "DEM") est égal à 1.95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="EURO"
>EURO</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV">
<title
>FV</title>
<para
>La fonction FV() renvoie la valeur future d'un investissement, étant donné le rendement et le temps écoulé. Si vous avez 1 000 € sur un compte bancaire gagnant 8 % d'intérêt, après deux années, vous aurez FV(1000;0,08;2 ), soit 1 166,40 €.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FV(valeur_actuelle;rendement;périodes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur actuelle</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FV(1000;0,08;2) vaut 1 166,40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV_ANNUITY">
<title
>FV_ANNUITY</title>
<para
>La fonction FV_ANNUITY() renvoie la valeur future d'un flux de paiements étant donné le montant du paiement, le taux d'intérêt et le nombre de périodes. Par exemple : si vous recevez 500 € par an pendant 20 ans, et l'investissez à 8 %, le total après 20 ans sera FV_ANNUITY(500 ; 0,08 ; 20), soit 22 880,98 €. Cette fonction suppose que les paiements sont effectués à la fin de chaque période.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FV_ANNUITY(somme ; intérêt ; période)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Paiement par période</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taux d'intérêt</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FV_ANNUITY(1000 ; 0,05 ; 5) vaut 5 525.63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTRATE">
<title
>INTRATE</title>
<para
>La fonction INTRATE renvoie le taux d'intérêt pour un titre complètement investi. "Base" est le type de comptage de jours que vous voulez utiliser : 0 : 30 / 360 US (par défaut), 1 : vrais jours, 2 : vrais jours / 360, 3 : vrais jours / 365 ou 4 : 30 / 365 européen.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>INTRATE(règlement;échéance;investissement;remise,base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Investissement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Remise</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base de comptage des jours</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INTRATE("28/2/2001"; "31/8/2001"; 1000000; 2000000;1) renvoie 1,98</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IPMT">
<title
>IPMT</title>
<para
>IPMT calcule le montant de l'annuité allant au remboursement des intérêts.</para>
<para
>Taux est le taux d'intérêt périodique.</para>
<para
>Période est la période d'amortissement. 1 pour la première période et NPER pour la dernière.</para>
<para
>NPER est le nombre total de périodes pendant lequel chaque annuité est payée.</para>
<para
>PV est la valeur présente dans la séquence des paiements.</para>
<para
>FV (optionnel) est la valeur désirée (future). Par défaut : 0.</para>
<para
>Type (optionnel) définit la date de versement. 1 pour le paiement au début de la période et 0 (par défaut) pour le paiement à la fin de la période.</para>
<para
>L'exemple montre l'intérêt à payer dans la dernière année d'un prêt sur trois années. Le taux d'intérêt est 10 pour cent.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IPMT(Taux ; Période ; NPer ; PV ; FV ; Type)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Période</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur actuelle</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur future (optionnel)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Type (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IPMT(0,1 ; 3 ; 3 ; 8000) vaut -292,45</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IRR">
<title
>IRR</title>
<para
>La fonction IRR calcule le taux interne de renvoi pour une série de cash flows.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IRR( Valeurs[; Invité = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Invité</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="XIRR"
>XIRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISPMT">
<title
>ISPMT</title>
<para
>Calcule l'intérêt payé sur une période donnée d'un investissement.</para>
<para
>Taux est le taux d'intérêt périodique.</para>
<para
>Période est la période d'amortissement. 1 pour le premier et NPer pour la dernière période.</para>
<para
>NPer est le nombre total de périodes durant lesquelles chaque annuité est payée.</para>
<para
>PV est la valeur présente dans la séquence des paiements.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISPMT(Taux ; Période ; NPer ; PV)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Période</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de périodes</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valeur actuelle (PV)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISPMT(0,1 ; 1 ; 3 ; 8000000) vaut -533 333</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEVEL_COUPON">
<title
>LEVEL_COUPON</title>
<para
>La fonction LEVEL_COUPON() calcule la valeur d'un bon level-coupon. Par exemple : si le taux d'intérêt est 10 %, un bon de 1 000 € avec des coupons semi-annuels à un taux de 13 % qui mature 4 ans vaut LEVEL_COUPON(1000;0,13;2;4;0,1), soit 1 096.95 €.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LEVEL_COUPON(valeur faciale;taux annueldu coupon;années;taux du marché)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur faciale</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taux du coupon</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Coupons par an</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Années</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taux d'intérêt du marché</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LEVEL_COUPON(1000;0,13; 2; 4;0,1) vaut 1 096.95</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDURATION">
<title
>MDURATION</title>
<para
>en années</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MDURATION( règlement; échéance; coupon; rendement; fréquence; [ Base=0 ])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Coupon</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>La fréquence</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MDURATION("2004-02-01"; "2004-05-31"; 0.08; 0.09; 2; 0) renvoie 0.316321106</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DURATION"
>DURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIRR">
<title
>MIRR</title>
<para
>La fonction MIRR() calculera le pourcentage interne modifié de retour (IRR) d'une série d'investissements périodiques.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MIRR(valeurs; investissement; réinvestissement)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Investissement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Réinvestissement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MIRR({100;200;-50;300;-200}, 5%, 6%) est égal à 34.2823387842%</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOMINAL">
<title
>NOMINAL</title>
<para
>La fonction NOMINAL() calcule le taux d'intérêt (fixe) pour un taux d'intérêt effectif (annualisé) composé à des intervalles donnés. Pas exemple, pour gagner 8 % sur un acompte composé mensuellement, vous avez besoin d'un retour de NOMINAL(0,08), soit 7,72 %.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NOMINAL(effectif;périodes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Taux effectif d'intérêt</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NOMINAL(0,08;12) vaut 0,0772</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPER">
<title
>NPER</title>
<para
>Renvoie le nombre de périodes d'un investissement.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NPER(taux ; paiement ; pv ; fv ; type)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paiement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur actuelle (PV)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur future (FV - optionnel)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Type (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NPER(0,1 ; -100 ; 1000) vaut 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NPER(0,06 ; 0 ; -10000 ; 20000 ; 0) renvoie 11 906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPV">
<title
>NPV</title>
<para
>La valeur actuelle nette (NPV) pour une série de cash flows périodiques.</para>
<para
>Affiche la valeur actuelle nette pour une série de cash flows avec le pourcentage de réduction. Les valeurs peuvent être positives si elles sont reçues comme des recettes et négatives si les sommes sont payées à l'extérieur. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NPV(taux;valeurs)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NPV(100%;4;5;7) = 4.125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLPRICE">
<title
>ODDLPRICE</title>
<para
>La fonction ODDLPRICE calcule la valeur de la sécurité par 100 unités courantes de valeur faciale. La sécurité a une date irrégulière de dernier intérêt.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ODDLPRICE( règlement; échéance; dernier; taux ; rendementannuel; remise; fréquence [; Base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Dernier</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>AnnualYield</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Remise</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>La fréquence</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ODDLPRICE(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;5%;100;2) renvoie 90.991042345</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLYIELD">
<title
>ODDLYIELD</title>
<para
>La fonction ODDLYIELD calcule le rendement de la sécurité qui a une date de dernier intérêt irrégulière. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ODDLYIELD( règlement; échéance; dernier; taux; prix; remise; fréquence [; Base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Dernier</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Prix</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Remise</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>La fréquence</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ODDLYIELD(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;91;100;2) renvoie 4.997775351</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ODDLPRICE"
>ODDLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PMT">
<title
>PMT</title>
<para
>PMT renvoie le montant du paiement d'un prêt utilisant un taux d'intérêt fixe et des versements constants (chaque versement est d'un montant égal).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PMT(taux ; nper ; pv [; fv = 0 [; type = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de périodes (NPer)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur actuelle (PV)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur future (FV - optionnel)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Type (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PMT(0,1 ; 4 ; 10000) vaut -3 154,71</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PPMT">
<title
>PPMT</title>
<para
>PPMT calcule le montant de l'annuité allant au remboursement du principal.</para>
<para
>Taux est le taux d'intérêt périodique.</para>
<para
>Période est la période d'amortissement. 1 pour la première période et NPER pour la dernière.</para>
<para
>NPER est le nombre total de périodes pendant lequel chaque annuité est payée.</para>
<para
>PV est la valeur présente dans la séquence des paiements.</para>
<para
>FV (optionnel) est la valeur désirée (future). Par défaut : 0.</para>
<para
>Type (optionnel) définit la date de versement. 1 pour le paiement au début de la période et 0 (par défaut) pour le paiement à la fin de la période.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PPMT(Taux ; Période ; NPer ; PV [; FV = 9 [; Type = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Période</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur actuelle</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur future (optionnel)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Type (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PPMT(0,0875 ; 1 ; 36 ; 5000 ; 8000 ; 1) vaut -18,48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRICEMAT">
<title
>PRICEMAT</title>
<para
>PRICEMAT calcule le prix par 100 unités courantes de valeur faciale de la sécurité qui produit intérêt pour la date d'échéance.</para>
<para
>Méthode de calcul de base</para>
<para
>0 méthode US, 12 mois, chaque mois avec 30 jours</para>
<para
>1 Nombre actuel de jours dans l'année, nombre actuel de jours dans les mois </para>
<para
>2 360 jours dans une année, nombre actuel de jours dans les mois</para>
<para
>4 365 jours dans une année, nombre actuel de jours dans les mois</para>
<para
>5 Méthode européenne, 12 mois, chaque mois a 30 jours</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PRICEMAT(règlement;échéance;sortie;taux;rendement;[; base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Sortie</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Taux de rabais</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PRICEMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);6%;5%) renvoie 103.819218241</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV">
<title
>PV</title>
<para
>La fonction PV() renvoie la valeur présente d'un investissement -- la valeur actuelle d'une somme d'argent dans l'avenir, étant donné le taux d'intérêt ou l'inflation. Par exemple, si vous avez besoin de 1 166,40 € pour votre nouvel ordinateur et que vous voulez l'acheter dans deux ans avec un taux d'intérêt de 8 %, vous avez besoin de commencer avec PV(1166,4;0,08;2 ), soit 1 000 €.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PV(valeur_future ; intérêt ; périodes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur future</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taux d'intérêt</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PV(1166,4 ; 0,08 ; 2) vaut 1 000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV_ANNUITY">
<title
>PV_ANNUITY</title>
<para
>La fonction PV_ANNUITY() renvoie la valeur présente d'une annuité ou flux de paiements. Par exemple : un ticket de loterie d'un million d'euros qui paie 50 000 € par an pendant 20 ans, avec un intérêt de 5 %, vaut actuellement PV_annuity(50000 ; 0,05 ; 20), soit 623 111 €. Cette fonction suppose que les paiements sont effectués à la fin de chaque période.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PV_ANNUITY(montant ; intérêt ; périodes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Paiement par période</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taux d'intérêt</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Périodes</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PV_ANNUITY(1000 ; 0,05 ; 5) vaut 4 329.48</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RATE">
<title
>RATE</title>
<para
>La fonction RATE() calcule le taux d'intérêt constant par période d'un investissement.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RATE(nper;pmt;pv;fv;type;guess)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Période de remboursement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Versements périodiques</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur actuelle</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur future</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Type</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Invité</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RATE(4*12;-200;8000) vaut 0.007701472</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RECEIVED">
<title
>RECEIVED</title>
<para
>La fonction RECEIVED renvoie la somme reçue à la date d'échéance pour un titre. "Base" est le type de comptage de jours que vous voulez utiliser : 0 : 30 / 360 US (par défaut), 1 : vrais jours, 2 : vrais jours / 360, 3 : vrais jours / 365 ou 4 : 30 / 365 européen. La date de règlement doit être avant la date d'échéance.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RECEIVED(règlement;échéance;investissement;remise,base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Investissement</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taux de rabais</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RECEIVED("28/2/2001"; "31/8/2001"; 1000; 0,05; 0) renvoie 1,025.787</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RRI">
<title
>RRI</title>
<para
>La fonction RRI calcule le taux d'intérêt résultant d'un retour (profit) d'investissement.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RRI( P; Pv; Fv)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RRI(1;100;200) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLN">
<title
>SLN</title>
<para
>La fonction SLN() détermine la dépréciation linéaire d'un bien pour une période. "Coût" est la somme que vous avez payée pour le bien. "Résidu" est la valeur du bien à la fin de la période. "Vie" est le nombre de périodes pendant lesquelles il perd de la valeur. "SLN" divise le coût régulièrement pendant la vie du bien.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SLN(coût;valeur résiduelle; vie)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Coût</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Résidu</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Vie</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SLN(10000;700;10) vaut 930</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SYD"
>SYD</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SYD">
<title
>SYD</title>
<para
>La fonction SYD() calcule la dépréciation annuelle chiffrée pour un bien en fonction de son coût, de la valeur résiduelle, de la vie prévue et d'une période particulière. Cette méthode accélère le taux de dépréciation, ainsi une plus grande dépréciation survient au début plutôt qu'à la fin. Le coût de dépréciation est la valeur actuelle moins la valeur résiduelle. La vie utile est le nombre de périodes (typiquement des années) sur lesquelles le bien est déprécié.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SYD(coût; valeur résiduelle; vie; période)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Coût</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Résidu</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Vie</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Période</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SYD(5000; 200; 5; 2) vaut 1280</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLEQ">
<title
>TBILLEQ</title>
<para
>La fonction TBILLEQ renvoie l'équivalent de bon pour une note de trésorerie. La date d'échéance doit être après la date de règlement, mais dans les 365 jours.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TBILLEQ(règlement;échéance;remise)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Taux de rabais</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TBILLEQ("28/2/2001"; "31/8/2001"; 0,1) renvoie 0,1068</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLPRICE">
<title
>TBILLPRICE</title>
<para
>La fonction TBILLPRICE renvoie le prix par valeur de 100 € pour une note de trésorerie. La date d'échéance doit être après la date de déclaration, mais dans les 365 jours. Le taux d'escompte doit être positif.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TBILLPRICE(règlement;échéance;remise)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Taux de rabais</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TBILLPRICE("28/2/2001";"31/8/2001";0,05) renvoie 97,444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLYIELD">
<title
>TBILLYIELD</title>
<para
>La fonction TBILLYIELD renvoie le rendement pour une note de trésorerie. La date d'échéance doit être après la date de règlement mais dans les 365 jours. Le prix doit être positif.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TBILLYIELD(règlement;échéance;prix)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Prix par valeur faciale de 100 €</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TBILLYIELD("28/2/2001"; "31/8/2001"; 600) renvoie -1.63</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VDB">
<title
>VDB</title>
<para
>VDB calcule la dépréciation d'un bien avec une valeur initiale, une vie utile espérée, et une valeur résiduelle finale, pour une période donnée, en utilisant la méthode de balance à déclin fixé.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>VDB(coût; résidu; vie; début-période; fin-période; [; facteur-dépréciation = 2 [; changer = faux ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Prix</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Remise</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VDB(10000;600;10;0;0.875;1.5) renvoie 1312.5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XIRR">
<title
>XIRR</title>
<para
>La fonction XIRR calcule le taux interne de renvoi pour une série non-périodique de cash flows.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>XIRR( Valeurs; Dates[; Invité = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Dates</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Invité</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>XIRR(B1:B4;C1:C4) suppose que B1:B4 contienne -20000, 4000, 12000, 8000 pendant que C1:C4 contien "=DATE(2000;1;1)", "=DATE(2000;6;1)", "=DATE(2000;12;30)", "=DATE(2001;3;1)" renvoie 0.2115964</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XNPV">
<title
>XNPV</title>
<para
>La fonction XNPV calcule la valeur présente actuelle d'une série de cash flows.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>XNPV( Taux; Valeurs; Dates )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Vitesse</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Dates</seg
><seg
>Date</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>XNPV(5%;B1:B4;C1:C4) suppose que B1:B4 contienne -20000, 4000, 12000, 8000 pendant que C1:C4 contient "=DATE(2000;1;1)", "=DATE(2000;6;1)", "=DATE(2000;12;30)", "=DATE(2001;3;1)" renvoie 2907.83187</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="NPV"
>NPV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDDISC">
<title
>YIELDDISC</title>
<para
>YIELDDISC calcule le rendement d'une sécurité décomptée par 100 unités courantes de valeur faciale. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>YIELDDISC(règlement; échéance; prix, remise, base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Prix</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Remise</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>YIELDDISC(DATE(1990;6;1);DATE(1990;12;31);941.66667;1000) renvoie 0.106194684</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDMAT">
<title
>YIELDMAT</title>
<para
>La fonction YIELDMAT calcule le seuil de sécurité significatif pour la date d'échéance. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>YIELDMAT(règlement;échéance;terme;taux;prix;base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Règlement</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Échéance</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Sortie</seg
><seg
>Date</seg
></seglistitem>
<seglistitem
><seg
>Taux de rabais</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Prix</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>YIELDMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990; 1; 1); 6%;103.819218241) renvoie 0.050000000</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="YIELDDISC"
>YIELDDISC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZERO_COUPON">
<title
>ZERO_COUPON</title>
<para
>La fonction ZERO_COUPON() calcule la valeur d'un bon zéro-coupon (pure réduction). Par exemple : si le taux d'intérêt est 10 %, un bon de 1 000 € qui mature 20 ans vaut ZERO_COUPON(1000;0,1;20), soit 148,64 €.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ZERO_COUPON(valeur faciale;taux;années)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur faciale</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taux d'intérêt</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Années</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ZERO_COUPON(1000;0,1;20) vaut 148,64</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2
><sect2 id="Information">
<title
>Information</title>

<sect3 id="ERRORTYPE">
<title
>ERRORTYPE</title>
<para
>La fonction ERRORTYPE() convertit une erreur en nombre. Si la valeur n'est pas une erreur, une erreur est retournée. sinon, un code numérique est retourné. les codes d'erreur sont calqués sur Excel.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ERRORTYPE(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Erreur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ERRORTYPE(NA()) renvoie 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ERRORTYPE(0) renvoie une erreur</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FILENAME">
<title
>FILENAME</title>
<para
>Renvoie le nom du fichier courant. Si le document courant n'est pas enregistré, une chaîne vide est renvoyée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FILENAME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FORMULA">
<title
>FORMULA</title>
<para
>La fonction FORMULA() renvoie la d'une cellule comme une chaîne.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Référence</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FORMULA(A1) retourne "=SUM(1+2)" si la cellule A1 contient une telle formule</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INFO">
<title
>INFO</title>
<para
>La fonction INFO() renvoie des informations sur l'environnement courant. Le type de paramètre spécifie quel type d'information vous voulez recevoir. C'est l'un parmi les suivants : "directory" renvoie l'emplacement du dossier courant, "numfile" renvoie le nombre de documents actifs, "release" renvoie la version de &sheets; sous forme de texte, "recalc" renvoie le mode courant de recalcul : "Automatic" ou "Manual", "system » renvoie le nom de l'environnement d'exploitation, "osversion" renvoie le système d'exploitation courant.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>INFO(type)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Type d'information</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISBLANK">
<title
>ISBLANK</title>
<para
>La fonction ISBLANK() renvoie "Vrai" si le paramètre est vide. Sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISBLANK(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISBLANK(A1) renvoie "Vrai" si A1 est vide</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISBLANK(A1) renvoie "Faux" si A1 contient une valeur</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISDATE">
<title
>ISDATE</title>
<para
>La fonction ISDATE() renvoie "Vrai" si le paramètre est une date, sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISDATE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISDATE("2/2/2000") renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISDATE("salut") renvoie Faux</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERR">
<title
>ISERR</title>
<para
>La fonction ISERR() renvoie "Vrai" si le paramètre est une erreur autre que "N/A", sinon elle renvoie "Faux". Utilisez la fonction ISERROR() si vous voulez inclure "N/A".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISERR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERROR">
<title
>ISERROR</title>
<para
>La fonction ISERROR() renvoie "Vrai" si le paramètre est une erreur de n'importe quel type, sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISERROR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISEVEN">
<title
>ISEVEN</title>
<para
>La fonction ISEVEN() renvoie "Vrai" si le nombre est pair, sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISEVEN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISEVEN(12) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISEVEN(-7) renvoie Faux</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISFORMULA">
<title
>ISFORMULA</title>
<para
>La fonction ISFORMULA() renvoie Vrai si la cellule référencée contient une formule. Sinon, elle renvoie faux.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISFORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Référence</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLOGICAL">
<title
>ISLOGICAL</title>
<para
>La fonction ISLOGICAL() renvoie "Vrai" si le paramètre est une valeur booléenne. Sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISLOGICAL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISLOGICAL(A1
>A2) renvoie "Vrai"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISLOGICAL(12) renvoie "Faux"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNA">
<title
>ISNA</title>
<para
>La fonction ISNA() renvoie "Vrai" si le paramètre est une erreur "N/A", sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISNA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNONTEXT">
<title
>ISNONTEXT</title>
<para
>La fonction ISNONTEXT() renvoie "Vrai" si le paramètre n'est pas une chaîne, sinon elle renvoie "Faux". Elle agit comme ISNOTTEXT.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISNONTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISNONTEXT(12) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISNONTEXT("HELLO") renvoie Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ISNOTTEXT"
>ISNOTTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNOTTEXT">
<title
>ISNOTTEXT</title>
<para
>La fonction ISNONTEXT() renvoie "Vrai" si le paramètre n'est pas une chaîne, sinon elle renvoie "Faux". Elle agit comme ISNONTEXT.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISNOTTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISNOTTEXT(12) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISNOTTEXT("salut") renvoie Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ISNONTEXT"
>ISNONTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUM">
<title
>ISNUM</title>
<para
>La fonction ISNUM() renvoie "Vrai" si le paramètre est une valeur numérique, sinon elle renvoie "Faux". Elle agit comme ISNUMBER.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISNUM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISNUM(12) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISNUM(salut) renvoie Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ISNUMBER"
>ISNUMBER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUMBER">
<title
>ISNUMBER</title>
<para
>La fonction ISNUMBER() renvoie "Vrai" si le paramètre est une valeur numérique, sinon elle renvoie "Faux". Elle agit comme ISNUM.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISNUMBER(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISNUMBER(12) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISNUMBER("salut") renvoie Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ISNUM"
>ISNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISODD">
<title
>ISODD</title>
<para
>La fonction ISODD() renvoie "Vrai" si le nombre est impair, sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISODD(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISODD(12) renvoie Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISODD(-7) renvoie Vrai</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISREF">
<title
>ISREF</title>
<para
>La fonction ISREF() renvoie "Vrai" si le paramètre se rapporte à une référence, sinon elle renvoie "Faux"</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISREF(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISREF(A12) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISREF("salut") renvoie Faux</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTEXT">
<title
>ISTEXT</title>
<para
>La fonction ISTEXT() renvoie "Vrai" si le paramètre est une chaîne, sinon elle renvoie "Faux"</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISTEXT(12) renvoie Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISTEXT("HELLO") renvoie Vrai</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTIME">
<title
>ISTIME</title>
<para
>La fonction ISTIME() renvoie "Vrai" si le paramètre est une valeur de temps, sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ISTIME(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISTIME("12:05") renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ISTIME("salut") renvoie Faux</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="N">
<title
>N</title>
<para
>La fonction N() convertit une valeur en un nombre. Si une valeur est ou se rapporte à un nombre, cette fonction renvoie le nombre. Si la valeur est "Vrai", cette fonction renvoie 1. Si une valeur est une date, cette fonction renvoie le nombre de série de la date. Toute autre chose renverra 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>N(Valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>N(3,14) renvoie 3,14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>N("7") renvoie 0 (car "7" est du texte)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NA">
<title
>NA</title>
<para
>La fonction NA() renvoie la valeur d'erreur permanente, N/A.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Erreur</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NA()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TYPE">
<title
>TYPE</title>
<para
>La fonction TYPE() renvoie 1 si la valeur est un nombre, 2 si c'est du texte, 4 si la valeur est une valeur logique, 16 si c'est une valeur d'erreur ou 64 si la valeur est un tableau. Si la cellule que la valeur représente contient une formule, vous obtenez son type de retour.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>

<listitem
><para
>TYPE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Toute valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TYPE(A1) renvoie 2 si A1 contient du texte</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TYPE(-7) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TYPE(A2) renvoie 1, si A2 contient "=CURRENTDATE()"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Logical">
<title
>Logiques</title>

<sect3 id="AND">
<title
>AND</title>
<para
>La fonction AND() renvoie "Vrai" si toutes les valeurs sont vraies, sinon elle renvoie "Faux" (au moins une des valeurs dans une erreur renvoyées).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>AND(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AND(vrai;vrai;vrai) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AND(Vrai;Faux) renvoie Faux</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FALSE">
<title
>FALSE</title>
<para
>La fonction FALSE() renvoie la valeur Booléenne Faux.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FALSE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FALSE() renvoie Faux</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IF">
<title
>IF</title>
<para
>La fonction IF() est une fonction de condition. Cette fonction renvoie le deuxième paramètre si la condition est Vrai, sinon elle renvoie le troisième paramètre (qui par défaut est faux).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IF(condition;si_vrai;si_faux)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Condition</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Si_vrai</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem>
<seglistitem
><seg
>Si_faux</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>A1=4, A2=6, IF(A1
>A2;5;3) renvoie 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFERROR">
<title
>IFERROR</title>
<para
>Renvoie X, à moins qu'il y ait une erreur. Dans ce cas, renvoie une valeur alternative.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IFERROR(AnyX;AnyAlternative)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Any X</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem>
<seglistitem
><seg
>Toute alternative</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IFERROR(A1;A2) renvoie le contenu de A1 s'il ne s'agit pas d'une valeur-erreur, sinon, renvoie de contenu de A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFNA">
<title
>IFNA</title>
<para
>Renvoie X, à moins qu'il y ait une erreur. Dans ce cas, renvoie une valeur alternative.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>IFNA(AnyX;AnyAlternative)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Any X</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem>
<seglistitem
><seg
>Toute alternative</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>IFNA(A1;A2) renvoie le contenu de A1 s'il ne s'agit pas d'une valeur-erreur #NA, sinon, renvoie de contenu de A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NAND">
<title
>NAND</title>
<para
>La fonction NAND() renvoie "Vrai" si au moins une valeur n'est pas vraie, sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NAND(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NAND(Vrai;Faux;Faux) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NAND(Vrai;Vrai) renvoie Faux</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOR">
<title
>NOR</title>
<para
>La fonction NOR() renvoie "Vrai" si toutes les valeurs données en paramètres sont de type booléen et ont la valeur "Faux". Sinon, elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NOR(valeurs;valeurs;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NOR(Vrai;Faux;Faux) renvoie Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NOR(Faux;Faux) renvoie Vrai</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOT">
<title
>NOT</title>
<para
>La fonction NOT() renvoie "Vrai" si la valeur est fausse et "Faux" si la valeur est "Vrai". Elle renvoie une erreur si au moins une entrée est une erreur.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NOT(bool)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur booléenne</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NOT(Faux) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NOT(Vrai) renvoie Faux</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OR">
<title
>OR</title>
<para
>La fonction OR() renvoie "Vrai" si au moins une valeur est vraie, sinon elle renvoie "Faux" (au moins une des valeurs dans une erreur renvoyées).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>OR(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OR(Faux;Faux;Faux) renvoie Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OR(Vrai;Faux) renvoie Vrai</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUE">
<title
>TRUE</title>
<para
>La fonction TRUE() renvoie la valeur booléenne Vrai.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TRUE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TRUE() renvoie Vrai</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XOR">
<title
>XOR</title>
<para
>La fonction XOR() renvoie "Vrai" si le nombre de valeurs vraies est pair, sinon elle renvoie "Faux". Elle renvoie une erreur si au moins un argument est une erreur.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>XOR(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs booléennes</seg
><seg
>Une plage de valeurs de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>XOR(Faux;Faux;Faux) renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>OR(Vrai;Faux) renvoie Vrai</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Lookup---Reference">
<title
>Recherche et références</title>

<sect3 id="ADDRESS">
<title
>ADDRESS</title>
<para
>ADDRESS crée une adresse de cellule. Le paramètre Ligne est le numéro de ligne et Colonne est le numéro de colonne.</para>
<para
>Le nombre absolu spécifie le type de référence : 1 ou omis = Absolu, 2 =ligne absolue, colonne relative, 3 = ligne relative, colonne absolue et 4 = Relatif.</para>
<para
>Style A1 spécifie le style de l'adresse à retourner. Si A1 est positionné sur Vrai (par défaut), l'adresse est retournée en style A1, s'il est positionné sur Faux, en style R1C1.</para>
<para
>Le nom de la feuille est le texte qui spécifie le nom de la feuille.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ADDRESS(ligne; col; absolue; style; nom_de_feuille)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Numéro de ligne</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numéro de colonne</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre absolu (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Style A1 (optionnel)</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem>
<seglistitem
><seg
>Nom de la feuille</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ADDRESS(6; 4) renvoie $D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ADDRESS(6; 4; 2) renvoie D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ADDRESS(6; 4; 2; Faux; "Feuille1") renvoie Feuille1!R6C[4]</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ADDRESS(6; 4; 1; Faux; "Feuille1") renvoie Feuille1!R6C4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ADDRESS(6; 4; 4; Vrai; "Feuille1") renvoie Feuille1!D6</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AREAS">
<title
>AREAS</title>
<para
>Renvoie le nombre de zones dans la chaîne de référence. Une zone peut être une seule cellule ou un lot de cellules.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>AREAS(référence)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AREAS(A1) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AREAS((A1; A2:A4)) renvoie 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CELL">
<title
>CELL</title>
<para
>Renvoie des informations sur la position, le formatage et le contenu dans une référence.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CELL(type; référence)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Type</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Référence</seg
><seg
>Référence</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CELL("COL", C7) renvoie 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CELL("ROW", C7) renvoie 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CELL("ADDRESS", C7) renvoie $C$7</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHOOSE">
<title
>CHOOSE</title>
<para
>Renvoie le paramètre spécifié par l'index.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CHOOSE(index ; paramètre1 ; paramètre2,...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Indice</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Arguments</seg
><seg
></seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CHOOSE(1; "1er"; "2em") renvoie "1er"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CHOOSE(2; 3; 2; 4) renvoie 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMN">
<title
>COLUMN</title>
<para
>La fonction COLUMN renvoie la colonne de la cellule donnée en référence. Si aucun paramètre n'est spécifié, la colonne de la cellule courante est renvoyée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COLUMN(référence)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COLUMN(A1) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COLUMN(D2) renvoie 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMNS">
<title
>COLUMNS</title>
<para
>La fonction COLUMNS renvoie le nombre de colonnes dans une référence.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COLUMNS(référence)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COLUMNS(A1:C3) renvoie 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COLUMNS(D2) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HLOOKUP">
<title
>HLOOKUP</title>
<para
>Cherche une valeur correspondante dans la table donnée, et renvoie la valeur de la ligne indiquée. </para>
<para
>Regarder la valeur de recherche dans la première ligne de la base de données. Si une valeur correspond, la valeur dans la ligne et la colonne, la valeur trouvée, est renvoyée. Si le tri est vrai (par défaut), la première ligne est supposée être triée. La recherche finira, si la valeur de recherche est inférieure à la valeur actuellement comparée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Chaîne / numérique</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>HLOOKUP(valeur de recherche; base de données; ligne; méthode de tri)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur de recherche</seg
><seg
>Chaîne / numérique</seg
></seglistitem>
<seglistitem
><seg
>Base de données</seg
><seg
>Matrice</seg
></seglistitem>
<seglistitem
><seg
>Row</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Méthode de tri(optionnel)</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDEX">
<title
>INDEX</title>
<para
>Si une plage est indiquée, la valeur retournée est conservée dans la ligne ou colonne indiquée. Si une cellule contenant un tableau est indiquée, seul le premier élément du tableau est renvoyé.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>INDEX(cellule, ligne, colonne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Row</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Colonne</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INDEX(A1:C3;2;2) renvoie le contenu de B2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INDEX(A1;2;2), si A1 est le résultat d'un calcul de tableau, renvoie l'élément (2,2) de ce tableau.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDIRECT">
<title
>INDIRECT</title>
<para
>Renvoie le contenu d'une cellule spécifiée par le texte de référence. Le deuxième paramètre est optionnel.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>INDIRECT(Texte_de_référence,style a1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Style A1 (optionnel)</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INDIRECT(A1), A1 contient "B1", et B1 1 =
> renvoie 1</para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INDIRECT("A1"), renvoie le contenu de A1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOOKUP">
<title
>LOOKUP</title>
<para
>La fonction LOOKUP cherche le premier paramètre dans le vecteur de recherche. Elle renvoie une valeur dans le vecteur résultat, en conservant les index du vecteur initial. Si la valeur est introuvable, une erreur est renvoyée. Le vecteur de recherche doit être dans l'ordre croissant et les deux doivent avoir la même taille. Les valeurs numériques, les chaînes et les booléens sont reconnus. La comparaison de chaînes n'est pas sensible à la casse.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LOOKUP(valeur; vecteur de recherche; vecteur résultat)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur de recherche</seg
><seg
>Chaîne / numérique</seg
></seglistitem>
<seglistitem
><seg
>Vecteur de recherche</seg
><seg
>Chaîne / numérique</seg
></seglistitem>
<seglistitem
><seg
>Vecteur résultat</seg
><seg
>Chaîne / numérique</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOOKUP(1.232; A1:A6; B1:B6) avec A1 = 1, A2 = 2 renvoie la valeur de B1.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MATCH">
<title
>MATCH</title>
<para
>Trouve une valeur de recherche dans une zone de recherche et retourne sa position (à partir de 1). Le type de correspondance peut-être soit -1, 0 ou 1 et détermine quelle est la recherche pour la valeur. Si le type de correspondance est 0, l'index de la première valeur qui est égale à la valeur de recherche est retournée, si le type de correspondance est 1 (ou omis), l'index de la première valeur qui est inférieure ou égale à la valeur de recherche est retourné et les valeurs dans la zone de recherche doit être triée en ordre ascendant. Si le type de correspondance est -1, la plus petite valeur qui est supérieure ou égale à la valeur de recherche est trouvée et la zone de recherche doit être triée en ordre décroissant.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MATCH(valeur de recherche; zone de recherche: type de correspondance)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Recherche de valeur</seg
><seg
>Chaîne / numérique</seg
></seglistitem>
<seglistitem
><seg
>Zone de recherche :</seg
><seg
>Référence / tableau</seg
></seglistitem>
<seglistitem
><seg
>Type de correspondance (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLE.OPERATIONS">
<title
>MULTIPLE.OPERATIONS</title>
<para
>MULTIPLE.OPERATIONS exécute la formule définie par FormulaCell et toutes les expressions dont elle dépend en remplaçant toutes les références à RowCell avec celles à RowReplacement ; également en remplaçant toutes les références à ColumnCell avec celles à ColumnReplacement. La fonction peut être utilisée pour créer facilement des tables d'expressions qui dépendent de l'entrée de deux paramètres.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Chaîne / numérique</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MULTIPLE.OPERATIONS(Formula cell; Row cell; Row replacement; Column cell; Column replacement)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Formules de cellule</seg
><seg
>Référence</seg
></seglistitem>
<seglistitem
><seg
>Cellule de ligne</seg
><seg
>Référence</seg
></seglistitem>
<seglistitem
><seg
>Remplacement de ligne</seg
><seg
>Référence</seg
></seglistitem>
<seglistitem
><seg
>Cellule de colonne optionnel)</seg
><seg
>Référence</seg
></seglistitem>
<seglistitem
><seg
>Remplacement de cellule (optionnel)</seg
><seg
>Référence</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OFFSET">
<title
>OFFSET</title>
<para
>Modifie la position et la dimension d'une référence.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Référence</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>OFFSET(Référence reference; entier offsetLigne; entier offsetColonne; entier nouvelleHauteur; entier nouvelleLargeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence ou plage</seg
><seg
>Référence</seg
></seglistitem>
<seglistitem
><seg
>Nombre de colonnes à décaler</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de lignes à décaler</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>hauteur de la plage de décalage (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>largeur de la plage de décalage (optionnel)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROW">
<title
>ROW</title>
<para
>La fonction ROW renvoie la ligne d'une cellule donnée en référence. Si aucun paramètre n'est spécifié, la ligne de la cellule courante est renvoyée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ROW(référence)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROW(A1) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROW(D2) renvoie 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROWS">
<title
>ROWS</title>
<para
>La fonction ROWS() renvoie le nombre de lignes dans une référence.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ROWS(référence)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROWS(A1:C3) renvoie 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROWS(D2) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEET">
<title
>SHEET</title>
<para
>Renvoie le numéro de la feuille de la référence ou la chaîne représentant un nom de feuille.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SHEET(référence)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Référence</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SHEET(Sheet1!C7) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SHEET(Sheet2!C7) renvoie 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEETS">
<title
>SHEETS</title>
<para
>Renvoie le nombre de feuilles dans une référence ou dans le document actuel.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SHEETS(référence)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Référence</seg
><seg
>Référence</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VLOOKUP">
<title
>VLOOKUP</title>
<para
>Chercher une valeur correspondante dans la première colonne du tableau donné, et renvoyer la valeur de la colonne indiquée.</para>
<para
>Regarder la valeur de recherche dans la première colonne de la base de données. Si une valeur correspond, la valeur dans la colonne et la ligne, la valeur trouvée, est renvoyée. Si le tri est vrai (par défaut), la première colonne est supposée être triée. La recherche finira, si la valeur de recherche est inférieure à la valeur actuellement comparée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Chaîne / numérique</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>VLOOKUP(valeur de recherche; base de données; colonne; méthode de tri)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur de recherche</seg
><seg
>Chaîne / numérique</seg
></seglistitem>
<seglistitem
><seg
>Base de données</seg
><seg
>Matrice</seg
></seglistitem>
<seglistitem
><seg
>Colonne</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Méthode de tri(optionnel)</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Math">
<title
>Mathématiques</title>

<sect3 id="ABS">
<title
>ABS</title>
<para
>La fonction ABS() renvoie la valeur absolue du nombre à virgule flottante x.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ABS(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ABS(12,5) vaut 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ABS(-12,5) vaut 12,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEIL">
<title
>CEIL</title>
<para
>La fonction CEIL() arrondit x à l'entier le plus proche, plus grand que x et renvoyant cette valeur comme un double.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un entier  (comme 0, -5, 14 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CEIL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CEIL(12,5) vaut 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CEIL(-12,5) vaut -12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEILING">
<title
>CEILING</title>
<para
>La fonction CEILING() arrondit en supérieur x (à partir de zéro) au multiple le plus proche de « Signification », qui est plus grand que x. La valeur par défaut de « Signification » est 1 (ou -1 si la valeur est négative), ce qui correspond à un arrondi vers l'entier le plus proche. Si le paramètre « Méthode » est différent de zéro, la fonction arrondit vers zéro, plutôt que vers l'infini positif.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un entier  (comme 0, -5, 14 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CEILING(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Signification (optionnel)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Méthode (optionnel)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CEILING(12,5) vaut 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CEILING(6,43;4) vaut 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CEILING(-6.43; -4; 1) vaut -8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CEILING(-6.43; -4; 0) vaut -4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNT">
<title
>COUNT</title>
<para
>Cette fonction renvoie le nombre d'arguments entiers ou de flottants passés. Vous pouvez compter en utilisant une zone : COUNT(A1:B5) ou en utilisant une liste de valeurs comme COUNT(12;5;12.5).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COUNT(valeur;valeur;valeur...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COUNT(-5;"KSpread";2) renvoie 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COUNT(5) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTA">
<title
>COUNTA</title>
<para
>Cette fonction renvoie le nombre d'arguments non vides passés. Vous pouvez compter en utilisant une zone : COUNTA(A1:B5) ou en utilisant une liste de valeurs comme COUNTA(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COUNTA(valeur;valeur;valeur...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COUNTA(-5;"KSpread";2) renvoie 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COUNTA(5) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTBLANK">
<title
>COUNTBLANK</title>
<para
>Cette fonction renvoie le compte de toutes les cellules vides dans la plage.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COUNTBLANK(plage)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage de cellules</seg
><seg
>Échelle</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COUNTBLANK(A1:B5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTIF">
<title
>COUNTIF</title>
<para
>La fonction COUNTIF() renvoie le nombre de cellules dans la plage donnée en paramètre.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COUNTIF(plage;critère)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Échelle</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Critères</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COUNTIF(A2:A3;"14") renvoie 1 si A1 vaut -4 et A2 vaut 14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUR">
<title
>CUR</title>
<para
>La fonction CUR() renvoie la racine cubique positive de x.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CUR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CUR(27) vaut 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DIV">
<title
>DIV</title>
<para
>La fonction DIV() divise la première valeur par chacune des valeurs suivantes, successivement.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DIV(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DIV(20;2;2) renvoie 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DIV(25;2.5) renvoie 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="MOD"
>MOD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EPS">
<title
>EPS</title>
<para
>EPS() renvoie l'epsilon machine. C'est la différence entre 1 et le plus grand nombre à virgule flottante. Du fait que les ordinateurs utilisent un nombre fini de chiffres, les erreurs d'arrondi sont inhérentes (mais habituellement insignifiantes) à tous les calculs.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EPS()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>Sur la plupart des systèmes, ceci renvoie 2^-52=2,2204460492503131e-16</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>0,5*EPS() renvoie « l'arrondi à l'unité ». Cette valeur est intéressante du fait qu'elle est le plus grand nombre x où (1+x)-1=0 (dû aux erreurs d'arrondi).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EPS() est si petit que &sheets; affiche 1+eps() comme 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>Prenez un nombre x entre 0 et EPS(). Observez que 1+x arrondit x soit à 0, soit à EPS() en utilisant l'équation (1+x)-1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EVEN">
<title
>EVEN</title>
<para
>La fonction EVEN() renvoie le nombre arrondi à l'entier supérieur pair le plus proche.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EVEN(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>

<varlistentry
><term
>Exemples</term>
<listitem
><para
>EVEN(1,2) renvoie 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EVEN(2) renvoie 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ODD"
>ODD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXP">
<title
>EXP</title>
<para
>La fonction EXP() renvoie la valeur de e (la base des logarithmes népériens), élevée à la puissance x.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EXP(9) vaut 8 103,083 927 58</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EXP(-9) vaut 0,000 123 41</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACT">
<title
>FACT</title>
<para
>La fonction FACT() calcule la factorielle du paramètre. L'expression mathématique est (valeur)!.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FACT(nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FACT(10) renvoie 3 628 800</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FACT(0) renvoie 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACTDOUBLE">
<title
>FACTDOUBLE</title>
<para
>La fonction FACTDOUBLE() calcule la factorielle double d'un nombre, c'est-à-dire x!!.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FACTDOUBLE(nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FACTDOUBLE(6) renvoie 48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FACTDOUBLE(7) renvoie 105</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIB">
<title
>FIB</title>
<para
>La fonction FIB calcule le énième terme d'une séquence de Fibonacci (1, 1, 2, 3, 5, 8, 13, 21...), dans laquelle chaque nombre, après les deux premiers, est la somme des deux nombres immédiatement précédents. @FIB(0) est défini pour être 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FIB(n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nième terme</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FIB(9) renvoie 34</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FIB(26) renvoie 121393</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FLOOR">
<title
>FLOOR</title>
<para
>Arrondir un nombre x à l'entier inférieur vers le multiple le plus proche du second paramètre significatif.</para>
<para
>La fonction FLOOR() arrondit « x » à la valeur inférieure (vers zéro) vers le plus proche multiple de « Signification », qui est plus petite que x. La valeur « Signification » par défaut est 1, si « x » est positif. Elle est de -1, si la valeur est négative, ce qui signifie un arrondi vers l'entier le plus proche. Si le mode est donné et est différent de zéro, le montant de « x » est arrondi de zéro vers un multiple de « Signification » et ensuite le signe est appliqué. sinon, il est arrondi vers l'infini négatif. Si aucun des deux paramètres « x » ou « Signification » est zéro, le résultat est zéro.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un entier  (comme 0, -5, 14 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FLOOR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Signification (optionnel)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Méthode (optionnel)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FLOOR(12,5) vaut 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FLOOR(-12,5) vaut -13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FLOOR(5; 2) vaut 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FLOOR(5; 2.2) vaut 4.4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMA">
<title
>GAMMA</title>
<para
>La fonction GAMMA() renvoie la valeur de la fonction gamma.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>GAMMA(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GAMMA(1) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FACT"
>FACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GCD">
<title
>GCD</title>
<para
>La fonction GCD() renvoie le plus grand dénominateur commun pour deux valeurs entières ou plus.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>GCD(valeur;valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Premier nombre</seg
><seg
>Une plage de nombres entiers (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Deuxième nombre</seg
><seg
>Une plage de nombres entiers (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Troisième nombre</seg
><seg
>Une plage de nombres entiers (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GCD(6;4) renvoie 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GCD(10;20) renvoie 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GCD(20;15;10) renvoie 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LCM"
>LCM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="G_PRODUCT">
<title
>G_PRODUCT</title>
<para
>La fonction G_PRODUCT() est identique à KPRODUCT. Elle est fournie pour la compatibilité avec Gnumeric.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>G_PRODUCT(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT">
<title
>INT</title>
<para
>La fonction INT() renvoie la partie entière de la valeur.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>INT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INT(12,55) vaut 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INT(15) vaut 15</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="QUOTIENT"
>QUOTIENT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INV">
<title
>INV</title>
<para
>Cette fonction multiplie chaque valeur par -1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>INV(Valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INV(-5) vaut 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INV(5) vaut -5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INV(0) vaut 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KPRODUCT">
<title
>KPRODUCT</title>
<para
>La fonction KPRODUCT() calcule le produit de toutes les valeurs données en paramètres. Vous pouvez calculer le produit d'une zone : KPRODUCT(A1:B5) ou d'une liste de valeurs comme KPRODUCT(12;5;12,5). Si aucune valeur numérique n'est trouvée, il est retourné 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>KPRODUCT(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>KPRODUCT(3;5;7) vaut 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>KPRODUCT(12,5;2) vaut 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="G_PRODUCT"
>G_PRODUCT</link
>&nbsp;</member>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LCM">
<title
>LCM</title>
<para
>La fonction LCM() renvoie le plus petit commun multiple pour deux valeurs à virgule flottante ou plus</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LCM(valeur;valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Premier nombre</seg
><seg
>FLOAT</seg
></seglistitem>
<seglistitem
><seg
>Deuxième nombre</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LCM(6;4) renvoie 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LCM(1,5;2,25) renvoie 4,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LCM(2;3;4) renvoie 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="GCD"
>GCD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LN">
<title
>LN</title>
<para
>La fonction LN() renvoie le logarithme népérien de x.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LN(0,8) vaut -0,22314355</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LN(0) vaut -inf</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG">
<title
>LOG</title>
<para
>La fonction LOG() renvoie le log en base 10 de x.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LOG(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante, supérieure à zéro</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOG(0,8) vaut -0,09691001</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOG(0) est une erreur</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG10">
<title
>LOG10</title>
<para
>La fonction LOG10() renvoie le logarithme en base 10 de l'argument</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LOG10(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur positive à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOG10(10) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOG10(0) est une erreur</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG2">
<title
>LOG2</title>
<para
>La fonction LOG2() renvoie le log en base 2 de x.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LOG2(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOG2(0,8) vaut -0,32192809</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOG2(0) vaut -inf.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGN">
<title
>LOGN</title>
<para
>La fonction LOGn() renvoie le log en base n de x.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LOGn(valeur;base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOGn(12;10) vaut 1,07918125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOGn(12;2) vaut 3,5849625</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAX">
<title
>MAX</title>
<para
>La fonction MAX() renvoie la plus grande des valeurs données en paramètres. Les chaînes et les valeurs logiques sont ignorées.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MAX(valeur;valeur;...)</para
></listitem>
</varlistentry>

<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MAX(12;5; 7) renvoie 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MAX(12,5; 2) renvoie 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MAX(0,5; 0,4; Vrai; 0,2) renvoie 0,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAXA">
<title
>MAXA</title>
<para
>La fonction MAXA() renvoie la plus grande des valeurs données en paramètres sans ignorer les valeurs booléennes. "Vrai" vaut 1 et "Faux" vaut 0. Les chaînes sont ignorées.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MAXA(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MAXA(12;5;7) renvoie 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MAXA(12,5;2) renvoie 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MAXA(0,5;0,4;Vrai.0,2) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDETERM">
<title
>MDETERM</title>
<para
>La fonction MDETERM renvoie le déterminant d'une matrice donnée. Celle-ci doit être de la forme n x n.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MDETERM(matrice)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Échelle</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MDETERM(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MMULT"
>MMULT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIN">
<title
>Min</title>
<para
>La fonction MIN() renvoie la plus petite des valeurs données en paramètres. Les chaînes et les valeurs logiques sont ignorées.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MIN(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MIN(12;5; 7) renvoie 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MIN(12,5; 2) renvoie 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MIN(0,4; 2; Faux; 0,7) renvoie 0,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINA">
<title
>MINA</title>
<para
>La fonction MINA() renvoie la plus petite des valeurs données en paramètres sans ignorer les valeurs booléennes. "Vrai" vaut 1 et "Faux" vaut 0. Les chaînes sont ignorées.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MINA(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MINA(12;5;7) renvoie 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MINA(12,5;2) renvoie 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MINA(0,4; 2; Faux; 0,7) renvoie 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINVERSE">
<title
>MINVERSE</title>
<para
>Calcule l'inverse de la matrice</para>
<para
>La matrice multipliée avec son résultat inverse dans la matrice d'unité de la même dimension.</para>
<para
>Les matrices inversables ont un déterminant non nul.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MINVERSE(matrice)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Matrice</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MINVERSE(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
 
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MMULT">
<title
>MMULT</title>
<para
>La fonction MMULT multiplie deux matrices. Le nombre de colonnes de la première doit être égal au nombre de lignes de la seconde. Le résultat est une matrice.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MMULT(matrice1;matrice2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Première matrice</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Seconde matrice</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MMULT(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MOD">
<title
>MOD</title>
<para
>La fonction MOD() renvoie le reste après une division. Si le deuxième paramètre est nul, la fonction renvoie #DIV/0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MOD(valeur;valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MOD(12;5) renvoie 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MOD(5;5) renvoie 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MROUND">
<title
>MROUND</title>
<para
>La fonction MROUND() renvoie la valeur arrondie au multiple spécifié. La valeur et le multiple doivent avoir le même signe.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MROUND(valeur;multiple)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Multiple</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MROUND(1,252;0,5) vaut 1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MROUND(-1,252;-,50) vaut -1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTINOMIAL">
<title
>MULTINOMIAL</title>
<para
>La fonction MULTINOMIAL() renvoie le multinomial de chaque nombre donné en paramètre. On utilise cette formule pour MULTINOMIAL(a,b,c) :</para>
<para
>(a+b+c)! / a!b!c!</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MULTINOMIAL(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MULTINOMIAL(3;4;5) vaut 27 720</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLY">
<title
>MULTIPLY</title>
<para
>La fonction MULTIPLY() multiplie toutes les valeurs données en paramètres Vous pouvez multiplier les valeurs d'une zone MULTIPLY(A1:B5) ou une liste de valeurs comme MULTIPLY(12;5;12,5). Elle est équivalente à PRODUCT.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MULTIPLY(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MULTIPLY(12;5;7) vaut 420</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MULTIPLY(12,5;2) vaut 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MUNIT">
<title
>MUNIT</title>
<para
>Crée la matrice d'unité d'une dimension donnée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MUNIT(dimension)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Dimension</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MUNIT(3) crée une matrice d'unité de 3x3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MINVERSE"
>MINVERSE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODD">
<title
>ODD</title>
<para
>La fonction ODD() renvoie le nombre arrondi à l'entier impair supérieur (ou inférieur pour des valeurs négatives) le plus proche. Par définition, ODD(0) est 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ODD(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ODD(1,2) renvoie 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ODD(2) renvoie 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ODD(2) renvoie -3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="EVEN"
>EVEN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POW">
<title
>POW</title>
<para
>La fonction POW(x,y) renvoie la valeur de x élevé à la puissance y. Elle agit comme POWER.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>POW(valeur;valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POW(1,2;3,4) vaut 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POW(2;3) vaut 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="POWER"
>POWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POWER">
<title
>POWER</title>
<para
>La fonction POWER(x,y) renvoie la valeur de x élevé à la puissance y.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>POWER(valeur;valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POWER(1,2;3,4) vaut 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POWER(2;3) vaut 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="POW"
>POW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRODUCT">
<title
>PRODUCT</title>
<para
>La fonction PRODUCT() calcule le produit de toutes les valeurs données en paramètres. Vous pouvez calculer le produit d'une zone : PRODUCT(A1:B5) ou d'une liste de valeurs comme PRODUCT(12;5;12,5). Si aucune valeur numérique n'est trouvée, il est retourné 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PRODUCT(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PRODUCT(3;5;7) vaut 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PRODUCT(12.5;2) vaut 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="QUOTIENT">
<title
>QUOTIENT</title>
<para
>La fonction QUOTIENT renvoie la partie entière de numérateur / dénominateur.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>QUOTIENT(numérateur;dénominateur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Numérateur</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Dénominateur</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>QUOTIENT(21;4) renvoie 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="INT"
>INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RAND">
<title
>RAND</title>
<para
>La fonction RAND() renvoie un nombre pseudo-aléatoire entre 0 et 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RAND()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RAND() vaut par exemple 0,783 099 22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RANDBETWEEN"
>RANDBETWEEN</link
>&nbsp;</member>
<member
><link linkend="RANDEXP"
>RANDEXP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBERNOULLI">
<title
>RANDBERNOULLI</title>
<para
>La fonction RANDBERNOUILLI() renvoie un nombre pseudo-aléatoire à distribution de Bernouilli.</para>

<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RANDBERNOULLI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (entre 0 et 1)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RANDBERNOULLI(0,45)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBETWEEN">
<title
>RANDBETWEEN</title>
<para
>La fonction RANDBETWEEN() renvoie un nombre pseudo-aléatoire entre une valeur-plancher et une valeur-plafond. Si plancher 
> plafond, cette fonction renvoie Err.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RANDBETWEEN(plancher;plafond)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur plancher</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valeur plafond</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RANDBETWEEN(12;78) vaut par exemple 61,081 1...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBINOM">
<title
>RANDBINOM</title>
<para
>La fonction RANDBINOM() renvoie un nombre pseudo-aléatoire à distribution binomiale.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RANDBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (entre 0 et 1)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Tentatives (supérieur à 0)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RANDBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDNEGBINOM"
>RANDNEGBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDEXP">
<title
>RANDEXP</title>
<para
>La fonction RANDEXP() renvoie un nombre pseudo-aléatoire distribué exponentiellement.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RANDEXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (supérieure à 0)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RANDEXP(0,88)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNEGBINOM">
<title
>RANDNEGBINOM</title>
<para
>La fonction RANDNEGBINOM() renvoie un nombre négatif pseudo-aléatoire à distribution binomiale.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RANDNEGBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (entre 0 et 1)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Échecs (supérieur à 0)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RANDNEGBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDBINOM"
>RANDBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNORM">
<title
>RANDNORM</title>
<para
>La fonction RANDNORM() renvoie un nombre pseudo-aléatoire à distribution normale (Gaussien).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RANDNORM(mu; sigma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur moyenne de la distribution normale</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Écart type de la distribution normale</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RANDNORM(0; 1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDPOISSON">
<title
>RANDPOISSON</title>
<para
>La fonction RANDPOISSON() renvoie un nombre pseudo-aléatoire selon une distribution de Poisson.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RANDPOISSON(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (supérieure à 0)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RANDPOISSON(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROOTN">
<title
>ROOTN</title>
<para
>La fonction ROOTN() renvoie la racine nième positive de x.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ROOTN(x;n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROOTN(9;2) vaut 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUND">
<title
>ROUND</title>
<para
>La fonction ROUND(valeur;[chiffres]) renvoie la valeur arrondie. "Chiffres » est le nombre de chiffres auquel vous voulez arrondir ce nombre. Si "Chiffres" est 0 ou omis, la valeur est arrondie à l'entier le plus proche. Si "Chiffres" est plus petit que zéro, la partie entière correspondante du nombre est arrondie.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ROUND(valeur;[chiffres])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Digitales</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUND(1,252;2) vaut 1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUND(-1,252;2) vaut -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUND(1,252;2) vaut 1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUND(-12,25;-1) vaut -10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUND(-1,252;0) vaut -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MROUND"
>MROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDDOWN">
<title
>ROUNDDOWN</title>
<para
>La fonction ROUNDDOWN(valeur;[chiffres]) renvoie l'arrondi inférieur de la valeur la plus petite. "Chiffres" est le nombre de chiffres auquel vous voulez arrondir ce nombre. Si "chiffres" vaut 0 ou est omis, la valeur est arrondie à l'entier le plus proche.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ROUNDDOWN(valeur;[chiffres])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Digitales</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUNDDOWN(1,252) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUNDDOWN(1,252;2) vaut 1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUNDDOWN(-1,252;2) vaut -1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUNDDOWN(-1,252) vaut -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDUP">
<title
>ROUNDUP</title>
<para
>La fonction ROUNDUP(valeur;[chiffres]) renvoie l'arrondi supérieur de la valeur absolue la plus grande. "Chiffres" est le nombre de chiffres auquel vous voulez arrondir ce nombre. Si "chiffres" vaut 0 ou est omis, la valeur est arrondie à l'entier le plus proche.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ROUNDUP(valeur;[chiffres])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Digitales</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUNDUP(1,252) vaut 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUNDUP(1,252;2) vaut 1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUNDUP(-1,252;2) vaut -1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROUNDUP(-1,252) vaut -2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SERIESSUM">
<title
>SERIESSUM</title>
<para
>La fonction SERIESSUM() renvoie la somme d'une série de puissances.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SERIESSUM( X; N; M; coefficients)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>X la variable indépendante des séries de puissances</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>N la puissance initiale à laquelle X doit être élevé </seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>M l'incrément avec lequel augmenter N pour chaque terme ddans les séries</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Coefficients : une série de coefficients par lesquels chaque puissance successive de la variable X est multiplié</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SERIESSUM(2;0;2;{1;2}) renvoie 9</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIGN">
<title
>SIGN</title>
<para
>Cette fonction renvoie -1 si le nombre est négatif, 0 si le nombre est nul et 1 si le nombre est positif.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SIGN(Valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SIGN(5) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SIGN(0) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SIGN(-5) vaut -1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRT">
<title
>SQRT</title>
<para
>La fonction SQRT() renvoie la racine carrée positive de l'argument x. Elle indique une erreur si l'argument est négatif.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SQRT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SQRT(9) vaut 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SQRT(-9) est une erreur</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="IMSQRT"
>IMSQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRTPI">
<title
>SQRTPI</title>
<para
>La fonction SQRTPl() renvoie la racine carrée positive de x*Pl. Elle indique une erreur si l'argument est négatif.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SQRTPI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SQRTPI(2) vaut 2,506628</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBTOTAL">
<title
>SUBTOTAL</title>
<para
>La fonction SUBTOTAL() renvoie un sous-total d'une liste donnée d'arguments ignorant les autres résultats de sous-total. La fonction peut être l'un des nombres suivants : 1 - Average, 2 - Count, 3 - CountA, 4 - Max., 5 - Min 6 - Product, 7 - StDev, 8 - StDevP, 9 - Sum, 10 - Var, 11 - VarP.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUBTOTAL(fonction;valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Fonction</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>Si A1:A5 contient 7, 24, 23, 56 et 9 :</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUBTOTAL(1; A1:A5) renvoie 23,8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUBTOTAL(4; A1:A5) renvoie 56</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUBTOTAL(9; A1:A5) renvoie 119</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUBTOTAL(11; A1:A5) renvoie 307,76</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="AVERAGE"
>AVERAGE</link
>&nbsp;</member>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM">
<title
>SUM</title>
<para
>La fonction SUM() calcule la somme de toutes les valeurs données en paramètres. Vous pouvez calculer la somme d'une zone (SUM(A1:B5)) ou une liste de valeurs (comme SUM(12;5;12,5)).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUM(valeur,valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUM(12;5;7) vaut 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUM(12,5;2) vaut 14,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SUMA"
>SUMA</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMA">
<title
>SUMA</title>
<para
>La fonction SUMA() calcule la somme de toutes les valeurs données en paramètres. Vous pouvez calculer la somme d'une zone (SUMA(A1:B5)) ou une liste de valeurs (comme SUMA(12;5;12,5)). Si un paramètre contient du texte ou la valeur booléenne Faux, il compte comme 0. Si un paramètre vaut Vrai, il compte pour 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUM(valeur,valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMA(12;5;7) vaut 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMA(12,5;2;Vrai) vaut 15,5</para
></listitem>
</varlistentry>

<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMIF">
<title
>SUMIF</title>
<para
>La fonction SUMIF() calcule la somme de toutes les valeurs données en paramètre si elles correspondent au critère de vérification. Le paramètre de plage d'addition est optionnel. Si celui-ci n'est pas fourni, les valeurs dans la plage de vérification sont additionnées. La longueur de la plage de vérification doit être inférieure ou égale à la longueur de la plage d'addition.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUMIF(rang_vérification ; critère ; rang_addition)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage de vérification</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Critères</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Plage d'addition</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMIF(A1:A4 ; "
>1") fait la somme de toutes les valeurs dans la plage A1:A4 qui sont supérieures à 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMIF(A1:A4 ; "=0" ; B1:B4) fait la somme de toutes les valeurs dans la plage B1:B4 si les valeurs correspondantes dans la plage A1:A4 sont égales à 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMSQ">
<title
>SUMSQ</title>
<para
>La fonction SUMSQ() calcule la somme des carrés de toutes les valeurs données en paramètres. Vous pouvez calculer la somme d'une zone (SUMSQ(A1:B5)) ou une liste de valeurs (comme SUMSQ(12;5;12,5)).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUMSQ(valeur,valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMSQ(12;5;7) vaut 218</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMSQ(12,5;2) vaut 173</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRANSPOSE">
<title
>TRANSPOSE</title>
<para
>renvoie la transposition d'une matrice, cela signifie que les lignes et colonne de la matrice sont inchangées.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TRANSPOSE(matrice)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Matrice</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TRANSPOSE(A1:C3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUNC">
<title
>TRUNC</title>
<para
>La fonction TRUNC() tronque une valeur numérique à une certaine position. Si la précision est omise, elle est supposée valoir 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TRUNC(valeur, précision)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur à virgule flottante</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Précision</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TRUNC(1,2) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TRUNC(213,232; 2) renvoie 213,23</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Statistical">
<title
>Statistiques</title>

<sect3 id="AVEDEV">
<title
>AVEDEV</title>
<para
>La fonction AVEDEV() calcule la moyenne des déviations absolues d'un lot de données par rapport à leur moyenne.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>AVEDEV(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AVEDEV(11,4;17,3;21,3;25,9;40,1) renvoie 7.84</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AVEDEV(A1:A5) ...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGE">
<title
>AVERAGE</title>
<para
>La fonction AVERAGE() calcule la moyenne de toutes les valeurs données en paramètres. Vous pouvez calculer la moyenne d'une zone (AVERAGE(A1:B5)) ou d'une liste de valeurs (comme AVERAGE(12;5;12,5)).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>AVERAGE(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AVERAGE(12;5;7) vaut 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AVERAGE(12,5;2) vaut 7,25</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGEA">
<title
>AVERAGEA</title>
<para
>La fonction AVERAGEA() calcule la moyenne des arguments donnés. Les nombres, textes et valeurs logiques sont inclus dans le calcul. Si la cellule contient du texte ou des arguments évalués à Faux, ils sont comptés comme une valeur de zéro (0). Si l'argument s'évalue à Vrai, il est compté comme un (1). Notez que les cellules vides ne sont pas comptées.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>AVERAGEA(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs des chaînes</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>AVERAGEA(11,4;17,3;"dutexte";25,9;40,1) vaut 18,94</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETADIST">
<title
>BETADIST</title>
<para
>La fonction BETADIST() renvoie la fonction de densité de probabilité cumulative beta.</para>
<para
>Les troisième et quatrièmeparamètres sont optionnels. Ils précisent les limites basse et haute, sinon, les valeurs par défaut sont respectivement 0,0 et 1,0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BETADIST(nombre;alpha;beta;début;fin;[cumul=VRAI])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres alpha</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres beta</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Début</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>End</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Cumul</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BETADIST(0,2859;0,2606;08105) vaut 0,675 444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BETADIST(0,2859;0,2606;0,8105;0,2;0,9) vaut 0,537 856</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETAINV">
<title
>BETAINV</title>
<para
>La fonction BETAINV() renvoie l'inverse de BETADIST(x;alpha;beta;a;b;TRUE()).</para>
<para
>Les paramètres de début et de fin sont optionnels. Ils précisent les limites basse et haute, sinon, les valeurs par défaut sont respectivement 0,0 et 1,0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BETAINV(nombre;alpha;beta [; début=0 [; fin=1]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres alpha</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres beta</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Début</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>End</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BETADIST(BETAINV(0.1;3;4);3;4) vaut 0.1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BETADIST(BETAINV(0.3;3;4);3;4) égale 0.3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BINO">
<title
>BINO</title>
<para
>La fonction BINO() renvoie la distribution binomiale.</para>
<para
>Le premier paramètre est le nombre d'essais, le deuxième paramètre est le nombre de succès et le troisième est la probabilité de succès. Le nombre d'essais doit être plus grand que le nombre de succès et la probabilité doit être inférieure à 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BINO(essais;succès;prob_de_succès)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre d'essais</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de succès</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilité de succès</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BINO(12;9;0,8) renvoie 0,236 223 201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHIDIST">
<title
>CHIDIST</title>
<para
>La fonction CHIDIST() renvoie la valeur de probabilité, indiquée par le Chi2, qu'une hypothèse soit confirmée.</para>
<para
>CHIDIST compare la valeur du Chi2 à donner pour un échantillon aléatoire qui est calculé de la somme de (valeur observée-valeur attendue)^2 / valeur attendue pour toutes les valeurs avec la distribution CHI2 théorique et détermine à partir de ceci la probabilité d'erreur pour l'hypothèse à tester.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CHIDIST(nombre;degrés_liberté)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Degrés de liberté</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CHIDIST(13,27;5) renvoie 0,021</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBIN">
<title
>COMBIN</title>
<para
>La fonction COMBIN() calcule un nombre de combinaisons. Le premier paramètre est le nombre total d'éléments. Le deuxième est le nombre d'éléments à choisir. Ces deux éléments doivent être positifs, et le premier paramètre ne doit pas être plus petit que le second, sinon la fonction renvoie une erreur.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COMBIN(total;choisis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre total d'éléments</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre d'éléments à choisir</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMBIN(12;5) renvoie 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMBIN(5;5) renvoie 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBINA">
<title
>COMBINA</title>
<para
>La fonction COMBINA() calcule le nombre de combinaisonspossibles. Le premier paramètre est le nombre total d'éléments. Le deuxième est le nombre d'éléments à choisir. Ces deux paramètres doivent être positifs, et le premier paramètre ne doit pas être plus petit que le second, sinon la fonction renvoie une erreur.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COMBIN(total;choisis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre total d'éléments</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre d'éléments à choisir</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMBIN(12;5) renvoie 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMBIN(5;5) renvoie 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONFIDENCE">
<title
>CONFIDENCE</title>
<para
>La fonction CONFIDENCE() renvoie l'intervalle de confiance pour une population moyenne.</para>
<para
>Le paramètre alpha doit se situer entre 0 et 1 (non inclus), "stddev" doit être positif et "taille" doit être supérieur ou égal à 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CONFIDENCE(alpha;stddev;taille)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Niveau de l'intervalle de confiance</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Écart type pour la population totale</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Taille de la population totale</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CONFIDENCE(0,05;1,5;100) vaut 0,294 059</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CORREL">
<title
>CORREL</title>
<para
>La fonction CORREL() calcule le coefficient de corrélation de deux plages de cellules.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CORREL(plage1; plage2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage de valeurs de cellules</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Deuxième plage de valeurs de cellules</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CORREL(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="PEARSON"
>PEARSON</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COVAR">
<title
>COVAR</title>
<para
>La fonction COVAR() calcule la covariance de deux plages de cellules.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COVAR(plage1; plage2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage de valeurs de cellules</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Deuxième plage de valeurs de cellules</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COVAR(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEVSQ">
<title
>DEVSQ</title>
<para
>La fonction DEVSQ() calcule la somme des carrés des déviations.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DEVSQ(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEVSQ(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEVSQ(21; 33; 54; 23) renvoie 684,75</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXPONDIST">
<title
>EXPONDIST</title>
<para
>La fonction EXPONDIST() renvoie la distribution exponentielle.</para>
<para
>Le paramètre lambda doit être positif.</para>
<para
>Cumulative = 0 calcule la fonction de densité . Cumulative = 1 calcule la distribution.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EXPONDIST(nombre;lambda;cumul)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètre lambda</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densité, 1 = distribution</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EXPONDIST(3;0,5;0) vaut 0,111 565</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EXPONDIST(3;0,5;1) vaut 0,776 870</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FDIST">
<title
>FDIST</title>
<para
>La fonction FDIST() renvoie la distribution f.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FDIST(nombre;degrés_liberté_1;degrés_liberté_2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Degrés de liberté 1</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Degrés de liberté 2</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FDIST(0,8;8;12) produit 0,61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINV">
<title
>FINV</title>
<para
>La fonction FINV() renvoie l'unique nombre positif x tel que FDIST(x;r1;r2) = p.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FINV(nombre; r1; r2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Nombre r1</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre r2</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FDIST(FINV(0.1;3;4);3;4) vaut 0.1</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="FISHER">
<title
>FISHER</title>
<para
>Renvoie la transformation de Fischer pour x et crée une fonction proche d'une distribution normale.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FISHER(nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FISHER(0,2859) vaut 0,294 096</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FISHER(0,8105) vaut 1,128 485</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FISHERINV">
<title
>FISHERINV</title>
<para
>La fonction FISHERINV() renvoie l'inverse de la transformation de Fischer pour x et crée une fonction proche d'une distribution normale.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FISHERINV(nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FISHERINV(0,2859) vaut 0,278 357</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FISHERINV(0,8105) vaut 0,669 866</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FREQUENCY">
<title
>FREQUENCY</title>
<para
>Décompter le nombre de valeurs pour chaque intervalle donné par les valeurs de bordure dans le second paramètre.</para>
<para
>La valeur dans le second paramètre détermine la limite supérieure de l'intervalle. L'intervalle inclut la limite supérieure. Le tableau renvoyé est un vecteur de colonne et a plus d'un élément que le second paramètre ; le dernier élément représente le nombre de tous les éléments supérieurs à la dernière valeur dans le second paramètre. Si le second paramètre est vide, toutes les valeurs dans le premier paramètre sont comptées.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FREQUENCY(Plage de données; Plage de binaires)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante qui peuvent être comptées.</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante représentant les limites supérieures des intervalles.</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMADIST">
<title
>GAMMADIST</title>
<para
>La fonction GAMMADIST() renvoie la distribution gamma.</para>
<para
>Si le dernier paramètre (cumulé) est 0, il calcule la fonction densité ; si c'est 1, la distribution est renvoyée.</para>
<para
>Les trois premiers paramètres doivent être positifs.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>GAMMADIST(nombre;alpha;beta;cumul)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres alpha</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres beta</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Marqueurs cumulés</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GAMMADIST(0,758;0,1;0,35;1) vaut 0,995 450</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GAMMADIST(0,758;0,1;0,35;0) vaut 0,017 179</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMAINV">
<title
>GAMMAINV</title>
<para
>La fonction GAMMAINV() renvoie le nombre unique x 
>= 0 tel que GAMMAINV(x;alpha;beta;TRUE()) = p.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>GAMMAINV(nombre;alpha;beta)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres alpha</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres beta</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0.1;3;4);3;4) vaut 0.1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0.3;3;4);3;4) vaut 0.3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMALN">
<title
>GAMMALN</title>
<para
>La fonction GAMMA() renvoie le logarithme naturel de la fonction gamma : G(x). Le paramètre nombre doit être positif.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>GAMMALN(Nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GAMMALN(2) renvoie 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAUSS">
<title
>GAUSS</title>
<para
>La fonction GAUSS() renvoie la valeur intégrale pour la distribution cumulative normale standard.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>GAUSS(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Le nombre pour lequel la valeur intégrale de la distribution normale standard doit être calculée</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GAUSS(0,25) vaut 0,098 706</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GEOMEAN">
<title
>GEOMEAN</title>
<para
>La fonction GEOMEAN() renvoie la moyenne géométrique des arguments donnés. C'est égal à la racine nième du produit des termes.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>GEOMEAN(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GEOMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>GEOMEAN(21; 33; 54; 23) renvoie 30,458 86</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="HARMEAN"
>HARMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HARMEAN">
<title
>HARMEAN</title>
<para
>La fonction HARMEAN() calcule la moyenne harmonique des N points de données (N divisé par la somme des inverses des points de données).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>HARMEAN(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HARMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HARMEAN(21; 33; 54; 23) renvoie 28,588</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="GEOMEAN"
>GEOMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HYPGEOMDIST">
<title
>HYPGEOMDIST</title>
<para
>La fonction HYPGEOMDIST() renvoie la distribution hypergéométrique.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>HYPGEOMDIST(x; n; M; N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre de succès dans un échantillon</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre d'essais</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre total de succès</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Taille de la population</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>HYPGEOMDIST(2; 5; 6; 20) renvoie 0,352 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTERCEPT">
<title
>INTERCEPT</title>
<para
>La fonction INTERCEPT() calcule l'interception de la régression linéaire avec l'axe y.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>INTERCEPT(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur y (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur x (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INVBINO">
<title
>INVBINO</title>
<para
>La fonction INVBINO() renvoie la distribution binomiale négative. Le premier paramètre est le nombre de tentatives, le deuxième paramètre est le nombre d'échecs et le troisième est la probabilité d'échec. Le nombre d'essais doit être plus grand que le nombre d'échecs et la probabilité doit être inférieure ou égale à 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>INVBINO(essais;échecs;prob_d_échec)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre d'essais</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombres d'échecs</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilité d'échec</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>INVBINO(12;3;0,2) renvoie 0,236 223 201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURT">
<title
>KURT</title>
<para
>La fonction KURT() calcule une estimation sans biais du Kurtosis d'un lot de données. Vous devez fournir au moins 4 valeurs, sinon une erreur est retournée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>KURT(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>KURT(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>KURT(21; 33; 54; 23) renvoie 1,344 239</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="KURTP"
>KURTP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURTP">
<title
>KURTP</title>
<para
>La fonction KURTP() calcule une population kurtosis d'un lot de données. Vous devez fournir au moins 4 valeurs, sinon, une erreur sera retournée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>KURTP(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>KURTP(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>KURTP(21; 33; 54; 23) renvoie -1,021</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="KURT"
>KURT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LARGE">
<title
>gros</title>
<para
>La fonction LARGE() renvoie la k-ème plus grande valeur d'un lot de données.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LARGE(plage; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage de valeurs de cellules</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Position (depuis le plus grand)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> LARGE(A1:A3; 2) renvoie 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEGACYFDIST">
<title
>LEGACYFDIST</title>
<para
>La fonction LEGACYFDIST() renvoie la distribution f.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LEGACYFDIST(nombre;degrés_liberté_1;degrés_liberté_2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Degrés de liberté 1</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Degrés de liberté 2</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LEGACYFDIST(0,8;8;12) produit 0,61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGINV">
<title
>LOGINV</title>
<para
>La fonction LOGINV() renvoie l'inverse de la distribution cumulative lognormale.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LOGINV(p; moyenne; stdev)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Probabilité</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur moyenne de la distribution logarithmique standard</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Écart type de la distribution logarithmique standard</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOGINV(0,1;0;1) vaut 0,277 6</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGNORMDIST">
<title
>LOGNORMDIST</title>
<para
>La fonction LOGNORMDIST() renvoie la distribution cumulative lognormale.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LOGNORMDIST(Nombre;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur de probabilité pour laquelle la distribution logarithmique standard doit être calculée</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur moyenne de la distribution logarithmique standard</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Écart type de la distribution logarithmique standard</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOGNORMDIST(0,1;0;1) vaut 0,01</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MEDIAN">
<title
>MEDIAN</title>
<para
>La fonction MEDIAN() calcule la moyenne de toutes les valeurs données en paramètres. Vous pouvez calculer la moyenne d'une plage (MEDIAN(A1:B5)) ou d'une liste de valeurs (comme MEDIAN(12;5;12,5)). Les cellules vides sont considérées comme valant zéro,et les cellules contenant du texte seront ignorées.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MEDIAN(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante ou plages de valeurs</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante ou plage de valeurs</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante ou plage de valeurs</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante ou plage de valeurs</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante ou plage de valeurs</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MEDIAN(12; 5; 5.5) vaut 5,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MEDIAN(12; 7; 8; 2) vaut 7,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MODE">
<title
>MODE</title>
<para
>La fonction MODE() renvoie la valeur la plus fréquente dans le lot de données.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MODE(nombre; nombre2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MODE(12; 14; 12; 15) renvoie 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NEGBINOMDIST">
<title
>NEGBINOMDIST</title>
<para
>La fonction NEGBINOMDIST() renvoie la distribution binomiale négative.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NEGBINOMDIST(essais;succès;prob_de_succès)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombres d'échecs</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de succès</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilité de succès</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NEGBINOMDIST(2;5;0,55) renvoie 0,152 872 629</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMDIST">
<title
>NORMDIST</title>

<para
>La fonction NORMDIST() renvoie la distribution cumulative normale.</para>
<para
>Nombre est la valeur de la distribution fondée sur laquelle la distribution normale doit être calculée.</para>
<para
>MV est le milieu linéaire de la distribution</para>
<para
>STD est l'écart-type de la distribution.</para>
<para
>K = 0 calcule la fonction de densité ; K = 1 calcule la distribution.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NORMDIST(Nombre;MV;STD;K)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Milieu linéaire de la distribution</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Écart-type de la distribution</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densité, 1 = distribution</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NORMDIST(0,859;0,6;0,258;0) vaut 0,934 236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NORMDIST(0,859;0,6;0,258;1) vaut 0,842 281</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMINV">
<title
>NORMINV</title>
<para
>La fonction NORMINV() renvoie l'inverse de la distribution cumulative normale. Le nombre doit se situer entre 0 et 1 (non inclus) et "STD" doit être positif.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NORMINV(nombre;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur de probabilité pour laquelle la distribution logarithmique standard doit être calculée</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur centrale dans la distribution normale</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Écart type de la distribution normale</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NORMINV(0,9;63;5) vaut 69,41</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSDIST">
<title
>NORMSDIST</title>
<para
>La fonction NORMDIST() renvoie la distribution normale standard.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NORMSDIST(Nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur pour laquelle la distribution normale standard est calculée</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NORMSDIST(1) vaut 0,84</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSINV">
<title
>NORMSINV</title>
<para
>La fonction NORMSINV() renvoie l'inverse de la distribution cumulative normale standard. Le nombre doit se situer entre 0 et 1 (non inclus).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>NORMSINV(Nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>NORMSINV(0,908789) renvoie 1,333 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PEARSON">
<title
>PEARSON</title>
<para
>La fonction PEARSON() calcule le coefficient de corrélation de deux plages de cellules. Elle est identique à la fonction CORREL.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PEARSON(plage1; plage2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage de valeurs de cellules</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Deuxième plage de valeurs de cellules</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PEARSON(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CORREL"
>CORREL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERCENTILE">
<title
>PERCENTILE</title>
<para
>La fonction PERCENTILE() renvoie le simple pourcentage x-e de la valeur des données. Un pourcentage renvoie la valeur complète pour une série de données qui vont de la plus petite (alpha=0) à la plus grande (alpha=1) d'une série de données. Pour alpha=25 %, le pourcentage signifie le premier quart ; alpha=50 % est le MEDIAN. Les ccellules vides sont considérées comme 0, et les cellules avec un texte sont ignorées.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PERCENTILE(data;alpha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage de valeurs </seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>La valeur proportionnelle entre 0 et 1 incluse;</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="MEDIAN"
>MEDIAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUT">
<title
>PERMUT</title>
<para
>La fonction PERMUT() renvoie le nombre de permutations. Le premier paramètre est le nombre d'éléments et le second est le nombre d'éléments à permuter.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PERMUT(total;permutés)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre total d'éléments</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre d'éléments à permuter</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PERMUT(8;5) vaut 6 720</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PERMUT(1;1) vaut 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUTATIONA">
<title
>PERMUTATIONA</title>
<para
>La fonction PERMUTATIONA() renvoie le nombre de permutations lorsque les répétitions sont permises. Le premier paramètre est le nombre d'éléments et le second est le nombre d'éléments à permuter. Les deux paramètres doivent être positifs.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PERMUTATIONA(total;choisi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre total d'éléments</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre d'éléments à choisir</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PERMUTATIONA(2,3) renvoie 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PERMUTATIONA(0,0) renvoie 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PHI">
<title
>PHI</title>
<para
>La fonction PHI() renvoie la valeur de la fonction de distribution pour une distribution normale standard.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PHI(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Le nombre pour lequel la distribution normale standard doit être calculée</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PHI(0,25) vaut 0,386 668</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POISSON">
<title
>POISSON</title>
<para
>La fonction POISSON() renvoie la distribution de Poisson.</para>
<para
>La fonction lambda et les paramètres de nombres doivent être positifs.</para>
<para
>Cumulative = 0 calcule la fonction de densité . Cumulative = 1 calcule la distribution.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>POISSON(nombre;lambda;cumul)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètre lambda (la valeur du milieu)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densité, 1 = distribution</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POISSON(60;50;0) vaut 0,020 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>POISSON(60;50;1) vaut 0,927 840</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANK">
<title
>RANK</title>
<para
>La fonction RANK() renvoie le rang d'une nombre dans une liste de nombres.</para>
<para
>Ordonner précise comment ranger les nombres :</para>
<para
>Si 0 ou omis, les données sont rangées en ordre descendant.</para>
<para
>Si pas 0, les données sont rangées en ordre ascendant.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RSQ(Valeur; Données; Ordre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Données (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordonner</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RANK (2;{1;2;3}) vaut 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RSQ">
<title
>RSQ</title>
<para
>La fonction RSQ() renvoie le carré du coefficient de corrélation du moment de production Pearson au travers des points de données dans yConnu et xConnu. </para>
<para
>Si "arrayY" et "arrayX" sont vides ou ont un nombre différent de points de données, alors #N/A est renvoyé.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RSQ( Y connu; X connu)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Connaître Y (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Connaître X (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEW">
<title
>SKEW</title>
<para
>La fonction SKEW() renvoie une estimation de l'obliquité d'une distribution.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SKEW(nombre; nombre2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SKEW(11,4; 17,3; 21,3; 25,9; 40,1) renvoie 0,976 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SKEWP"
>SKEWP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEWP">
<title
>SKEWP</title>
<para
>La fonction SKEWP() renvoie l'obliquité de la population d'une distribution</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SKEWP(nombre; nombre2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Flottant</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SKEWP(11,4; 17,3; 21,3; 25,9; 40,1) renvoie 0,655 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SKEW"
>SKEW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLOPE">
<title
>SLOPE</title>
<para
>La fonction SLOPE() calcule le slope d'une ligne de régression linéaire.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur y (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur x (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SMALL">
<title
>SMALL</title>
<para
>La fonction SMALL() renvoie la k-ème plus petite valeur d'un lot de données.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SMALL(plage; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Plage de valeurs de cellules</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Position (depuis le plus petit)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> SMALL(A1:A3; 1) renvoie 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STANDARDIZE">
<title
>STANDARDIZE</title>
<para
>La fonction STANDARDIZE() calcule une valeur normalisée.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>STANDARDIZE(x; moyenne, stdev)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre à normaliser</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Moyenne d'une distribution</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Écart type</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>STANDARDIZE(4; 3; 7) renvoie 0,142 9</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEV">
<title
>STDEV</title>
<para
>La fonction STDEV() renvoie l'écart-type estimé fondée sur un échantillon. L'écart type est une mesure de la dispersion des valeurs par rapport à la valeur moyenne.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>STDEV(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>STDEV(6;7;8) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVA">
<title
>STDEVA</title>
<para
>La fonction STDEVA() renvoie l'écart-type estimé sur la base d'un échantillon. L'écart type est une mesure de l'étalement de la dispersion par rapport à la moyenne. Si une cellule référencée contient du texte ou contient la valeur booléenne Faux, elle compte pour 0. Si la valeur booléenne est Vrai, elle est comptée comme 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>STDEVA(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) vaut 1, si A1 est vide</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) vaut 3,109, si A1 est "Vrai"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVP">
<title
>STDEVP</title>
<para
>La fonction STDEVP() renvoie l'écart-type fondé sur une population entière.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>STDEVP(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>STDEVP(6;7;8) vaut 0,816 497...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVPA">
<title
>STDEVPA</title>
<para
>La fonction STDEVPA() renvoie l'écart-type fondé sur une population entière. Si une cellule référencée contient du texte ou contient la valeur booléenne "Faux", elle compte pour 0. Si la valeur booléenne est "Vrai", elle est comptée comme 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>STDEVPA(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) vaut 0,816 497..., si A1 est vide</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) vaut 2.69..., si A1 est Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) vaut 3,11..., si A1 est Faux</para
></listitem>
</varlistentry>

<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STEYX">
<title
>STEYX</title>
<para
>La fonction STEYX() calcule l'erreur standard de la valeur y préfixée pour chaque x dans la régression.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur y (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeur x (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM2XMY">
<title
>SUM2XMY</title>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMPRODUCT">
<title
>SUMPRODUCT</title>
<para
>La fonction SUMPRODUCT() (SUM(X*Y)) renvoie la somme des produits de ces valeurs. Le nombre de valeurs doit être égal entre les deux tableaux. Sinon, la fonction renvoie "Err".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUMPRODUCT(tableau1;tableau2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur (tableau)</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeur (tableau)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMPRODUCT(A1:A2;B1:B2) avec A1=2, A2=5, B1=3 et B2=5 renvoie 31</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2MY2">
<title
>SUMX2MY2</title>
<para
>La fonction SUMX2MY2() (SUM(X^2-Y^2)) renvoie la différence des carrés de ces valeurs. Le nombre de valeurs doit être égal entre les deux tableaux. Sinon, la fonction renvoie "Err".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUMX2MY2(tableau1;tableau2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur (tableau)</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeur (tableau)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMX2MY2(A1:A2;B1:B2) avec A1=2, A2=5, B1=3 et B2=5 renvoie -5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2PY2">
<title
>SUMX2PY2</title>
<para
>La fonction SUMX2PY2() (SUM(X^2+Y^2)) renvoie la somme des carrés de ces valeurs. Le nombre de valeurs doit être égal entre les deux tableaux. Sinon, la fonction renvoie "Err".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUMX2PY2(tableau1;tableau2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur (tableau)</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeur (tableau)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMX2PY2(A1:A2;B1:B2) avec A1=2, A2=5, B1=3 et B2=5 renvoie 63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMXMY2">
<title
>SUMXMY2</title>
<para
>La fonction SUMXMY2() (SUM((X-Y)^2)) renvoie le carré de la différence de ces valeurs. Le nombre de valeurs doit être égal dans les deux tableaux, sinon la fonction renvoie Err .</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUMXMY2(Tableau1;tableau2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur (tableau)</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Valeur (tableau)</seg
><seg
>Double</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUMXMY2(A1:A2;B1:B2) avec A1=2, A2=5, B1=3 et B2=5 renvoie 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TDIST">
<title
>TDIST</title>
<para
>La fonction TDIST() renvoie la distribution t.</para>
<para
>Mode = 1 renvoie le test avec une mesure, Mode = 2 renvoie le test avec deux mesures.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TDIST(nombre;degrés_liberté;mode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Degrés de liberté pour la distribution t</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mode (1 ou 2)</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TDIST(12;5;1) renvoie 0,000 035</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TREND">
<title
>TREND</title>
<para
>La fonction TREND() calcule une séquence de valeurs fondées sur une régression linéaire de valeurs connues paires.</para>
<para
>Contraintes: COUNT(YConnu) = COUNT(XConnu).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TREND(YConnu[;knownX[;nouveauX[;allowOffset = VRAI]]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>YConnu</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>XConnu</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Nombreséquence du nouveauX</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Offsetpermis</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIMMEAN">
<title
>TRIMMEAN</title>
<para
>La fonction TRIMMEAN() calcule la moyenne d'une fraction d'un ensemble de données.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TRIMMEAN(dataSet; cutOffFraction)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>SetDonnées</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>ArrêtFraction</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TTEST">
<title
>TTEST</title>
<para
>La fonction TTEST() calcule la probabilité d'un test t.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TTEST(x; y; type; méthode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>x (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>y (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>type</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>méthode</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VAR">
<title
>VAR</title>
<para
>La fonction VAR() calcule la variance fondée sur un échantillon.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>VAR(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VAR(12;5;7) vaut 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VAR(15;80;3) vaut 1 716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VAR(6;7;8) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="VARIANCE"
>VARIANCE</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARA">
<title
>VARA</title>
<para
>La fonction VARA() calcule la variance fondée sur un échantillon.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>VARA(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARA(12;5;7) vaut 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARA(15;80;3) vaut 1 716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARA(6;7;8) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARIANCE">
<title
>VARIANCE</title>
<para
>La fonction VARIANCE() calcule la variance fondée sur un échantillon. Elle est identique à la fonction VAR.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>VARIANCE(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARIANCE(12;5;7) vaut 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARIANCE(15;80;3) vaut 1 716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARIANCE(6;7;8) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARP">
<title
>VARP</title>
<para
>La fonction VARIANCE() calcule la variance fondée sur une population entière.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>VARP(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARP(12;5;7) vaut 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARP(15;80;3) vaut 1 144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARP(6;7;8) vaut 0,666 666 67...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARPA">
<title
>VARPA</title>
<para
>La fonction VARPA() calcule la variance fondée sur une population entière. Les valeurs de texte et booléennes qui s'évaluent à Faux sont comptées comme 0, les valeurs booléennes qui s'évaluent à Vrai sont comptées comme 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>VARPA(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Valeurs à virgule flottante</seg
><seg
>Une plage de valeurs à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARPA(12;5;7) vaut 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARPA(15;80;3) vaut 1 144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VARP(6;7;8) vaut 0,666 666 7...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEIBULL">
<title
>WEIBULL</title>
<para
>La fonction WEIBULL() renvoie la distribution de Weibull.</para>
<para
>Les paramètres alpha et beta doivent être positifs, le nombre (premier paramètre) ne doit pas être négatif.</para>
<para
>Cumulative = 0 calcule la fonction de densité . Cumulative = 1 calcule la distribution.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>WEIBULL(nombre;alpha;beta;cumul)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres alpha</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Paramètres beta</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densité, 1 = distribution</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>WEIBULL(2;1;1;0) vaut 0,135 335</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>WEIBULL(2;1;1;1) vaut 0,864 665</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZTEST">
<title
>ZTEST</title>
<para
>La fonction ZTEST() calcule la probabilité de deux mesures d'un test z avec une distribution normale.</para>
<para
>Produit un test de l'hypothèse nulle, dont l'exemple est un exemple d'une variable aléatoire normalement distribuée avec une signification compréhensive et un sigma de déviation standard. Une valeur de renvoi de 1 indique que l'hypothèse nulle est rejetée, c.a.d que l'exemple n'est pas un exemple de distribution normale. Si le sigma est omis, il est estimé depuis un exemple, utilisant STDEV. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ZTEST(x; moyenne; ÉcartType)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>x (tableau)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>moyenne</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>ÉcartType</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Text">
<title
>Texte</title>

<sect3 id="ASC">
<title
>ASC</title>
<para
>La fonction ASC() renvoie les caractères demi-larges correspondant à l'argument extra-large.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ASC(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Caractères extra-larges</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="JIS"
>JIS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BAHTTEXT">
<title
>BAHTTEXT</title>
<para
>La fonction BAHTTEXT() convertit un nombre en texte en caractères Thai(baht).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>BAHTTEXT(nombre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>BAHTTEXT(23) renvoie "ยสบสามบาทถวน"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHAR">
<title
>CHAR</title>
<para
>La fonction CHAR() renvoie le caractère spécifié par un nombre.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CHAR(code)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Code de caractère</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CHAR(65) renvoie "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="CLEAN">
<title
>CLEAN</title>
<para
>La fonction CLEAN() enlève tous les caractères non imprimables d'une chaîne</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CLEAN(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CLEAN(AsciiToChar(7) + "HELLO") renvoie "HELLO"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CODE">
<title
>CODE</title>
<para
>La fonction CODE() renvoie un code numérique pour le premier caractère dans une chaîne de texte.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CODE(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Texte</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CODE("KDE") renvoie 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPARE">
<title
>COMPARE</title>
<para
>La fonction COMPARE() renvoie 0 si ces deux chaînes sont identiques ; -1 si la première est plus basse en valeur que la deuxième ; sinon, elle renvoie 1.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COMPARE(chaîne1;chaîne2; vrai|faux)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Première chaîne</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Chaînes à comparer</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Comparaison sensible à la casse (vrai / faux) ?</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMPARE("Calligra";"Calligra";true) renvoie 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMPARE("calligra"; "Calligra"; true) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COMPARE("kspread"; "Calligra"; false) renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="EXACT"
>EXACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONCATENATE">
<title
>CONCATENATE</title>
<para
>La fonction CONCATENATE() renvoie une chaîne qui est la concaténation des chaîne passées en paramètres.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CONCATENATE(valeur;valeur;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeurs des chaînes</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Valeurs des chaînes</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Valeurs des chaînes</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Valeurs des chaînes</seg
><seg
>Une plage de chaînes</seg
></seglistitem>
<seglistitem
><seg
>Valeurs des chaînes</seg
><seg
>Une plage de chaînes</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CONCATENATE("Sheets";"Calligra";"KDE") renvoie "SheetsCalligraKDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLAR">
<title
>DOLLAR</title>
<para
>La fonction DOLLAR() convertit un nombre en texte en utilisant le format monétaire, avec les décimales arrondies à l'endroit spécifié. Bien que le nom soit DOLLAR, cette fonction fera la conversion avec les unités locales.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DOLLAR(nombre;décimales)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Décimales</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DOLLAR(1403,77) renvoie "1 403,77 €"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DOLLAR(-0,123;4) renvoie "0,123 0 €"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXACT">
<title
>EXACT</title>
<para
>La fonction EXACT() renvoie "Vrai" si ces deux chaînes sont identiques, sinon elle renvoie "Faux".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>EXACT(chaîne1;chaîne2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Chaîne</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EXACT("Calligra";"Calligra") renvoie Vrai</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>EXACT("KSpread";"Calligra") returns Faux</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COMPARE"
>COMPARE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIND">
<title
>FIND</title>
<para
>La fonction FIND() cherche une chaîne de texte (texte_cherché) dans une autre chaîne de texte (dans_le_texte) et renvoie le numéro du point de départ du "texte_cherché", depuis le caractère le plus à gauche de "dans_le_texte".</para>
<para
>Le paramètre "num_départ" spécifie le caractère où la recherche commencera. Le premier caractère est le caractère numéro 1. Si "num_départ » est omis, on suppose qu'il vaut 1.</para>
<para
>Vous pouvez aussi utiliser la fonction "SEARCH", mais contrairement à elle, "FIND" tient compte de la casse et n'autorise pas de jokers.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FIND(texte_cherché;dans_le_texte;num_départ)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Le texte que vous voulez trouver</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Le texte qui peut contenir "texte_cherché"</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Spécifie l'index où commencer la recherche</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FIND("Cal";"Calligra") renvoie 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FIND("i";"Calligra") renvoie 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FIND("a";"Sheets in Calligra";4) renvoie 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINDB">
<title
>FINDB</title>
<para
>La fonction FINDB() cherche une chaîne de texte (texte_cherché) dans une autre chaîne de texte (dans_le_texte) et renvoie le numéro du point de départ du « texte_cherché », depuis le caractère le plus à gauche de « dans_le_texte » en utilisant la position des octets.</para>
<para
>Le paramètre PositionOctet spécifie le caractère où la recherche commencera. Le premier caractère est le caractère numéro 2. Si « num_départ » est omis, on suppose qu'il vaut 2.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FINDB(texte_cherché;dans_le_texte;départ PositionOctet)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Le texte que vous voulez trouver</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Le texte qui peut contenir "texte_cherché"</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Spécifie la position de l'octet où commencer la recherche</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIXED">
<title
>FIXED</title>
<para
>La fonction FIXED() arrondit un nombre au nombre spécifié de décimales, formate le nombre en chaîne de format décimal et renvoie le résultat en texte. Si "Décimales" est négatif, le nombre est arrondi à gauche du séparateur décimal. Si vous omettez "Décimales", il est supposé valoir 2. Si le paramètre optionnel "Pas_de_séparateur" est "Vrai", le séparateur des milliers ne sera pas affiché.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>FIXED(nombre;décimales;pas_de_séparateur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Nombre</seg
><seg
>Double</seg
></seglistitem>
<seglistitem
><seg
>Décimales</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Pas_de_séparateur</seg
><seg
>Une valeur de vérité (VRAI ou FAUX)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FIXED(1234,567;1) renvoie "1 234,6"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FIXED(1234,567;1;FAUX) renvoie "1234,6"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>FIXED(44,332) renvoie "44,33"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="JIS">
<title
>JIS</title>
<para
>La fonction JIS() renvoie les caractères extra-larges correspondant à l'argument demi-large.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>JIS(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Caractères demi-large</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ASC"
>ASC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFT">
<title
>LEFT</title>
<para
>La fonction LEFT() renvoie une sous-chaîne qui contient la longueur des caractères les plus à gauche de la chaîne. La chaîne complète est renvoyée si cette longueur dépasse la longueur de la chaîne. Une erreur est indiquée si le nombre de caractères est inférieur à 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LEFT(texte;longueur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Nombre de caractères</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LEFT("HELLO";2) renvoie "he"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LEFT("KSpread";10) renvoie "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LEFT("KSpread") renvoie "K"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFTB">
<title
>LEFTB</title>
<para
>La fonction LEFTB() renvoie une sous-chaîne qui contient la longueur des caractères les plus à gauche de la chaîne en utilisant la position des octets. La chaîne complète est renvoyée si cette longueur dépasse la longueur de la chaîne. Une erreur est indiquée si le nombre de caractères est inférieur à 0.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LEFTB(texte;longueur en octet)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Longueur en octet</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEN">
<title
>LEN</title>
<para
>La fonction LEN() renvoie la longueur d'une chaîne.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LEN(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LEN("HELLO") renvoie 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LEN("KSpread") renvoie 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LENB"
>LENB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LENB">
<title
>LENB</title>
<para
>La fonction LENB() renvoie la longueur de la chaîne en utilisant la position des octets.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LENB(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOWER">
<title
>LOWER</title>
<para
>La fonction LOWER() convertit une chaîne en minuscules.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>LOWER(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOWER("HELLO") renvoie "hello"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LOWER("HELLO") renvoie "hello"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MID">
<title
>MID</title>
<para
>La fonction MID() renvoie une sous-chaîne qui contient les "longueur" caractères de la chaîne, débutant à l'index "position".</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MID(texte;position;longueur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Position</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Longueur</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MID("Calligra";2;3) renvoie "all"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>MID("Calligra";2) renvoie "alligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIDB">
<title
>MIDB</title>
<para
>La fonction MIDB() renvoie une sous-chaîne qui contient les « longueur » caractères de la chaîne, débutant à l'index « position », en utilisant la position des octets.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>MIDB(texte;position en octets;longueur en octets)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Position en octet</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Longueur en octet</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PROPER">
<title
>PROPER</title>
<para
>La fonction PROPER convertit la première lettre de chaque mot en majuscule et le reste en minuscule.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PROPER(chaîne)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PROPER("ceci est un titre") renvoie "Ceci Est Un Titre"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXP">
<title
>REGEXP</title>
<para
>Renvoie la partie d'une chaîne correspondant à une expression rationnelle. Si la chaîne ne correspond pas à l'expression rationnelle donnée, la valeur spécifiée dans défaut est renvoyée.</para>
<para
>Si une référence arrière est fournie, alors la valeur de cette référence arrière est renvoyée.</para>
<para
>Si le paramètre défaut n'est pas précisé, on suppose que c'est la chaîne vide. Si aucune référence arrière n'est donnée, on suppose que c'est 0 (toute la partie correspondante est ainsi renvoyée).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>REGEXP(texte; exp_rationnelle; défaut; réf_arrière)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Texte recherché</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Expression rationnelle</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Valeur par défaut (optionnel)</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Référence arrière (optionnel)</seg
><seg
>Nombre</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>REGEXP("Le nombre est 15.";"[0-9]+") = "15" </para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>REGEXP("15, 20, 26, 41";"([0-9]+), *[0-9]+$";"";1) = "26" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXPRE">
<title
>REGEXPRE</title>
<para
>Remplace toutes les parties correspondant à l'expression rationnelle avec le texte de remplacement</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>REGEXPRE(texte; exp_rationnelle; remplacement)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Texte recherché</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Expression rationnelle</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Remplacement</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>REGEXPRE("14 et 15 et 16" ; "[0-9]+" ; "num") renvoie "num et num et num"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACE">
<title
>REPLACE</title>
<para
>La fonction REPLACE() remplace une partie d'une chaîne de texte par une chaîne différente.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>REPLACE(texte;position;longueur;nouveau_texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Texte que vous voulez remplacer par des caractères</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Position des caractères à remplacer</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Nombre de caractères à remplacer</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Le texte qui remplacera les caractères dans l'ancien texte</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>REPLACE("abcdefghijk";6;5;"-") renvoie "abcde-k"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>REPLACE("2002";3;2;"03 x) renvoie "2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACEB">
<title
>REPLACEB</title>
<para
>La fonction REPLACEB() remplace une partie d'une chaîne de texte par une chaîne différente en utilisant la position des octets.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>REPLACEB(texte;position en octets;longueur en octets,nouveau texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Le texte que vous voulez remplacer par des caractères en utilisant la position des octets</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Position des octets des caractères à remplacer</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Longueur en octets des caractères à remplacer</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Le texte qui remplacera les caractères dans l'ancien texte</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPT">
<title
>REPT</title>
<para
>La fonction REPT() répète le premier paramètre autant de fois qu'indiqué par le second paramètre. Le second paramètre ne doit pas être négatif, et cette fonction retourne une chaîne vide si ce deuxième paramètre est à zéro (ou arrondi à zéro).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>REPT(texte;compte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Nombre de répétitions</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>REPT("KSpread";3) renvoie "KSpreadKSpreadKSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>REPT("KSpread";0) renvoie ""</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHT">
<title
>RIGHT</title>
<para
>La fonction RIGHT() renvoie une sous-chaîne qui contient les "longueur" caractères les plus à droite de la chaîne. La chaîne complète est retournée si "longueur" dépasse la longueur de la chaîne.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RIGHT(texte;longueur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Nombre de caractères</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RIGHT("HELLO";2) renvoie "lo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>LEFT("KSpread";10) renvoie "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RIGHT("KSpread") renvoie "d"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHTB">
<title
>RIGHTB</title>
<para
>La fonction RIGHTB() renvoie une sous-chaîne qui contient les « longueur » caractères les plus à droite de la chaîne en utilisant les positions des octets. La chaîne complète est retournée si « longueur » dépasse la longueur de la chaîne.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RIGHTB(texte;longueur en octet)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Longueur en octet</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROT13">
<title
>ROT13</title>
<para
>La fonction ROT13() chiffre le texte en remplaçant chaque lettre par celle qui se trouve 13 places plus loin dans l'alphabet. Si la 13ème position est au-delà de la lettre Z, on recommence à A (rotation).</para>
<para
>En appliquant la fonction de chiffrement à nouveau, le texte résultant est le texte déchiffré.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ROT13(Texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Texte</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROT13("KSpread") renvoie "XFcernq"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ROT13("XFcernq") renvoie "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCH">
<title
>SEARCH</title>
<para
>La fonction SEARCH() cherche une chaîne de texte (texte_cherché) dans une autre chaîne de texte (dans_le_texte) et renvoie le nombre du point de démarrage de "texte_cherché", depuis le caractère le plus à gauche de "dans_le_texte".</para>
<para
>Vous pouvez utiliser les jokers, points d'interrogation (?) et astérisque (*). Un point d'interrogation correspond à un seul caractère, un astérisque à n'importe quelle séquence de caractères.</para>
<para
>Le paramètre "num_début" spécifie le caractère où commencer la recherche. Le premier caractère est le numéro 1. Si "num_début" manque, il est supposé valoir 1. "SEARCH" ne distingue pas les majuscules des minuscules.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SEARCH(texte_cherché;dans_le_texte;num_début)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Le texte que vous voulez trouver</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Le texte qui peut contenir "texte_cherché"</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Index spécifié pour le début de la recherche</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SEARCH("e";"Statements";6) renvoie 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SEARCH("margin";"Profit Margin") renvoie 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCHB">
<title
>SEARCHB</title>
<para
>La fonction SEARCHB() cherche une chaîne de texte (texte_cherché) dans une autre chaîne de texte (dans_le_texte) et renvoie le nombre du point de démarrage de « texte_cherché », depuis le caractère le plus à gauche de « dans_le_texte » en utilisant les positions des octets.</para>
<para
>Vous pouvez utiliser les jokers, points d'interrogation (?) et astérisque (*). Un point d'interrogation correspond à un seul caractère, un astérisque à n'importe quelle séquence de caractères.</para>
<para
>Le paramètre PositionOctet spécifie le caractère où commencer la recherche. Le premier caractère est le numéro 2. Si PositionOctet manque, il est supposé valoir 2. SEARCHB ne distingue pas les majuscules des minuscules.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SEARCHB(texte_cherché;dans_le_texte;départ PositionOctet)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Le texte que vous voulez trouver</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Le texte qui peut contenir "texte_cherché"</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Position de l'octet donné pour le début de la recherche</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLEEK">
<title
>SLEEK</title>
<para
>La fonction SLEEK() enlève toutes les espaces d'une chaîne.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SLEEK(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SLEEK("Voici du texte") renvoie "Voicidutexte"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="TRIM"
>TRIM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBSTITUTE">
<title
>SUBSTITUTE</title>
<para
>La fonction SUBSTITUTE() substitue « nouveau_texte » à « ancien_texte » dans une chaîne de texte. Si « num_d_instance » est spécifié, seule cette instance de l'ancien texte sera remplacée. Sinon, chaque occurrence d'« ancien_texte » sera changée en « nouveau_texte ». Utilisez « SUBSTITUTE » quand vous voulez remplacer du texte spécifique, utilisez « REPLACE » quand vous voulez remplacer du texte qui se trouve à un endroit précis.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SUBSTITUTE(texte;ancien_texte; nouveau_texte; num_d_instance)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Texte pour lequel vous voulez substituer</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Partie du texte que vous voulez remplacer</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Nouveau texte qui sera le remplacement</seg
><seg
>Texte</seg
></seglistitem>
<seglistitem
><seg
>Occurrence à remplacer</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUBSTITUTE("Cost Data";"Cost";"Sales") renvoie "Sales Data"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUBSTITUTE("Qtr 1, 2001";"1";"3";1) renvoie "Qtr 3, 2001"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SUBSTITUTE("Qtr 1, 2001";"1";"3";4) renvoie "Qtr 3, 2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="T">
<title
>T</title>
<para
>La fonction T() renvoie le texte auquel on se réfère par "Valeur". Si "Valeur" est ou se rapporte à du texte, T renvoie "Valeur". Si "Valeur" ne se rapporte pas à du Texte, T renvoie du texte vide.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>T(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>T("Calligra") renvoie "Calligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>T(1,2) renvoie "" (texte vide)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TEXT">
<title
>TEXT</title>
<para
>La fonction TEXT() convertit une valeur en texte.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TEXT(valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Valeur</seg
><seg
>N'importe quel type de valeur</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TEXT(1234,56) renvoie "1234,56"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TEXT("KSpread";10) renvoie "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TOGGLE">
<title
>TOGGLE</title>
<para
>La fonction TOGGLE() change les minuscules en majuscules et les majuscules en minuscules.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TOGGLE(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TOGGLE("HELLO") renvoie "HELLO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TOGGLE("HELLO") renvoie "hello"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TOGGLE("HELLO") renvoie "hElLo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIM">
<title
>TRIM</title>
<para
>La fonction TRIM() renvoie du texte avec un seul espace entre les mots.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TRIM(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TRIM(" hello KSpread ") renvoie "hello KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICHAR">
<title
>UNICHAR</title>
<para
>La fonction UNICHAR() renvoie le caractère spécifié par un point de code numérique.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>UNICHAR(code)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Code de caractère</seg
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>UNICHAR(65) renvoie "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="UNICODE"
>UNICODE</link
>&nbsp;</member>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICODE">
<title
>UNICODE</title>
<para
>La fonction UNICODE() renvoie un code numérique pour le premier caractère dans une chaîne de texte.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Un nombre entier (comme 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>UNICODE(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Texte</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>UNICODE("KDE") renvoie 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="UNICHAR"
>UNICHAR</link
>&nbsp;</member>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UPPER">
<title
>UPPER</title>
<para
>La fonction UPPER() convertit une chaîne en majuscules.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>UPPER(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Chaîne source</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>UPPER("HELLO") renvoie "HELLO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>UPPER("HELLO") renvoie "HELLO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VALUE">
<title
>VALUE</title>
<para
>Convertit une chaîne de texte qui représente une valeur en la valeur réelle. </para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Double</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>

<listitem
><para
>VALUE(texte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Texte</seg
><seg
>Texte</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>VALUE("14,03") renvoie 14,03</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Trigonometric">
<title
>Trigonométrie</title>

<sect3 id="ACOS">
<title
>ACOS</title>
<para
>La fonction ACOS() renvoie l'arc cosinus en radians et la valeur est mathématiquement définie pour se situer entre 0 et PI (inclus).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ACOS(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ACOS(0,8) vaut 0,643 501 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ACOS(0) vaut 1,570 796 33</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOSH">
<title
>ACOSH</title>
<para
>La fonction ACOS() calcule le cosinus hyperbolique inverse de x, qui est la valeur dont le cosinus hyperbolique est x. Si x est plus petit que 1, acosh() renvoie NaN (not-a-number) et une erreur.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ACOSH(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ACOSH(5) vaut 2,292 431 67</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ACOSH(0) vaut "NaN"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COSH"
>COSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOT">
<title
>ACOT</title>
<para
>La fonction ACOT() renvoie l'arc cotangente d'un nombre.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ACOT(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ACOT(0) vaut 1,570 796 33</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASIN">
<title
>ASIN</title>
<para
>La fonction ASIN() renvoie l'arc sinus en radians et la valeur est mathématiquement définie pour se situer entre -PI/2 et PI/2 (inclus).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ASIN(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ASIN(0,8) vaut 0,927 295 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ASIN(0) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASINH">
<title
>ASINH</title>
<para
>La fonction ASINH() calcule le sinus hyperbolique inverse de x, qui est la valeur dont le sinus hyperbolique est x.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ASINH(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ASINH(0,8) vaut 0,732 668 26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ASINH(0) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SINH"
>SINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN">
<title
>ATAN</title>
<para
>La fonction ATAN() renvoie l'arc tangente en radians et la valeur est mathématiquement définie pour se situer entre -PI/2 et PI/2 (inclus).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ATAN(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ATAN(0,8) vaut 0,674 740 94</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ATAN(0) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="TAN"
>TAN</link
>&nbsp;</member>
<member
><link linkend="ATAN2"
>ATAN2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN2">
<title
>ATAN2</title>
<para
>Cette fonction calcule l'arc-tangente de deux variables x et y. Elle est semblable au calcul de l'arc-tangente de y / x, sauf que les signes des deux arguments sont utilisés pour déterminer le quadrant du résultat.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ATAN2(valeur;valeur)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ATAN2(0,5;1) vaut 1,107 149</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ATAN2(-0,5;2,0) vaut 1,815 775</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATANH">
<title
>ATANH</title>
<para
>La fonction ATANH() calcule la tangente hyperbolique inverse de x, qui est la valeur dont la tangente hyperbolique est x. Si la valeur absolue de x est plus grande que 1, ATANH() renvoie NaN (not-a-number).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>ATANH(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ATANH(0,8) vaut 1,098 612 29</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>ATANH(0) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="TANH"
>TANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COS">
<title
>COS</title>
<para
>La fonction COS() renvoie le cosinus de x, avec x en radians.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COS(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COS(0) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COS(PI()/2) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
<member
><link linkend="ACOS"
>ACOS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COSH">
<title
>COSH</title>
<para
>La fonction COSH() renvoie le cosinus hyperbolique de x, qui est défini mathématiquement comme (exp(x) + exp(-x)) / 2.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>COSH(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COSH(0,8) vaut 1,337 434 95</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>COSH(0) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ACOSH"
>ACOSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSC">
<title
>CSC</title>
<para
>La fonction CSC() renvoie la cosécante de x, avec x en radians.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CSC(réel)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CSC(PI()/2) vaut 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSCH">
<title
>CSCH</title>
<para
>La fonction CSCH() renvoie la cosécante hyperbolique de x, avec x en radians.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>CSCH(réel)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>CSCH(PI()/2) vaut 0.434537208...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEGREES">
<title
>DEGREES</title>
<para
>Cette fonction transforme un angle en radians en angle en degrés.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>DEGREES(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEGREES(0,78) vaut 44,69</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>DEGREES(1) vaut 57,29</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="RADIANS"
>RADIANS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PI">
<title
>PI</title>
<para
>La fonction PI() renvoie la valeur de PI.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>PI()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>PI() vaut 3,141 592 65...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RADIANS">
<title
>RADIANS</title>
<para
>Cette fonction transforme un angle en degrés en un angle en radians.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>RADIANS(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (degrés)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RADIANS(75) vaut 1,308</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>RADIANS(90) vaut 1,570 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="DEGREES"
>DEGREES</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEC">
<title
>SEC</title>
<para
>La fonction SEC() renvoie la sécante de x, avec x en radians.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SEC(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SEC(0) vaut 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECH">
<title
>SECH</title>
<para
>La fonction SECH() renvoie la sécante hyperbolique de x, avec x en radians.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SECH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SECH(0) vaut 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIN">
<title
>SIN</title>
<para
>La fonction SIN() renvoie le sinus de x, avec x en radians.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SIN(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SIN(0) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SIN(PI()/2) vaut 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
<member
><link linkend="ASIN"
>ASIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SINH">
<title
>SINH</title>
<para
>La fonction SINH() renvoie le sinus hyperbolique de x, qui est défini mathématiquement comme (exp(x) - exp(-x)) / 2.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>SINH(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SINH(0,8) vaut 0,888 105 98</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>SINH(0) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ASINH"
>ASINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TAN">
<title
>TAN</title>
<para
>La fonction TAN() renvoie la tangente de x, avec x en radians.</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TAN(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>

<listitem
><para
>TAN(0,7) vaut 0,842 288 38</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TAN(0) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TANH">
<title
>TANH</title>
<para
>La fonction TANH() renvoie la tangente hyperbolique de x, qui est définie mathématiquement comme sinh(x) / cosh(x).</para>
<para
><segmentedlist
><segtitle
>Type de retour</segtitle>
<seglistitem
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntaxe</term>
<listitem
><para
>TANH(Flottant)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Paramètres</term>
<listitem
><para
><segmentedlist
><segtitle
>Commentaire</segtitle
><segtitle
>Type</segtitle>
<seglistitem
><seg
>Angle (radians)</seg
><seg
>Une valeur à virgule flottante (comme 1,3 ou 0,343 ou 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TANH(0,8) vaut 0,664 036 77</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemples</term>
<listitem
><para
>TANH(0) vaut 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Fonctions en relation</term>
<listitem
><simplelist>
<member
><link linkend="ATANH"
>ATANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2>
</sect1>
</chapter>
 


<chapter id="functions">
<!--
*************************** DO NOT EDIT MANUALLY ************************

This file is autogenerated from *.xml files in calligra/tables/functions/
all changes will be overwritten on the next script run
-->
<title
>Funktionen</title>
<para
>&sheets; enthält eine große Zahl von eingebauten mathematischen und anderen Funktionen, die als Formel in einer Zelle verwendet werden können.</para>
<sect1 id="supported-functions">
<title
>Unterstützte Funktionen</title>
<para
>In diesem Kapitel finden Sie eine kurze Übersicht aller Funktionen in folgenden Gruppen:</para>
<simplelist>
<member
><link linkend="Bit-Operations"
>Bit-Operationen</link
>&nbsp;</member>
<member
><link linkend="Conversion"
>Konvertierung</link
>&nbsp;</member>
<member
><link linkend="Database"
>Datenbank</link
>&nbsp;</member>
<member
><link linkend="Date---Time"
>Datum &amp; Zeit</link
>&nbsp;</member>
<member
><link linkend="Engineering"
>Ingenieurwesen</link
>&nbsp;</member>
<member
><link linkend="Financial"
>Finanzen</link
>&nbsp;</member>
<member
><link linkend="Information"
>Information</link
>&nbsp;</member>
<member
><link linkend="Logical"
>Logik</link
>&nbsp;</member>
<member
><link linkend="Lookup---Reference"
>Nachschlagen &amp; Referenz</link
>&nbsp;</member>
<member
><link linkend="Math"
>Mathematik</link
>&nbsp;</member>
<member
><link linkend="Statistical"
>Statistik</link
>&nbsp;</member>
<member
><link linkend="Text"
>Text</link
>&nbsp;</member>
<member
><link linkend="Trigonometric"
>Trigonometrie</link
>&nbsp;</member>
</simplelist>
<!--
<para
>OpenFormula groups (small, medium, and large, more)? Which are supported by Sheets?</para>
<para
>Something about interoperablity / spread sheet exchange / known issues, incompabitilites, errors?</para>
-->
<sect2 id="Bit-Operations">
<title
>Bit-Operationen</title>

<sect3 id="BITAND">
<title
>BITAND</title>
<para
>Die Funktion BITAND() führt eine bitweise AND-Operation für die beiden ganzzahligen Parameter durch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BITAND(Wert;Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erste Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Zweite Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BITAND(12;10) ergibt 8 (weil dezimal 12 binär 1100 und dezimal 10 binär 1010 entspricht, die AND-Operation von 1100 und 1010 dann 1000 ergibt und dies wiederum der Ganzzahl 8 entspricht).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITLSHIFT">
<title
>BITLSHIFT</title>
<para
>Die Funktion BITLSHIFT() führt eine bitweise Linksverschiebung des ersten Parameters durch. Die Anzahl an Bits, um die verschoben werden soll, wird durch den zweiten Parameter angegeben. Beachten Sie, dass ein negativer Wert für die Linksverschiebung zu einer Rechtsverschiebung führt. </para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BITLSHIFT(Wert; Verschiebung)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erste Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl, um die nach links verschoben werden soll</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITOR">
<title
>BITOR</title>
<para
>Die Funktion BITOR() führt eine bitweise OR-Operation für die beiden ganzzahligen Parameter durch. </para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BITOR(Wert;Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erste Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Zweite Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BITOR(12;10) ergibt 14 (weil dezimal 12 binär 1100 und dezimal 10 binär 1010 entspricht, die OR-Operation von 1100 und 1010 dann 1110 ergibt und dies wiederum der Ganzzahl 14 entspricht).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITRSHIFT">
<title
>BITRSHIFT</title>
<para
>Die Funktion BITRSHIFT() führt eine bitweise Rechtsverschiebung des ersten Parameters durch. Die Anzahl an Bits, um die verschoben werden soll, wird durch den zweiten Parameter angegeben. Beachten Sie, dass ein negativer Wert für die Linksverschiebung zu einer Linksverschiebung führt. </para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BITRSHIFT(Wert; Verschiebung)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erste Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl, um die nach rechts verschoben werden soll</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITXOR">
<title
>BITXOR</title>
<para
>Die Funktion BITXOR() führt eine bitweise XOR-Operation für die beiden ganzzahligen Parameter durch. </para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BITXOR(Wert; Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erste Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Zweite Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BITXOR(12;10) ergibt 6 (weil dezimal 12 binär 1100 und dezimal 10 binär 1010 entspricht, die XOR-Operation von 1100 und 1010 dann 0110 ergibt und dies wiederum der Ganzzahl 6 entspricht).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Conversion">
<title
>Konvertierung</title>

<sect3 id="ARABIC">
<title
>ARABIC</title>
<para
>Die Funktion ARABIC() konvertiert eine römische Zahl in eine normale (arabische) Zahl.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ARABIC(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahlzeichen</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ARABIC("IV") ergibt 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ARABIC("XCIX") ergibt 99</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ROMAN"
>ROMAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASCIITOCHAR">
<title
>ASCIITOCHAR</title>
<para
>Die Funktion ASCIITOCHAR() gibt für jeden gegebenen ASCII-Code das entsprechende Zeichen zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ASCIITOCHAR(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Die zu konvertierenden ASCII-Werte</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ASCIITOCHAR(118) ergibt „v“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ASCIITOCHAR(75; 68; 69) ergibt „KDE“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2INT">
<title
>BOOL2INT</title>
<para
>Die Funktion BOOL2INT ergibt einen ganzzahligen Wert für einen gegebenen booleschen Wert. Mit dieser Funktion kann man einen booleschen Wert da verwenden, wo ein ganzzahliger Wert erwartet wird.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BOOL2INT(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zu konvertierender boolescher Wert</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BOOL2INT(Wahr) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BOOL2INT(Falsch) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="INT2BOOL"
>INT2BOOL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2STRING">
<title
>BOOL2STRING</title>
<para
>Die Funktion BOOL2STRING ergibt eine Zeichenfolge, die dem booleschen Wert entspricht. Diese Funktion dient dazu, dass man einen booleschen Wert in Funktionen verwenden kann, in denen eine Zeichenfolge erwartet wird.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BOOL2STRING(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zu konvertierender boolescher Wert</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BOOL2STRING(Wahr) ergibt „Wahr“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BOOL2STRING(Falsch) ergibt „Falsch“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>upper(BOOL2STRING(find("nan";"Banane"))) ergibt Wahr</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARX">
<title
>CARX</title>
<para
>Die Funktion CARX() gibt die X Position zu der Position eines Punktes in einem polaren Koordinatensystem zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CARX(Radius;Winkel)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Radius</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CARX(12;1,5707) ergibt 0,00115592</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CARX(12;0) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARY">
<title
>CARY</title>
<para
>Die Funktion CARY() gibt die Y Position zu der Position eines Punktes in einem polaren Koordinatensystem zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CARY(Radius;Winkel)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Radius</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CARY(12;1,5707) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CARY(12;0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHARTOASCII">
<title
>CHARTOASCII</title>
<para
>Die Funktion CHARTOASCII() gibt den ASCII-Code des gegebenen Zeichens zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CHARTOASCII(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Eine zu konvertierende Zeichenfolge bestehend aus einem Buchstaben</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CHARTOASCII("v") ergibt 118</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CHARTOASCII(r) ist ein Fehler. Das Zeichen muss von Anführungszeichen umgeben sein.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DECSEX">
<title
>DECSEX</title>
<para
>Die Funktion DECSEX() konvertiert einen Double-Wert in einen Zeitwert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DECSEX(Double)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DECSEX(1,6668) ergibt 1:40 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DECSEX(7,8) ergibt 7:47</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT2BOOL">
<title
>INT2BOOL</title>
<para
>Die Funktion INT2BOOL ergibt einen booleschen Wert für einen gegebenen ganzzahligen Wert. Mit dieser Funktion kann man einen ganzzahligen Wert da verwenden, wo ein boolescher Wert erwartet wird. Bei einer 1 wird Wahr zurückgegeben, bei jedem anderen Wert wird Falsch zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>INT2BOOL(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zu konvertierender ganzzahliger Wert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INT2BOOL(1) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INT2BOOL(0) ergibt Falsch</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>OR(INT2BOOL(1); Falsch) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BOOL2INT"
>BOOL2INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NUM2STRING">
<title
>NUM2STRING</title>
<para
>Die Funktion NUM2STRING() ergibt eine Zeichenfolge für eine gegebene Zahl. Beachten Sie, dass Calligra Sheets falls nötig automatisch Zahlen in Zeichenfolgen konvertieren kann. Von daher sollte diese Funktion kaum benötigt werden.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NUM2STRING(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>In Zeichenfolge zu konvertierende Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NUM2STRING(10) ergibt „10“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NUM2STRING(2,05) ergibt „2,05“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>=find("101";NUM2STRING(A1)) (A1 = 2,010102) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="STRING"
>STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLA">
<title
>POLA</title>
<para
>Die Funktion POLA() gibt den Winkel (als Radiant) zu der Position eines Punktes in einem kartesischen Koordinatensystem zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>POLA(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert in X</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Wert in Y</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POLA(12;12) ergibt 0,78539816</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POLA(12;0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POLA(0;12) ergibt 1,5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLR">
<title
>POLR</title>
<para
>Die Funktion POLR() gibt den Radius passend zu der Position eines Punktes in einem kartesischen Koordinatensystem zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>POLR(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert in X</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Wert in Y</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POLR(12;12) ergibt 16,9705</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POLR(12;0) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROMAN">
<title
>ROMAN</title>
<para
>Die Funktion ROMAN() gibt eine Zahl im Römischen Format zurück. Nur positiv ganze Zahlen können umgewandelt werden. Das optionale Format-Argument legt den Vereinfachungsgrad fest. Standard ist 0.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ROMAN(Zahl)</para
></listitem>

</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Format</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROMAN(99) ergibt „XCIX“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROMAN(-55) ergibt „Err“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ARABIC"
>ARABIC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEXDEC">
<title
>SEXDEC</title>
<para
>Die Funktion SEXDEC() gibt den Wert als Dezimalzahl zurück. Sie können auch ein Zeitwert angeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SEXDEC(Zeitwert) oder SEXDEC(Stunden;Minuten;Sekunden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Stunden</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minuten</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Sekunden</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SEXDEC(1;5;7) ergibt 1,0852778 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DECSEX("8:05") ergibt 8,08333333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STRING">
<title
>STRING</title>
<para
>Die Funktion STRING() ergibt eine Zeichenfolge für eine gegebene Zahl. Sie ist mit der NUM2STRING-Funktion identisch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>In Zeichenfolge zu konvertierende Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="NUM2STRING"
>NUM2STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Database">
<title
>Datenbank</title>

<sect3 id="DAVERAGE">
<title
>DAVERAGE</title>
<para
>Berechnet den Durchschnitt in einer Spalte einer Datenbank, eingeschränkt durch ein Satz von Regeln für Werte die Zahlen sind.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DAVERAGE(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAVERAGE(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNT">
<title
>DCOUNT</title>
<para
>Zählt die Zellen, die numerische Werte in der Spalte einer Datenbank enthalten und die einen angegebenen Satz von Bedingungen erfüllen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DCOUNT(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DCOUNT(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNTA"
>DCOUNTA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNTA">
<title
>DCOUNTA</title>
<para
>Zählt die Zellen, die numerische oder alphanumerische Werte in der Spalte einer Datenbank enthalten. Die zu zählenden Zellen werden durch einen Satz von Bedingungen eingeschränkt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DCOUNTA(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DCOUNTA(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNT"
>DCOUNT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DGET">
<title
>DGET</title>
<para
>Gibt den Wert einer Datenbankspalte zurück, der einen Satz von Bedingungen erfüllt. Die Funktion gibt einen Fehler zurück, wenn kein Wert oder mehr als ein Wert die Bedingungen erfüllt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DGET(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DGET(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMAX">
<title
>DMAX</title>
<para
>Gibt die größte Zahl der Spalte einer Datenbank zurück, eingeschränkt durch einen Satz von Bedingungen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DMAX(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DMAX(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DMIN"
>DMIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMIN">
<title
>DMIN</title>
<para
>Gibt den kleinsten Wert der Spalte einer Datenbank zurück, eingeschränkt durch einen Satz von Bedingungen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DMIN(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DMIN(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DMAX"
>DMAX</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DPRODUCT">
<title
>DPRODUCT</title>
<para
>Gibt das Produkt aller numerischen Werte der Spalte einer Datenbank zurück, welche einen Satz von Bedingungen erfüllen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DPRODUCT(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DPRODUCT(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEV">
<title
>DSTDEV</title>
<para
>Gibt die geschätzte Standardabweichung einer Grundgesamtheit zurück. Basierend auf einer Stichprobe aus allen numerischen Werten der Spalte einer Datenbank, welche einen Satz von Bedingungen erfüllt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DSTDEV(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DSTDEV(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEVP"
>DSTDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEVP">
<title
>DSTDEVP</title>
<para
>Gibt die Standardabweichung einer Grundgesamtheit zurück. Basierend auf allen numerischen Werten einer Datenbankspalte, die einen Satz von Bedingungen erfüllen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DSTDEVP(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DSTDEVP(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEV"
>DSTDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSUM">
<title
>DSUM</title>
<para
>Summiert alle Zahlen einer Spalte einer Datenbank, eingeschränkt durch einen Satz von Bedingungen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DSUM(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DSUM(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVAR">
<title
>DVAR</title>
<para
>Gibt die geschätzte Streuung einer Grundgesamtheit zurück. Basierend auf einer Stichprobe bestehend aus allen numerischen Werten der Spalte einer Datenbank, eingeschränkt durch einen Satz von Bedingungen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DVAR(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DVAR(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DVARP"
>DVARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVARP">
<title
>DVARP</title>
<para
>Gibt die Streuung einer Grundgesamtheit zurück. Basieren auf allen numerischen Werten der Spalte einer Datenbank, eingeschränkt durch einen Satz von Bedingungen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DVARP(Datenbank; "Spaltenüberschrift"; Bedingungen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Zellbereich, welcher die Datenbank darstellt.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Eine Zeichenfolge, welche die Spalte in der Datenbank auswählt.</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ein Bereich, der die Bedingungen enthält.</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DVARP(A1:C5; "Gehalt"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DVAR"
>DVAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GETPIVOTDATA">
<title
>GETPIVOTDATA</title>
<para
>Holt die zusammengefassten Daten von einer Kreuztabelle.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>GETPIVOTDATA(Datenbank; "Verkäufe")</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Bereich der die Kreuztabelle enthält</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Der Name des Feldes von welchem Sie die zusammengefassten Daten möchten</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Date---Time">
<title
>Datum &amp; Zeit</title>

<sect3 id="CURRENTDATE">
<title
>CURRENTDATE</title>
<para
>Die Funktion CURRENTDATE() gibt das aktuelle Datum formatiert mit lokalen Parametern zurück. Sie ist äquivalent mit der Funktion TODAY.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CURRENTDATE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CURRENTDATE() ergibt (bzw. ergab) „Samstag, 15. Juli 2002“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTDATETIME">
<title
>CURRENTDATETIME</title>
<para
>Die Funktion CURRENTDATETIME() gibt das aktuelle Datum und die Zeit formatiert mit lokalen Parametern zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CURRENTDATETIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CURRENTDATETIME() ergibt „Samstag, 15. Juli 2002 19:12:01“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTTIME">
<title
>CURRENTTIME</title>
<para
>Die Funktion CURRENTTIME() gibt die aktuelle Zeit formatiert mit lokalen Parametern zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CURRENTTIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CURRENTTIME() ergibt „19:12:01“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE">
<title
>DATE</title>
<para
>Die Funktion DATE() gibt das Datum entsprechend den Landeseinstellungen formatiert zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DATE(Jahr;Monat;Tag)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Jahr</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Monat</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Tag</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DATE(2000;5;5) ergibt Freitag, 5. Mai 2000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE2UNIX">
<title
>DATE2UNIX</title>
<para
>Die Funktion DATE2UNIX() konvertiert einen Datums- und Zeitwert in die Unix-Zeit.</para>
<para
>Die Unix-Zeit ist die Anzahl an Sekunden nach dem 1. Januar 1970, 00:00 Uhr UTC.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DATE2UNIX(Datum)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DATE2UNIX(„01.01.2000“) ergibt 946,684,800</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEDIF">
<title
>DATEDIF</title>
<para
>Die Funktion DATEDIF() ergibt die Differenz zwischen zwei Datumsangaben.</para>
<para
>Das Intervall muss eines der folgenden sein: „m“: Monate; „d“: Tage; „y“: komplette Jahre; „ym“: Monate ohne Jahre; „yd“: Tage ohne Jahre; „md“: Tage ohne Monate und Jahre</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DATEDIF(Erstes Datum; Zweites Datum; Intervall)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erstes Datum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zweites Datum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Intervall</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DATEDIF(A1;A2;"d") mit A1 "1. Januar 1995" und A2 "15. Juni 1999" ergibt als Anzahl an Tagen 1626.</para
></listitem>
</varlistentry>

<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DATEDIF(A1;A2;"d") mit A1 "1. Januar 1995" und A2 "15. Juni 1999" ergibt eine Anzahl von 53 Wochen</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEVALUE">
<title
>DATEVALUE</title>
<para
>Die Funktion DATEVALUE gibt eine Zahl zurück, welche den Tag repräsentiert. Das heißt, die Anzahl der Tage seit dem 31. Dezember 1899.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DATEVALUE(Datum)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DATEVALUE("2/22/2002") ergibt 37309</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="TIMEVALUE"
>TIMEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAY">
<title
>DAY</title>
<para
>Die Funktion DAY gibt den Tag eines Datum zurück. Wird kein Parameter angegeben, gibt die Funktion den aktuellen Tag zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DAY(Datum)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAY("2/22/2002") ergibt 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAY(2323,1285) ergibt 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYNAME">
<title
>DAYNAME</title>
<para
>Die Funktion DAYNAME() gibt den Namen eines Wochentags (1..7) zurück. In einigen Ländern ist der erste Tag der Woche Montag, in anderen ist der erste Tag der Woche Sonntag.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DAYNAME(Wochentag)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Nummer des Wochentags (1..7)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAYNAME(1) ergibt Montag (wenn die Woche nach den Landeseinstellungen mit Montag beginnt)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="WEEKDAY"
>WEEKDAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYOFYEAR">
<title
>DAYOFYEAR</title>
<para
>Die Funktion DAYOFYEAR() gibt die Nummer des Tages im Jahr zurück (1-365).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DAYOFYEAR(Jahr;Monat;Tag)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Jahr</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Monat</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Tag</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAYOFYEAR(2000;12;1) ergibt 336</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAYOFYEAR(2000;2;29) ergibt 60</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS">
<title
>DAYS</title>
<para
>Die Funktion DAYS() ergibt die Differenz zwischen zwei Daten in Tagen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DAYS(datum1; datum2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erster (früherer) Datumswert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zweiter Datumswert</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAYS("22.02.2002"; "26.02.2002") ergibt 4</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS360">
<title
>DAYS360</title>
<para
>Die Funktion DAYS360() gibt die Anzahl der Tage von Datum1 bis Datum2 zurück. Dabei wird ein 360-Tage-Kalender verwendet, in dem alle Monate mit 30 Tagen gerechnet werden. Wenn die Methode „Falsch“ ist (Standard) dann wird die amerikanische Berechnungsmethode verwendet, ist Methode „Wahr“ wird die europäische Berechnungsmethode verwendet.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DAYS360(Datum1; Datum2; Methode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum1</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Datum2</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Methode</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAYS360("2/22/2002"; "4/21/2002"; Falsch) ergibt 59</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DAYS"
>DAYS</link
>&nbsp;</member>
<member
><link linkend="MONTHS"
>MONTHS</link
>&nbsp;</member>
<member
><link linkend="WEEKS"
>WEEKS</link
>&nbsp;</member>
<member
><link linkend="YEARS"
>YEARS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINMONTH">
<title
>DAYSINMONTH</title>
<para
>Die Funktion DAYSINMONTH() gibt die Anzahl der Tage in dem angegebenen Monat eines Jahres zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DAYSINMONTH(Jahr;Monat)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Jahr</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Monat</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAYSINMONTH(2000;2) ergibt 29</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINYEAR">
<title
>DAYSINYEAR</title>
<para
>Die Funktion DAYSINYEAR() gibt die Anzahl der Tage im angegebenen Jahr zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DAYSINYEAR(jahr)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Jahr</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DAYSINYEAR(2000) ergibt 366</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EASTERSUNDAY">
<title
>EASTERSUNDAY</title>
<para
>Die Funktion EASTERSUNDAY() gibt das Datum zurück, welches Ostersonntag in dem angegebenen Jahr entspricht.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EASTERSUNDAY(Jahr)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Jahr</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EASTERSUNDAY(2003) ergibt „20. April 2003“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EDATE">
<title
>EDATE</title>
<para
>Die Funktion EDATE gibt das Datum zurück, welches entsteht wenn man von einem gegebenen Datum eine bestimmte Anzahl Monate addiert oder subtrahiert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EDATE(Datum; Monate)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Monate</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EDATE("2/22/2002"; 3) ergibt "5/22/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EDATE("3/31/2002"; -1) ergibt "2/28/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DATE"
>DATE</link
>&nbsp;</member>
<member
><link linkend="EOMONTH"
>EOMONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EOMONTH">
<title
>EOMONTH</title>
<para
>Die Funktion EOMONTH gibt den letzten Tag in einem Monat zurück. Dieser wird festgelegt durch ein Datum und einer Anzahl von Monaten welche zu diesem Datum addiert oder subtrahiert werden.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EOMONTH(Datum; Monate)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Monate</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EOMONTH("2/22/2002"; 3) ergibt "5/31/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EOMONTH("3/12/2002"; -1) ergibt "2/28/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EOMONTH("3/12/2002"; 0) ergibt "3/31/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="EDATE"
>EDATE</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOUR">
<title
>HOUR</title>
<para
>Die Funktion HOUR gibt die Stunde der angegebenen Zeit zurück. Wird kein Parameter angegeben, liefert die Funktion die aktuelle Stunde zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>HOUR(Zeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeit</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HOUR("22:10:12") ergibt 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HOUR(0,1285) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOURS">
<title
>HOURS</title>
<para
>Die Funktion HOURS() gibt die Anzahl der Stunden eines Zeitausdrucks zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>HOURS(zeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeit</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HOURS("10:5:2") ergibt 10</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLEAPYEAR">
<title
>ISLEAPYEAR</title>
<para
>Die Funktion ISLEAPYEAR() gibt den Wert „Wahr“ zurück, wenn das angegebene Jahr ein Schaltjahr ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISLEAPYEAR(jahr)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Jahr</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISLEAPYEAR(2000) ergibt Wahr</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISOWEEKNUM">
<title
>ISOWEEKNUM</title>
<para
>Die Funktion ISOWEEKNUM() gibt die Wochenzahl zurück, in welche das angegebene Datum fällt. Die Funktion richtet sich nach dem ISO8601 Standard. Das bedeutet, dass die Woche immer mit dem Montag beginnt, und die erste Woche im Jahr die Woche ist, welche den ersten Donnerstag enthält.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISOWEEKNUM(Datum)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISOWEEKNUM(A1) ergibt 51 wenn A1 „21st of Dec“ enthält.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="WEEKNUM"
>WEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTE">
<title
>MINUTE</title>
<para
>Die Funktion MINUTE gibt die Minuten einer Zeit zurück. Wird kein Parameter angegeben gibt die Funktion die aktuelle Minute zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MINUTE(Zeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeit</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MINUTE("22:10:12") ergibt 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MINUTE(0,1234) ergibt 57</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTES">
<title
>MINUTES</title>
<para
>Die Funktion MINUTES() gibt die Anzahl der Minuten in einem Zeitausdruck zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MINUTES(zeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeit</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MINUTES("10:5:2") ergibt 5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTH">
<title
>MONTH</title>
<para
>Die Funktion MONTH gibt den Monat eines Datums zurück. Wird kein Parameter angegeben gibt die Funktion den aktuellen Monat zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MONTH(Datum)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MONTH("2/22/2002") ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MONTH(2323,1285) ergibt 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHNAME">
<title
>MONTHNAME</title>
<para
>Die Funktion MONTHNAME() gibt den Namen des Monats zurück (1..12).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MONTHNAME(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Nummer des Monats (1..12)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MONTHNAME(5) ergibt Mai</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHS">
<title
>MONTHS</title>
<para
>Die Funktion MONTHS() ergibt die Differenz in Monaten zwischen zwei Daten. Der dritte Parameter gibt den Berechnungsmodus an: Wenn der Modus 0 ist, gibt die Funktion die maximal mögliche Anzahl an Monaten zwischen den gegebenen Tagen zurück. Wenn der Modus 1 ist, wird die Anzahl an kompletten Kalendermonaten zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MONTHS(datum1; datum2; modus)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erster (früherer) Datumswert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zweiter Datumswert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Berechnungsmodus</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MONTHS("18.01.2002"; "26.02.2002"; 0) ergibt 1, weil 1 Monat und 8 Tage zwischen den beiden Daten liegen.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MONTHS("18.01.2002"; "26.02.2002"; 1) ergibt 0, weil kein ganzer Kalendermonat zwischen den beiden Daten liegt.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NETWORKDAY">
<title
>NETWORKDAY</title>
<para
>Die Funktion NETWORKDAY() ergibt die Anzahl an Arbeitstagen zwischen dem Start- und dem Enddatum.</para>
<para
>Urlaub muss wie folgt angegeben werden: Anzahl hinzuzufügender Tage, ein einzelnes Datum oder ein Datumsbereich.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NETWORKDAY(Startdatum; Enddatum; Urlaub)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Startdatum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Enddatum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Urlaub</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NETWORKDAY("01.01.2001";"08.01.2001") ergibt 5 Arbeitstage</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NETWORKDAY("01.01.2001";"08.01.2001";2) ergibt 3 Arbeitstage</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOW">
<title
>NOW</title>
<para
>Die Funktion NOW() liefert das aktuelle Datum mit lokalen Parameter formatiert zurück. Sie ist identisch mit der Funktion CURRENTDATETIME und wird aus Kompatibilitätsgründen mit anderen Anwendungen angeboten.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NOW()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NOW() ergibt z. B. „Samstag, 13. April 2002 19:12:01“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECOND">
<title
>SECOND</title>
<para
>Die Funktion SECOND gibt die Sekunden einer Zeit zurück. Wird kein Parameter angegeben gibt die Funktion die aktuellen Sekunden zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SECOND(Zeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeit</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SECOND("22:10:12") ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SECOND(0,1234) ergibt 42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECONDS">
<title
>SECONDS</title>
<para
>Die Funktion SECONDS() gibt die Anzahl der Sekunden in einem angegebenen Zeitausdruck zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SECONDS(zeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeit</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SECONDS("10:5:2") ergibt 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIME">
<title
>TIME</title>
<para
>Die Funktion TIME() gibt die Zeit entsprechend den Landeseinstellungen formatiert zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TIME(Stunden;Minuten;Sekunden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Stunden</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minuten</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Sekunden</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TIME(10;2;2) ergibt 10:02:02</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TIME(10;70;0) ergibt 11:10:00</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TIME(10;-40;0) ergibt 9:20:00</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIMEVALUE">
<title
>TIMEVALUE</title>
<para
>Die Funktion TIMEVALUE() gibt eine Zahl (zwischen 0 und 1) zurück, welche die Zeit des Tages repräsentiert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TIMEVALUE(Zeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeit</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TIMEVALUE("10:05:02") ergibt 0,42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DATEVALUE"
>DATEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TODAY">
<title
>TODAY</title>
<para
>Die Funktion TODAY() liefert das aktuelle Datum zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TODAY()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TODAY() ergibt „Samstag, 13. April 2002“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="NOW"
>NOW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNIX2DATE">
<title
>UNIX2DATE</title>
<para
>Die Funktion UNIX2DATE() konvertiert die Unix-Zeit in einen Datums- und Zeitwert.</para>
<para
>Die Unix-Zeit ist die Anzahl an Sekunden nach dem 1. Januar 1970, 00:00 Uhr UTC.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>UNIX2DATE(Unix-Zeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Unix-Zeit</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>UNIX2DATE(0) ergibt 01.01.1970</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKDAY">
<title
>WEEKDAY</title>
<para
>Die WEEKDAY() Funktion gibt den Wochentag für das angegebene Datum zurück. Wenn die Berechnungsmethode 1 ist (Standard), gibt die Funktion 1 für Sonntag, 2 für Montag, ... usw. zurück. Bei Berechnungsmethode 2 ist Montag 1, Dienstag 2, ... usw. Und bei Berechnungsmethode 3 ist Montag 0, Dienstag 1, ... usw.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>WEEKDAY(Datum; Berechnungsmethode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Berechnungsmethode (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>WEEKDAY("2002-02-22"; 2) ergibt 5 für Freitag</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DAYNAME"
>DAYNAME</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKNUM">
<title
>WEEKNUM</title>
<para
>Die Funktion WEEKNUM() gibt die Nicht-ISO-Wochenzahl zurück, in welche das angegebene Datum fällt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>WEEKNUM(Datum; Berechnungsmethode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Berechnungsmethode (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>WEEKNUM(A1; 1) ergibt 11, wenn A1 der „9. März 2008“ ist. Die Wochenzahl wird davon ausgehend berechnet, dass die Woche an einem Sonntag (1) beginnt. Dies ist Standard, wenn keine Methode übergeben wird. </para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>WEEKNUM(A1; 2) ergibt 10, wenn A1 der „9. März 2008“ ist. Die Wochenzahl wird davon ausgehend berechnet, dass die Woche an einem Montag (2) beginnt.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ISOWEEKNUM"
>ISOWEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKS">
<title
>WEEKS</title>
<para
>Die Funktion WEEKS() ergibt die Differenz in Wochen zwischen zwei Daten. Der dritte Parameter gibt den Berechnungsmodus an: Wenn der Modus 0 ist, gibt die Funktion die maximal mögliche Anzahl an Wochen zwischen den gegebenen Daten zurück. Wenn der Modus 1 ist, wird die Anzahl an kompletten Kalenderwochen zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>WEEKS(datum1; datum2; modus)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erster (früherer) Datumswert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zweiter Datumswert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Berechnungsmodus</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>WEEKS("18.02.2002"; "26.02.2002"; 0) ergibt 1, weil 1 Woche und 1 Tag zwischen den beiden Daten liegen.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>WEEKS("19.02.2002"; "26.02.2002"; 0) ergibt 0, weil keine komplette Woche zwischen den beiden Daten liegt. Eine Woche beginnt, abhängig von den Landeseinstellungen, am Montag oder am Sonntag.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKSINYEAR">
<title
>WEEKSINYEAR</title>
<para
>Die Funktion WEEKSINYEAR() gibt die Anzahl der Wochen eines angegebenen Jahres zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>WEEKSINYEAR(jahr)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Jahr</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>WEEKSINYEAR(2000) ergibt 52</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WORKDAY">
<title
>WORKDAY</title>
<para
>Die Funktion WORKDAY() ergibt den ersten Arbeitstag ausgehend vom Startdatum.</para>
<para
>Urlaub muss wie folgt angegeben werden: Anzahl hinzuzufügender Tage, ein einzelnes Datum oder ein Datumsbereich.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>WORKDAY(Startdatum, Tage, Urlaub)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Startdatum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Arbeitstage</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Urlaub</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>Mit B9 „01.01.2001“, D3 „03.01.2001“ und D4 „04.01.2001“ ergibt WORKDAY(B9;2;D3:D4) als Arbeitstag „05.01.2001“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEAR">
<title
>YEAR</title>
<para
>Die Funktion YEAR gibt das Jahr eines Datums zurück. Wird kein Datum angegeben wird das aktuelle Jahr zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>YEAR(Datum)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datum</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>YEAR("2/22/2002") ergibt 2002</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>YEAR(2323,1285) gibt 1906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARFRAC">
<title
>YEARFRAC</title>
<para
>Die Funktion YEARFRAC() ergibt die Anzahl an vollen Tagen zwischen dem Start- und dem Enddatum, abhängig von der Basis.</para>
<para
>Die Basis muss eine der folgenden sein: 0 = 30/360 US, 1 = Tatsächlich/tatsächlich, 2 = Tatsächlich/360, 3 = Tatsächlich/365, 4 = 30/360 europäisch</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>YEARFRAC(Startdatum; Enddatum; Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erstes Datum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zweites Datum</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Intervall</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARS">
<title
>YEARS</title>
<para
>Die Funktion YEARS() ergibt die Differenz in Jahren zwischen zwei Daten. Der dritte Parameter gibt den Berechnungsmodus an: Wenn der Modus 0 ist, gibt die Funktion die maximal mögliche Anzahl an Jahren zwischen den gegebenen Tagen zurück. Wenn der Modus 1 ist, wird die Anzahl der kompletten Kalenderjahre zurückgegeben. Diese beginnen am 1. Januar und enden am 31. Dezember.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>YEARS(datum1; datum2; modus)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erster (früherer) Datumswert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zweiter Datumswert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Berechnungsmodus</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>YEARS("19.02.2002"; "26.02.2002"; 0) ergibt 1, weil 1 Jahr und 7 Tage zwischen den beiden Daten liegen.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>YEARS("19.02.2002"; "26.02.2002"; 1) ergibt 0, weil kein komplettes Kalenderjahr zwischen den beiden Daten liegt.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Engineering">
<title
>Ingenieurwesen</title>

<sect3 id="BASE">
<title
>BASE</title>
<para
>Die Funktion BASE() konvertiert eine Zahl zur Basis 10 in eine Zeichenfolge, die eine Zahl zu einer Zielbasis zwischen 2 und 36 darstellt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BASE(Zahl;Basis;Genauigkeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>MinLänge</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BASE(128;8) ergibt „200“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELI">
<title
>BESSELI</title>
<para
>Die Funktion BESSELI() gibt die modifizierte „Bessel“ Funktion ln(x) zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BESSELI(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wo die Funktion ausgewertet wird</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Reihenfolge der Funktion</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BESSELI(0,7;3) ergibt 0,007367374</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELJ">
<title
>BESSELJ</title>
<para
>Die Funktion BESSELJ() gibt die „Bessel“ Funktion zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BESSELJ(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wo die Funktion ausgewertet wird</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Reihenfolge der Funktion</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BESSELJ(0,89;3) ergibt 0,013974004</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELK">
<title
>BESSELK</title>
<para
>Die Funktion BESSELK() gibt die modifizierte „Bessel“ Funktion zurück, welche der „Bessel“ Funktion entspricht, die für Imaginäre Zahlen verwendet wird.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BESSELK(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wo die Funktion ausgewertet wird</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Reihenfolge der Funktion</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BESSELK(3;9) ergibt 397,95880</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELY">
<title
>BESSELY</title>
<para
>Die Funktion BESSELY() gibt die „Bessel“ Funktion zurück, welche auch die „Weber“ oder die „Neumann“ Funktion genannt wird.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BESSELY(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wo die Funktion ausgewertet wird</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Reihenfolge der Funktion</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BESSELY(4;2) ergibt 0,215903595</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="BIN2DEC">
<title
>BIN2DEC</title>
<para
>Die Funktion BIN2DEC() gibt den Wert als dezimal-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BIN2DEC(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BIN2DEC("1010") ergibt 10  </para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BIN2DEC("11111") ergibt 31 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2HEX">
<title
>BIN2HEX</title>
<para
>Die Funktion BIN2HEX() gibt den Wert als hexadezimal-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BIN2HEX(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Die minimale Länge der Ausgabe</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BIN2HEX("1010") ergibt "a"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BIN2HEX("11111") ergibt "1f"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2OCT">
<title
>BIN2OCT</title>
<para
>Die Funktion BIN2OCT() gibt den Wert als oktal-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BIN2OCT(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Die minimale Länge der Ausgabe</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BIN2OCT("1010") ergibt "12"  </para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BIN2OCT("11111") ergibt 37 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPLEX">
<title
>COMPLEX</title>
<para
>Die Funktion COMPLEX(Realteil; Imaginärteil) gibt eine komplexe Zahl in der Form x+yi zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COMPLEX(Realteil;Imaginärteil)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Realer Koeffizient</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Imaginärer Koeffizient</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMPLEX(1,2;3,4) ergibt „1,2+3,4i“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMPLEX(0;-1) ergibt „-i“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONVERT">
<title
>CONVERT</title>
<para
>Die Funktion CONVERT() gibt die Konvertierung von einem Maßsystem in ein anderes zurück.</para>
<para
>Unterstützte Gewichtseinheiten: g (Gramm), sg (Stück), lbm (Pfund), u (Atommasse), ozm (Unze), stone (entspricht 14 Pfund), ton (Tonne), grain (1 Unze = 480 grains), pweight (pennyweight), hweight (Zentner).</para>
<para
>Unterstützte Längeneinheiten: m (Meter), in (Zoll), ft (Fuß), mi (Meile), Nmi (Nautische Meile), ang (Ångström), parsec, lightyear (Lichtjahr).</para>
<para
>Unterstützte Druckeinheiten: Pa (Pascal), atm (Atmosphären), mmHg (Millimeter-Quecksilbersäule), psi (Pfund pro Quadratzoll), Torr.</para>
<para
>Unterstützte Krafteinheiten: N (Newton), dyn, pound (Pfund).</para>
<para
>Unterstützte Energieeinheiten: J (Joule), e (erg), c (Thermodynamische Kalorie), cal (I.T.-Kalorie), eV (Elektrovolt), HPh (Pferdestärke pro Stunde), Wh (Wattstunde), flb (Fuß-Pfund), BTU (British thermal unit).</para>
<para
>Unterstützte Leistungseinheiten: W (Watt), HP (Horsepower), PS (Pferdestärke).</para>
<para
>Unterstützte Magnetismus-Einheiten: T (Tesla), ga (Gauß).</para>
<para
>Unterstützte Temperatur-Einheiten: C (Celsius), F (Fahrenheit), K (Kelvin).</para>
<para
>Unterstützte Volumeneinheiten: l (Liter), tsp (Teelöffel), tbs (Esslöffel), oz (Flüssigunze), cup (Tasse), pt (Pint), qt (Quart), gal (Gallone), barrel, m3 (Kubikmeter), mi3 (Kubikmeile), Nmi3 (Nautische Kubikmeile), in3 (Kubikzoll), ft3 (Kubikfuß), yd3 (Kubik-Yard), GRT oder regton (Bruttoregistertonne)</para>
<para
>Unterstützte Flächeneinheiten: m2 (Quadratmeter), mi2 (Quadratmeile), Nmi2 (Quadrat-Nautische-Meile), in2 (Quadratzoll), ft2 (Quadratfuss), yd2 (Quadrat-Yard), acre, ha (Hektar).</para>
<para
>Unterstützte Geschwindigkeitseinheiten: m/s (Meter pro Sekunde), m/h (Meter pro Stunde), mph (Meilen pro Stunde), kn (Knoten).</para>
<para
>Für metrische Einheiten kann jeder der folgenden Präfixe verwendet werden: E (exa, 1E+18), P (peta, 1E+15), T (tera, 1E+12), G (giga, 1E+09), M (mega, 1E+06), k (kilo, 1E+03), h (hecto, 1E+02), e (dekao, 1E+01), d (deci, 1E-01), c (centi, 1E-02), m (milli, 1E-03), u (micro, 1E-06), n (nano, 1E-09), p (pico, 1E-12), f (femto, 1E-15), a (atto, 1E-18).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CONVERT(Zahl; Ausgangseinheit; Zieleinheit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Ausgangseinheit</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zieleinheit</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CONVERT(32;"C";"F") ergibt 89,6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CONVERT(3;"lbm";"kg") ergibt 1,3608</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CONVERT(7,9;"cal";"J") ergibt 33,0757</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2BIN">
<title
>DEC2BIN</title>
<para
>Die Funktion DEC2BIN() gibt den Wert als binär-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DEC2BIN(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Die minimale Länge der Ausgabe</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEC2BIN(12) ergibt „1100“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEC2BIN(55) ergibt „110111“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2HEX">
<title
>DEC2HEX</title>
<para
>Die Funktion DEC2HEX() gibt den Wert als hexadezimal-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DEC2HEX(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Die minimale Länge der Ausgabe</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEC2HEX(12) ergibt „c“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEC2HEX(55) ergibt „37“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2OCT">
<title
>DEC2OCT</title>
<para
>Die Funktion DEC2OCT() gibt den Wert als oktal-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DEC2OCT(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Die minimale Länge der Ausgabe</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEC2OCT(12) ergibt „14“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEC2OCT(55) ergibt „67“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DELTA">
<title
>DELTA</title>
<para
>Die Funktion DELTA() ergibt 1, wenn x gleich y ist. Sonst gibt sie 0 zurück. y ist standardmässig 0.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DELTA(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DELTA(1,2; 3,4) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DELTA(3; 3) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DELTA(1; Wahr) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERF">
<title
>ERF</title>
<para
>Die Funktion ERF() ergibt die Fehlerfunktion. Wird ein Argument übergeben, gibt ERF() die Fehlerfunktion zwischen 0 und dem Argument zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ERF(Unteres Limit; Oberes Limit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Unteres Limit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Oberes Limit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ERF(0.4) ergibt 0,42839236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ERFC"
>ERFC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERFC">
<title
>ERFC</title>
<para
>Die Funktion ERFC() gibt die komplementäre Fehlerfunktion zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ERFC(Unteres Limit; Oberes Limit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Unteres Limit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Oberes Limit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ERFC(0;4) ergibt 0,57160764</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ERF"
>ERF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GESTEP">
<title
>GESTEP</title>
<para
>Die Funktion GESTEP() gibt 1 zurück, wenn x größer oder gleich y ist. Sonst gibt sie 0 zurück. y ist standardmäßig 0.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>GESTEP(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GESTEP(1,2; 3,4) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GESTEP(3; 3) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GESTEP(0,4; WAHR) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GESTEP(4; 3) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2BIN">
<title
>HEX2BIN</title>
<para
>Die Funktion HEX2BIN() gibt den Wert als binär-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>HEX2BIN(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HEX2BIN("a") ergibt "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HEX2BIN("37") ergibt "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2DEC">
<title
>HEX2DEC</title>
<para
>Die Funktion HEX2DEC() gibt den Wert als dezimal-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>HEX2DEC(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HEX2DEC("a") ergibt 10  </para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HEX2DEC("37") ergibt 55 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2OCT">
<title
>HEX2OCT</title>
<para
>Die Funktion HEX2OCT() gibt den Wert als oktal-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>HEX2OCT(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HEX2OCT("a") ergibt "12"  </para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HEX2OCT("37") ergibt 67 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMABS">
<title
>IMABS</title>
<para
>Die Funktion IMABS(komplexe Zahl) gibt die Norm einer komplexen Zahl der Form x+yi zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMABS(komplexe Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMABS("1,2+5i") ergibt 5,1419</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMABS("-i") ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMABS("12") ergibt 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMAGINARY">
<title
>IMAGINARY</title>
<para
>Die Funktion IMAGINARY(Zeichenfolge) gibt den imaginären Koeffizienten einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMAGINARY(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMAGINARY("1,2+3,4i") ergibt 3,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMAGINARY("1,2") ergibt 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMARGUMENT">
<title
>IMARGUMENT</title>
<para
>Die Funktion IMARGUMENT(komplexe Zahl) gibt das Argument einer komplexen Zahl der Form x+yi zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMARGUMENT(komplexe Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMARGUMENT("1,2+5i") ergibt 0,6072</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMARGUMENT("-i") ergibt -1,57079633 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMARGUMENT("12") ergibt "#Div/0"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCONJUGATE">
<title
>IMCONJUGATE</title>
<para
>Die Funktion IMCONJUGATE(komplexe Zahl) ergibt die zu einer komplexen Zahl der Form x+yi konjugiert komplexe Zahl.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMCONJUGATE(komplexe Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCONJUGATE("1,2+5i") ergibt "1,2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCONJUGATE("-i") ergibt "i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCONJUGATE("12") ergibt "12"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOS">
<title
>IMCOS</title>
<para
>Die Funktion IMCOS(Zeichenfolge) gibt den Kosinus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMCOS(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCOS("1+i") ergibt "0,83373-0,988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCOS("12i") ergibt 81 377,4 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOSH">
<title
>IMCOSH</title>
<para
>Die Funktion IMCOSH(Zeichenfolge) gibt den Kosinus Hyperbolicus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>

<listitem
><para
>IMCOSH(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCOSH("1+i") ergibt "0,83373+0,988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCOSH("12i") ergibt 0,84358 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOT">
<title
>IMCOT</title>
<para
>Die Funktion IMCOT(Zeichenfolge) gibt den Kotangens einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMCOT(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCOT("1+i") ergibt "0.21762-0.86801i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSC">
<title
>IMCSC</title>
<para
>Die Funktion IMCSC(Zeichenfolge) gibt den Kosekans einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMCSC(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCSC("1+i") ergibt "0.62151-0.30393i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSCH">
<title
>IMCSCH</title>
<para
>Die Funktion IMCSCH(Zeichenfolge) gibt den Kosekans Hyperbolicus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMCSCH(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMCSCH("1+i") ergibt "0.30393-i0.62151"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMDIV">
<title
>IMDIV</title>
<para
>Die Funktion IMDIV() gibt den Quotienten mehrerer komplexer Zahlen der Form x+yi zurück. Die erste Zahl wird also der Reihe nach durch die anderen Zahlen geteilt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMDIV(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMDIV(1,2;"3,4+5i") ergibt "0,111597-0,164114i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMDIV("12+i";"12-i") ergibt "0,986207+0,16551i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMEXP">
<title
>IMEXP</title>
<para
>Die Funktion IMEXP(Zeichenfolge) gibt den Exponenten einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMEXP(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMEXP("2-i") ergibt "3,99232-6,21768i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMEXP("12i") ergibt 0,843854-0,536573i </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLN">
<title
>IMLN</title>
<para
>Die Funktion IMLN(Zeichenfolge) gibt den natürlichen Logarithmus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMLN(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMLN("3-i") ergibt "1,15129-0,321751i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMLN("12") ergibt 2,48491 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG10">
<title
>IMLOG10</title>
<para
>Die Funktion IMLOG10(Zeichenfolge) gibt den dekadischen Logarithmus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMLOG10(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMLOG10("3+4i") ergibt "0,69897+0,402719i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG2">
<title
>IMLOG2</title>
<para
>Die Funktion IMLOG2(Zeichenfolge) gibt den binären Logarithmus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMLOG2(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMLOG2("3+4i") ergibt "2,321928+1,337804i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPOWER">
<title
>IMPOWER</title>
<para
>Die Funktion IMPOWER(Zeichenfolge) gibt eine komplexe Zahl potenziert mit einem Wert zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMPOWER(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Potenz</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMPOWER("4-i";2) ergibt "15-8i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMPOWER("1,2";2) ergibt 1,44 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPRODUCT">
<title
>IMPRODUCT</title>
<para
>Die Funktion IMPRODUCT() gibt das Produkt mehrerer komplexer Zahlen der Form x+yi zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMPRODUCT(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMPRODUCT(1,2;"3,4+5i") ergibt "4,08+6i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMPRODUCT(1,2;"1i") ergibt "+1,2i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMREAL">
<title
>IMREAL</title>
<para
>Die Funktion IMREAL(Zeichenfolge) gibt den reellen Koeffizienten einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMREAL(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMREAL("1,2+3,4i") ergibt 1,2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMREAL("1,2i") ergibt 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSEC">
<title
>IMSEC</title>
<para
>Die Funktion IMSEC(Zeichenfolge) gibt den Sekans einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMSEC(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSEC("1+i") ergibt "0.49833+i0.59108"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSECH">
<title
>IMSECH</title>
<para
>Die Funktion IMSECH(Zeichenfolge) gibt den Sekans Hyperbolicus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMSECH(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSECH("1+i") ergibt "0.49833-i0.59108"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSIN">
<title
>IMSIN</title>
<para
>Die Funktion IMSIN(Zeichenfolge) gibt den Sinus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMSIN(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSIN("1+i") ergibt "1,29846+0,634964i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSIN("1,2") ergibt -0,536573 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSINH">
<title
>IMSINH</title>
<para
>Die Funktion IMSINH(Zeichenfolge) gibt den Sinus Hyperbolicus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMSINH(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSINH("1+i") ergibt "0,63496+1,29846i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSINH("1,2") ergibt 1,50946 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSQRT">
<title
>IMSQRT</title>
<para
>Die Funktion IMSQRT(Zeichenfolge) gibt die Quadratwurzel einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMSQRT(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSQRT("1+i") ergibt "1,09868+0,45509i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSQRT("1,2i") ergibt 0,774597+0,774597i </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUB">
<title
>IMSUB</title>
<para
>Die Funktion IMSUB() gibt die Differenz mehrerer komplexer Zahlen der Form x+yi zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMSUB(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSUB(1,2;"3,4+5i") ergibt "-2,2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSUB(1,2;"1i") ergibt "1,2-i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUM">
<title
>IMSUM</title>
<para
>Die Funktion IMSUM() gibt die Summe mehrerer komplexer Zahlen der Form x+yi zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMSUM(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSUM(1,2;"3,4+5i") ergibt "4,6+5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMSUM(1,2;"1i") ergibt "1,2+i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTAN">
<title
>IMTAN</title>
<para
>Die Funktion IMTAN(Zeichenfolge) gibt den Tangens einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMTAN(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMTAN("1+i") ergibt "0,27175+1,08392i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMTAN("1,2") ergibt 2,57215</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTANH">
<title
>IMTANH</title>
<para
>Die Funktion IMTANH(Zeichenfolge) gibt den Tangens Hyperbolicus einer komplexen Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IMTANH(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Komplexe Zahl</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMTANH("1+i") ergibt "1,08392+0,27175i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IMTANH("1,2") ergibt 0,83365</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2BIN">
<title
>OCT2BIN</title>
<para
>Die Funktion OCT2BIN() gibt den Wert als binär-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>OCT2BIN(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Die minimale Länge der Ausgabe</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>OCT2BIN("12") ergibt "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>OCT2BIN("55") ergibt "101101"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2DEC">
<title
>OCT2DEC</title>
<para
>Die Funktion OCT2DEC() gibt den Wert als dezimal-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>OCT2DEC(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>OCT2DEC("12") ergibt 10  </para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>OCT2DEC("55") ergibt 45 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2HEX">
<title
>OCT2HEX</title>
<para
>Die Funktion OCT2HEX() gibt den Wert als hexadezimal-formatierte Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>

<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>OCT2HEX(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu konvertierende Wert</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Die minimale Länge der Ausgabe</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>OCT2HEX("12") ergibt "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>OCT2HEX("55") ergibt "2D"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Financial">
<title
>Finanzen</title>

<sect3 id="ACCRINT">
<title
>ACCRINT</title>
<para
>Die Funktion ACCRINT gibt die aufgewachsenen Zinsen für ein Wertpapier für welches regelmäßig Zinsen ausbezahlt werden. Erlaubte Werte für die Häufigkeit sind 1 für Jährlich, 2 für Halbjährlich und 4 für Vierteljährlich. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ACCRINT(Ausgabe; erster Zinstermin; Abrechnung; Zins; Nennwert; Häufigkeit; Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ausgabetag</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Erster Zinstermin</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Jährlicher Zins eines Wertpapiers</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Nennwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Zahlungen pro Jahr</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis der Tageszählung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ACCRINT("2/28/2001"; "8/31/2001"; "5/1/2001"; 0,1; 1000; 2; 0) ergibt 16,944 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINTM"
>ACCRINTM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACCRINTM">
<title
>ACCRINTM</title>
<para
>Die Funktion ACCRINTM gibt die aufgewachsenen Zinsen für ein Wertpapier zurück, welches am Fälligkeitsdatum ausbezahlt wird. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ACCRINTM(Ausgabe; Abrechnung; Zins; Nennwert; Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ausgabetag</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Jährlicher Zins eines Wertpapiers</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Nennwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis der Tageszählung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ACCRINTM("2/28/2001"; "8/31/2001"; 0,1; 100) ergibt 5,0278</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINT"
>ACCRINT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORDEGRC">
<title
>AMORDEGRC</title>
<para
>Die Funktion AMORDEGRC berechnet den Abschreibungswert für das französische Rechnungswesen bei degressiver Abschreibung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>AMORDEGRC( Kosten; Anschaffungsdatum; Enddatum erste Periode; Restwert; Periode; Rate; Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Kosten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AMORDEGRC( 1000; "01.02.2006"; "31.12.2006"; 10; 0; 0,1; 1 ) ergibt 228</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="AMORLINC"
>AMORLINC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORLINC">
<title
>AMORLINC</title>
<para
>Die Funktion AMORLINC berechnet den Abschreibungswert für das französische Rechnungswesen bei linearer Abschreibung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>AMORLINC( Kosten; Anschaffungsdatum; Enddatum erste Periode; Restwert; Periode; Rate; Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AMORLINC( 1000; "01.02.2004"; "31.12.2004"; 10; 0; 0,1; 1 ) ergibt 91,256831 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="AMORDEGRC"
>AMORDEGRC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPOUND">
<title
>COMPOUND</title>
<para
>Die Funktion COMPOUND() gibt den Wert einer Anlage zurück. Der Wert wird dabei mit der Startkapital, dem nominalen Zinssatz, der Häufigkeit der Zinsberechnung und der Laufzeit berechnet. Beispiel: 5000 EUR bei 12 % Zins, vierteljährlich verzinst über 5 Jahr ergibt COMPOUND(5000;0,12;4;5) oder 9030,56 EUR.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COMPOUND(Startkapital;Zins;Perioden;Perioden pro Jahr)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Startkapital</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zins</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zinsperioden pro Jahr</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Jahre</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMPOUND(5000;0,12;4;5) ergibt 9030,56</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONTINUOUS">
<title
>CONTINUOUS</title>
<para
>Die Funktion CONTINUOUS() gibt den Endwert eines fortlaufend verzinsten Betrags zurück. Dabei erwartet sie das Startkapital, den nominalen Zinssatz und die Laufzeit in Jahren. Beispiel: 1000 EUR mit 10% Zins bei einem Jahr wird zu continuous(1000;0,1;1) oder 1105,17 EUR.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CONTINOUS(Startkapital;Zins;Jahre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Startkapital</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zins</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Jahre</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CONTINUOUS(1000;0,1;1) ergibt 1105,17</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUPNUM">
<title
>COUPNUM</title>
<para
>Die Funktion COUPNUM gibt die Anzahl der Gewinnanteilsscheinen zurück, die zwischen dem Abrechnungsdatum und dem Fälligkeitsdatum ausgezahlt werden. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COUPNUM(Abrechnung; Fälligkeit; Häufigkeit; Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Berechnungshäufigkeit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis der Tageszählung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COUPNUM("2/28/2001"; "8/31/2001"; 2; 0) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMIPMT">
<title
>CUMIPMT</title>
<para
>Berechnet die kumulative Zinszahlung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CUMIPMT(Zins, Perioden, Wert, Start, Ende, Typ)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Wert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Start</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Ende</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Typ</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CUMIPMT( 0,06/12; 5*12; 100000; 5; 12; 0 ) ergibt -3562,187023</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="CUMPRINC"
>CUMPRINC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMPRINC">
<title
>CUMPRINC</title>
<para
>Berechnet die kumulative Kapitalzahlung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CUMPRINC(Zins, Perioden, Wert, Start, Ende, Typ)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Wert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Start</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Ende</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Typ</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CUMPRINC( 0,06/12; 5*12; 100000; 5; 12; 0 ) ergibt -11904,054201</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="CUMIPMT"
>CUMIPMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DB">
<title
>DB</title>
<para
>Die Funktion DB() berechnet die Abschreibung einer Anlage in einer gegebenen Periode mit der festen degressiven Abschreibungsmethode. „Monat“ ist optional, wenn er weggelassen wird, wird 12 als Wert angenommen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DB(Kosten; Restwert; Lebensdauer; Periode [;Monat])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Kosten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Restwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Lebensdauer</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Periode</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Monat</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DB(8000;400;6;3) ergibt 1158,40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DB(8000;400;6;3;2) ergibt 1783,41</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DDB">
<title
>DDB</title>
<para
>Die Funktion DDB() berechnet die Abschreibung von einem Vermögen für eine angegebene Periode. Dabei wird die arithmetische Degressionsmethode verwendet. Der Faktor ist optional, wenn er fehlt wird angenommen das er 2 ist. Alle Parameter müssen größer als null sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DDB(Kosten; Restwert; Lebensdauer; Periode [;Faktor])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Kosten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Restwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Lebensdauer</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Periode</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Faktor</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DDB(75000;1;60;12;2) ergibt 1721,81</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DISC">
<title
>DISC</title>
<para
>Die Funktion DISC gibt den Disagio für ein Wertpapier zurück. Basis ist die Art der Tageszählung, die Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DISC(Abrechnung; Fälligkeit; Nennwert; Auszahlung [; Basis ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Kurs pro $100 Nennwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Auszahlung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis der Tageszählung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DISC("2/28/2001"; "8/31/2001"; 12; 14) ergibt 0,2841</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARDE">
<title
>DOLLARDE</title>
<para
>Die Funktion DOLLARDE() gibt eine Notierung, die als Dezimalbruch ausgedrückt wurde, als Dezimalzahl zurück. Die Zahl ist dabei die als Dezimalbruch ausgedrückte Zahl und der Teiler eine ganze Zahl, die als Nenner des Dezimalbruchs verwendet wird.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DOLLARDE(Zahl; Teiler)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Teiler</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DOLLARDE(1,02; 16) – steht für 1 und 2/16 – ergibt 1,125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARFR"
>DOLLARFR</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARFR">
<title
>DOLLARFR</title>
<para
>Die Funktion DOLLARFR() gibt eine Notierung, die als Dezimalzahl ausgedrückt wurde, als Dezimalbruch zurück. Die Zahl ist dabei die als Dezimalzahl ausgedrückte Zahl und der Teiler eine ganze Zahl, die als Nenner des Dezimalbruchs verwendet wird.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DOLLARFR(Zahl; Teiler)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Teiler</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DOLLARFR(1,125; 16) ergibt 1,02. (1 + 2/16)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARDE"
>DOLLARDE</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION">
<title
>DURATION</title>
<para
>Gibt die Zahl der Perioden zurück, die benötigt werden, damit eine Anlage einen gewünschten Wert erreicht.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DURATION(Zins; PV; FV)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Barwert (PV)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Endwert (FV)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DURATION(0,1; 1000; 2000) ergibt 7,27</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION_ADD">
<title
>DURATION_ADD</title>
<para
>Gibt die Macauley-Dauer eines Wertpapiers in Jahren zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DURATION_ADD(Abrechnung; Fälligkeit; Kupon; Rendite; Häufigkeit; Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Kupon</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendite</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Berechnungshäufigkeit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DURATION_ADD( "01.01.1998"; "01.01.2006"; 0,08; 0,09; 2; 1 ) ergibt 5,9937749555 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MDURATION"
>MDURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EFFECT">
<title
>EFFECT</title>
<para
>Die Funktion EFFECT() berechnet die effektive Rendite für einen nominalen Zins (Jahresrate oder effektiver Jahreszins). Beispiel: 8 % Zins jeden Monat ergibt eine effektive Rendite von EFFECT(0,08;12) oder 8,3 %.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EFFECT(Nominalzins;Perioden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Nominaler Zinssatz</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EFFECT(0,08;12) ergibt 0,083</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="EFFECTIVE"
>EFFECTIVE</link
>&nbsp;</member>
<member
><link linkend="NOMINAL"
>NOMINAL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="EFFECTIVE">
<title
>EFFECTIVE</title>
<para
>Die Funktion EFFECTIVE() berechnet die effektive Rendite für einen nominalen Zins (Jahresrate oder effektiver Jahreszins). Sie ist identisch mit der EFFECT-Funktion.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EFFECTIVE(Nominalzins;Perioden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Nominaler Zinssatz</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EURO">
<title
>EURO</title>
<para
>Die Funktion EURO() konvertiert einen Euro in die angegebene nationale Währung der Europäischen Währungsunion. Die Währung kann eine der folgenden sein: ATS (Österreich), BEF (Belgien), DEM (Deutschland), ESP (Spanien), EUR (Euro), FIM (Finnland), FRF (Frankreich), GRD (Griechenland), IEP (Irland), ITL (Italien), LUF (Luxemburg), NLG (Niederlande) oder PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EURO(Währung)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Währung</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EURO("DEM") ergibt 1,95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="EUROCONVERT"
>EUROCONVERT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EUROCONVERT">
<title
>EUROCONVERT</title>
<para
>Die Funktion EUROCONVERT() konvertiert eine nationale Währung in eine andere nationale Währung der Europäischen Währungsunion. Die Umrechnung erfolgt über den Euro als Zwischenschritt. Die Währung kann eine der folgenden sein: ATS (Österreich), BEF (Belgien), DEM (Deutschland), ESP (Spanien), EUR (Euro), FIM (Finnland), FRF (Frankreich), GRD (Griechenland), IEP (Irland), ITL (Italien), LUF (Luxemburg), NLG (Niederlande) oder PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EUROCONVERT(Anzahl; Ausgangswährung, Zielwährung)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Ausgangswährung</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zielwährung</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EUROCONVERT(1; "EUR"; "DEM") ergibt 1,95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="EURO"
>EURO</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV">
<title
>FV</title>
<para
>Die Funktion FV() gibt den Endwert einer Anlage zurück, wenn die Rendite und die Laufzeit angegeben werden. Wenn Sie 1000 EUR auf einem Bankkonto mit 8 % Verzinsung haben, besitzen sie nach zwei Jahren FV(1000;0,08;2) oder 1166,40 EUR.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FV(Barwert;Rendite;Perioden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Barwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FV(1000;0,08;2) ergibt 1166,40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV_ANNUITY">
<title
>FV_ANNUITY</title>
<para
>Die Funktion FV_ANNUITY() gibt den Endwert eines regelmäßigen Geldflusses zurück. Sie erwartet die Höhe der Zahlungen, den Zinssatz und die Anzahl der Perioden. Beispiel: Sie erhalten 500 EUR pro Jahr für 20 Jahre und investieren dieses Geld auf einem Konto mit 8 % Zins. Nach 20 Jahren haben Sie dann insgesamt FV_annuity(500;0,08;20) oder 22880,98 EUR. Die Funktion geht davon aus, dass die Zahlungen immer am Ende der Periode getätigt werden.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FV_ANNUITY(Betrag; Zins; Perioden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahlung pro Periode</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zins</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FV_ANNUITY(1000;0,05;5) ergibt 5525,63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTRATE">
<title
>INTRATE</title>
<para
>Die Funktion INTRATE gibt den Zins für ein voll angelegtes Wertpapier zurück. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>INTRATE(Abrechnung; Fälligkeit; Anlage; Auszahlung; Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Anlage</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Auszahlung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis der Tageszählung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INTRATE("2/28/2001"; "8/31/2001"; 1000000; 2000000; 1) ergibt 1,98</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IPMT">
<title
>IPMT</title>
<para
>IPMT berechnet den Betrag einer Zinszahlung einer Investition für die Periode.</para>
<para
>Zins ist der periodische Zinssatz.</para>
<para
>Periode ist die amortisierte Periode. 1 für die erste und NPER für die letzte Periode.</para>
<para
>NPER ist die Gesamtzahl der Perioden in welcher die Annuität bezahlt wird.</para>
<para
>PV ist der Barwert in einer Sequenz von Zahlungen.</para>
<para
>FV (optional) ist der gewünschte (End-) Wert. Standard: 0.</para>
<para
>Typ (optional) definiert die Frist. 1 für eine Zahlung am Anfang der Periode und 0 (Standard) für eine Zahlung am Ende der Periode.</para>
<para
>Das Beispiel zeigt den Zinssatz, der im letzten Jahr eines Kredits mit einer Laufzeit von drei Jahren bezahlt werden muss. Der Zinssatz beträgt 10 Prozent.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IPMT(Zins; Periode; NPer; PV; FV; Typ)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Periode</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Gegenwärtige Werte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Endwert (optional)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Typ (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IPMT(0,1;3;3;8000) ergibt -292,45</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IRR">
<title
>IRR</title>
<para
>Die Funktion IRR berechnet den internen Zinsfuß für eine Serie von Rückflüssen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IRR( Werte [; Schätzung = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Schätzung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="XIRR"
>XIRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISPMT">
<title
>ISPMT</title>
<para
>Berechnet den Zins, welcher in einer bestimmten Periode einer Anlage bezahlt wurde.</para>
<para
>Zins ist der periodische Zinssatz.</para>
<para
>Periode ist die amortisierte Periode. 1 für die erste und NPer für die letzte Periode.</para>
<para
>NPer ist die Gesamtzahl der Perioden währenddessen Annuität bezahlt wird.</para>
<para
>PV ist der Barwert in einer Sequenz von Zahlungen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISPMT(Zins; Periode; NPer; PV)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Periode</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Perioden</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Barwerte (PV)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISPMT(0,1; 1; 3; 8000000) ergibt -533333</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEVEL_COUPON">
<title
>LEVEL_COUPON</title>
<para
>Die Funktion LEVEL_COUPON() berechnet den Wert einer Kuponanleihe. Beispiel: Der Zinssatz beträgt 10%. Eine 1000 EUR Anleihe mit halbjährlichen Kupons bei einem Zinssatz von 13 %, der sich 4 Jahre lang entwickelt, hat einen Wert von LEVEL_COUPON(1000;.13;2;4;0,1) oder 1096,95 EUR.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LEVEL_COUPON(Nennwert;Kuponrate;Kupons pro Jahr;Jahre;Marktzinssatz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Nennwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Kuponrate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Kupons pro Jahr</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Jahre</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Marktzinssatz</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LEVEL_COUPON(1000;0,13;2;4;0,1) ergibt 1096,95</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDURATION">
<title
>MDURATION</title>
<para
>Die Funktion MDURATION() berechnet die modifizierte Macauley-Dauer eines Wertpapiers in Jahren.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MDURATION( Abrechnung; Fälligkeit; Kupon; Rendite; Häufigkeit; [ Basis=0 ])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Kupon</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendite</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Berechnungshäufigkeit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MDURATION("01.02.2004"; "31.05.2004"; 0,08; 0,09; 2; 0) ergibt 0,316321106</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DURATION"
>DURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIRR">
<title
>MIRR</title>
<para
>Die Funktion MIRR() berechnet den internen Zinsfuß (IRR) einer Serie von periodischen Anlagen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MIRR(Werte; Anlage; Reinvestition)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Anlage</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Reinvestition</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MIRR({100;200;-50;300;-200}, 5 %, 6 %) ergibt 34,2823387842 %</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOMINAL">
<title
>NOMINAL</title>
<para
>Die Funktion NOMINAL() berechnet den Nominalzins eines Effektivzinssatzes, der in gegebenen Zeitabständen berechnet wird.Beispiel: Um 8 % Zins auf einem Konto zu erhalten, das monatlich verzinst wird, müssen sie NOMINAL(0,08;12) oder 7,72 % Nominalzins bekommen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NOMINAL(Effektiver Zins;Perioden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Effektiver Zins</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NOMINAL(0,08;12) ergibt 0,0772</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPER">
<title
>NPER</title>
<para
>Gibt die Anzahl der Perioden einer Anlage zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NPER(Zins;Zahlung;PV;FV;Typ)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zahlung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Barwert (PV)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Endwert (FV – optional)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Typ (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NPER(0,1; -100; 1000) ergibt 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NPER(0,06; 0; -10000; 20000 ;0) ergibt 11,906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPV">
<title
>NPV</title>
<para
>Der Kapitalwert (NPV) für eine Serie von periodischen Rückflüssen.</para>
<para
>Berechnet den Kapitalwert (NPV) für eine Serie von periodischen Rückflüssen mit dem Abzinsfaktor „Zins“. Die Werte sollten positiv sein, wenn sie als Einnahme und negativ, wenn sie als Ausgabe verbucht werden.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NPV(Zins; Werte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Werte (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NPV(100%;4;5;7) = 4,125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLPRICE">
<title
>ODDLPRICE</title>
<para
>Die Funktion ODDLPRICE berechnet den Wert des Wertpapiers pro 100 Währungseinheiten des Nennwerts. Das Wertpapier hat dabei einen irregulären letzten Zinstermin.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ODDLPRICE( Abrechnung; Fälligkeit; Letzter Zinstermin; Zins; Jährliche Rendite; Auszahlung; Häufigkeit [; Basis = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Letzte</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Jährliche Rendite</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Auszahlung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Berechnungshäufigkeit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ODDLPRICE(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3 %;5 %;100;2) ergibt 90,991042345 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLYIELD">
<title
>ODDLYIELD</title>
<para
>Die Funktion ODDLYIELD berechnet die Rendite eines Wertpapiers mit einem irregulären letzten Zinstermin.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ODDLYIELD( Abrechnung; Fälligkeit; Letzter Zinstermin; Zins; Kurs; Auszahlung; Häufigkeit [; Basis = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Letzte</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Kurs</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Auszahlung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Berechnungshäufigkeit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ODDLYIELD(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3 %;91;100;2) ergibt 4,997775351 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ODDLPRICE"
>ODDLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PMT">
<title
>PMT</title>
<para
>PMT ergibt den Zahlungsbetrag für einen Kredit mit konstantem Zinssatz und konstanten Zahlungen (jede Zahlung hat den gleichen Betrag).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PMT(Zins; NPer ; PV [; FV = 0 [; Typ = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Perioden (NPer)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Barwert (PV)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Endwert (FV – optional)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Typ (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PMT(0,1; 4; 10000) ergibt -3154,71</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PPMT">
<title
>PPMT</title>
<para
>PPMT berechnet den Betrag der Kapitalrückzahlung einer Investition für die Periode.</para>
<para
>Zins ist der periodische Zinssatz.</para>
<para
>Periode ist die amortisierte Periode. 1 für die erste und NPER für die letzte Periode.</para>
<para
>NPER ist die Gesamtzahl der Perioden in welcher die Annuität bezahlt wird.</para>
<para
>PV ist der Barwert in einer Sequenz von Zahlungen.</para>
<para
>FV (optional) ist der gewünschte (End-) Wert. Standard: 0.</para>
<para
>Typ (optional) definiert die Frist. 1 für eine Zahlung am Anfang der Periode und 0 (Standard) für eine Zahlung am Ende der Periode.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PPMT(Zins; Periode; NPer; PV [; FV = 9 [; Typ = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Periode</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Barwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Endwert (optional)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Typ (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PPMT(0,0875;1;36;5000;8000;1) ergibt -18,48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRICEMAT">
<title
>PRICEMAT</title>
<para
>Die Funktion PRICEMAT berechnet den Kurs pro 100 Währungseinheiten des Nennwerts eines Wertpapiers, das Zinsen am Fälligkeitsdatum auszahlt.</para>
<para
>Basis-Berechnungsmodus</para>
<para
>  0       US-Methode, 12 Monate, jeder Monat hat 30 Tage</para>
<para
>  1       Tatsächliche Anzahl an Tagen im Jahr, tatsächliche Anzahl an Tagen pro Monat </para>
<para
>  2       360 Tage in einem Jahr, tatsächliche Anzahl an Tagen pro Monat</para>
<para
>  4       365 Tage in einem Jahr, tatsächliche Anzahl an Tagen pro Monat</para>
<para
>  5       Europäische Methode, 12 Monate, jeder Monat hat 30 Tage</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PRICEMAT(Abrechnung; Fälligkeit; Ausgabe; Zins; Rendite [; basis = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Ausgabetag</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Disagio</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendite</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PRICEMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);6 %;5 %) ergibt 103,819218241 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV">
<title
>PV</title>
<para
>Die Funktion PV() gibt den Barwert einer Anlage zurück. Das ist der heutige Wert einer Geldsumme in der Zukunft bei einem bestimmten Zinssatz bzw. einer bestimmten Inflationsrate. Wenn Sie z. B. 1166,40 EUR für einen neuen Computer benötigen, welchen Sie in zwei Jahren kaufen möchten, benötigen Sie bei einem Zinssatz von 8 % jetzt PV(1166,4;0,08;2) oder 1000 EUR.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PV(Endwert;Zins;Perioden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Endwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zins</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PV(1166,4; 0,08; 2) ergibt 1000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV_ANNUITY">
<title
>PV_ANNUITY</title>
<para
>Die Funktion PV_ANNUITY() gibt den Barwert einer jährlichen Zahlung oder eines Geldstromes. Beispiel: Ein „eine Million“-Lottozettel welcher Ihnen 50000 EUR pro Jahr für 20 Jahre auszahlt, ist bei einem Zinssatz von 5 % aktuell PV_ANNUITY(50000;0,05;20) oder 623,111 EUR wert. Diese Funktion geht davon aus, dass die Zahlungen am Ende jeder Periode getätigt werden.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PV_ANNUITY(Betrag; Zins; Perioden)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahlung pro Periode</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zins</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Perioden</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PV_ANNUITY(1000;0,05;5) ergibt 4329,48</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RATE">
<title
>RATE</title>
<para
>Die Funktion RATE() berechnet die konstante Zinsrate der Periode einer Investition.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RATE(nper;pmt;pv;fv;type;guess)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahlungsperiode</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Regelmäßige Zahlungen</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Barwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Endwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Typ</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Schätzung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RATE(4*12;-200;8000) ergibt 0,007701472</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RECEIVED">
<title
>RECEIVED</title>
<para
>Die Funktion RECEIVED gibt den Betrag zurück, der am Fälligkeitsdatum für eine Wertpapier ausbezahlt wird. Basis ist die Art der Tageszählung Sie verwenden möchten: 0 für US 30/360 (Standard), 1 für tatsächliche Tage, 2 für tatsächliche Tage/360, 3 für tatsächliche Tage/365 oder 4 für Europäisch 30/365. Das Abrechnungsdatum muss vor dem Fälligkeitsdatum liegen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RECEIVED(Abrechnung; Fälligkeit; Anlage; Disagio; Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Anlage</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Disagio</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RECEIVED("2/28/2001"; "8/31/2001"; 1000; 0,05; 0) ergibt 1.025,787</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RRI">
<title
>RRI</title>
<para
>Die Funktion RRI berechnet die aus einem Profit einer Investition resultierende Zinsrate.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RRI( P; Pv; Fv)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RRI(1;100;200) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLN">
<title
>SLN</title>
<para
>Die Funktion SLN() berechnet die lineare Abschreibung eines Anlagegegenstandes über eine Abschreibungsperiode. „Kosten“ ist der Betrag, der für die Anlage bezahlt wurde. „Restwert“ ist der Wert der Anlage am Ende des Abschreibungszeitraumes. „Lebensdauer“ ist die Anzahl der Perioden, in denen die Anlage abgeschrieben wird. SLN() verteilt die Kosten gleich hoch über die Lebensdauer einer Anlage.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SLN(Kosten; Restwert; Lebensdauer)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Kosten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Restwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Lebensdauer</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SLN(10000;700;10) ergibt 930</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SYD"
>SYD</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SYD">
<title
>SYD</title>
<para
>Die Funktion SYD() berechnet die „sum-of-years digits“-Abschreibung für eine Anlage abhängig von ihren Kosten, dem Restwert, der erwarteten Lebensdauer und der gewählten Abschreibungsperiode. Diese Methode beschleunigt die Rate der Abschreibung, sodass in den früheren Abschreibungsperioden höhere Abschreibungskosten auftreten als in den späteren Perioden. Die abschreibbaren Kosten sind die Anschaffungskosten minus Restwert. Die Nutzungsdauer ist die Anzahl der Perioden (typischerweise Jahre), über die die Anlage abgeschrieben wird.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SYD(Kosten; Restwert; Lebensdauer; Periode)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Kosten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Restwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Lebensdauer</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Periode</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SYD(5000; 200; 5; 2) ergibt 1280</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLEQ">
<title
>TBILLEQ</title>
<para
>Die Funktion TBILLEQ gibt die passende Obligation zu einem Schatzschein zurück. Das Fälligkeitsdatum muss nach dem Abrechnungsdatum, aber innerhalb von 365 Tagen liegen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TBILLEQ(Abrechnung; Fälligkeit; Disagio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Disagio</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TBILLEQ("2/28/2001"; "8/31/2001"; 0,1) ergibt 0,1068</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLPRICE">
<title
>TBILLPRICE</title>
<para
>Die Funktion TBILLPRICE gibt den Preis pro $100 Wert für einen Schatzschein zurück. Das Fälligkeitsdatum muss nach dem Abrechnungsdatum, aber innerhalb von 365 Tagen liegen. Der Disagio muss positiv sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TBILLPRICE(Abrechnung; Fälligkeit; Disagio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Disagio</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TBILLPRICE("2/28/2001"; "8/31/2001"; 0,05) ergibt 97,4444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLYIELD">
<title
>TBILLYIELD</title>
<para
>Die Funktion TBILLYIELD gibt die Rendite für einen Schatzschein zurück. Das Fälligkeitsdatum muss nach dem Abrechnungsdatum, aber innerhalb von 365 Tagen liegen. Der Preis muss positiv sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TBILLYIELD(Abrechnung; Fälligkeit; Kurs)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Kurs pro $100 Nennwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TBILLYIELD("2/28/2001"; "8/31/2001"; 600) ergibt -1,63</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VDB">
<title
>VDB</title>
<para
>VDB berechnet den Abschreibungsbetrag einer Anlage aus einem Anschaffungswert, einer erwarteten Nutzungsdauer, einem Restwert für den angegebenen Zeitraum mit der degressiven Abschreibungsmethode.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>VDB(Kosten; Restwert; Lebensdauer; Startperiode; Endperiode; [; Abschreibungsfaktor = 2 [; wechseln=falsch]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Kurs</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Auszahlung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VDB(10000;600;10;0;0,875;1,5) ergibt 1312,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XIRR">
<title
>XIRR</title>
<para
>Die Funktion XIRR berechnet den internen Zinsfuß für eine nicht-periodische Serie von Rückflüssen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>XIRR( Werte; Daten[; Schätzung = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Daten</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Schätzung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>XIRR(B1:B4;C1:C4) ergibt 0.2115964, wenn B1:B4 „-20000“, „4000“, „12000“, „8000“ und C1:C4 „=DATE(2000;1;1)“, „=DATE(2000;6;1)“, „=DATE(2000;12;30)“, „=DATE(2001;3;1)“ enthält.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XNPV">
<title
>XNPV</title>
<para
>Die Funktion XNPV berechnet den Kapitalwert für eine Serie von Rückflüssen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>XNPV(Zins; Werte; Daten)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Rate</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Werte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Daten</seg
><seg
>Datum</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>XNPV(5 %;B1:B4;C1:C4) ergibt 2907,83187, wenn B1:B4 „-20000“, „4000“, „12000“, „8000“ und C1:C4 „=DATE(2000;1;1)“, „=DATE(2000;6;1)“, „=DATE(2000;12;30)“, „=DATE(2001;3;1)“ enthält.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="NPV"
>NPV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDDISC">
<title
>YIELDDISC</title>
<para
>Die Funktion YIELDDISC berechnet die Rendite eines Wertpapiers pro 100 Währungseinheiten des Nennwerts.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>YIELDDISC(Abrechnung; Fälligkeit; Kurs, Auszahlung, Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Kurs</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Auszahlung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>YIELDDISC(DATE(1990;6;1);DATE(1990;12;31);941,66667;1000) ergibt 0,106194684</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDMAT">
<title
>YIELDMAT</title>
<para
>Die Funktion YIELDMAT berechnet die Rendite eines Wertpapiers, dessen Zinsen am Fälligkeitstermin gezahlt werden.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>YIELDMAT( Abrechnung; Fälligkeit; Ausgabe; Zins; Kurs; Basis )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Abrechnungsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Fälligkeitsdatum</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Ausgabetag</seg
><seg
>Datum</seg
></seglistitem>
<seglistitem
><seg
>Disagio</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Kurs</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>YIELDMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);6 %;103,819218241) ergibt 0,050000000.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="YIELDDISC"
>YIELDDISC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZERO_COUPON">
<title
>ZERO_COUPON</title>
<para
>Die Funktion ZERO_COUPON() berechnet den Wert einer Nullkuponanleihe. Beispiel: Sie haben 10% Zins. Ein 1000 EUR Anleihe, die sich 20 Jahre lang entwickelt, hat einen Wert von ZERO_COUPON(1000;0,1;20) oder 148,64 EUR.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ZERO_COUPON(Nennwert;Zins;Jahre)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Nennwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zins</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Jahre</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ZERO_COUPON(1000;0,1;20) ergibt 148,64</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2
><sect2 id="Information">
<title
>Information</title>

<sect3 id="ERRORTYPE">
<title
>ERRORTYPE</title>
<para
>Die Funktion ERRORTYPE() konvertiert einen Fehler in eine Zahl. Wenn der Wert kein Fehler ist, wird ein Fehler ausgegeben. Anderenfalls wird ein numerischer Fehlerwert ausgegeben. Die Fehlerwerte entsprechen denen von Microsoft Excel.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ERRORTYPE(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fehler</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ERRORTYPE(NA()) ergibt 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ERRORTYPE(0) gibt einen Fehler zurück</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FILENAME">
<title
>FILENAME</title>
<para
>Ergibt den aktuellen Dateinamen. Wenn das aktuelle Dokument noch nicht gespeichert wurde, wird eine leere Zeichenfolge zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FILENAME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FORMULA">
<title
>FORMULA</title>
<para
>Die Funktion FORMULA() ergibt die Formel einer Zelle als Zeichenfolge.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Verweis</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FORMULA(A1) gibt "=SUM(1+2)" zurück wenn die Zelle A1 diese Formel enthält.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INFO">
<title
>INFO</title>
<para
>Die Funktion INFO() gibt Informationen über die aktuelle Arbeitsumgebung zurück. Der Parameter „Typ“ gibt an, welche Art von Informationen zurückgegeben werden soll. Er kann einer der folgenden Werte sein: „directory“ gibt den Pfad des aktuellen Ordners zurück, „numfile“ ergibt die Anzahl aktuell geöffneter Dokumente, „release“ ergibt die Version von Calligra Tables als Text, „recalc“ ergibt den aktuellen Neuberechnungsmodus: „Automatisch“ oder „Manuell“, „system“ ergibt den Namen des Betriebssystems und „osversion“ ergibt den Namen und die Version des Betriebssystems.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>INFO(Typ)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Typ der Information</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISBLANK">
<title
>ISBLANK</title>
<para
>Die Funktion ISBLANK() ergibt Wahr, wenn der Parameter leer ist. Ansonsten ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISBLANK(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISBLANK(A1) ergibt Wahr, wenn A1 leer ist</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISBLANK(A1) ergibt Falsch, wenn A1 einen Wert enthält</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISDATE">
<title
>ISDATE</title>
<para
>Die Funktion ISDATE() ergibt Wahr, wenn der Parameter ein Datumswert ist. Sonst ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISDATE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISDATE("2.2.2000") ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISDATE("Hallo") ergibt Falsch</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERR">
<title
>ISERR</title>
<para
>Die Funktion ISERR() gibt Wahr zurück, wenn der Parameter ein anderer Fehler als „N/A“ ist. Ansonsten gibt sie Falsch zurück. Wenn „N/A“ ebenfalls behandelt werden soll, müssen Sie die Funktion ISERROR() benutzen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISERR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERROR">
<title
>ISERROR</title>
<para
>Die Funktion ISERROR() ergibt Wahr, wenn der Parameter ein Fehler einer beliebigen Art ist. Sonst ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISERROR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISEVEN">
<title
>ISEVEN</title>
<para
>Die Funktion ISEVEN() ergibt Wahr, wenn die angegebene Zahl gerade ist. Sonst ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISEVEN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISEVEN(12) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISEVEN(-7) ergibt Falsch</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISFORMULA">
<title
>ISFORMULA</title>
<para
>Die Funktion ISFORMULA() ergibt Wahr, wenn der Zellenverweis eine Formel enthält. Ansonsten ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISFORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Verweis</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLOGICAL">
<title
>ISLOGICAL</title>
<para
>Die Funktion ISLOGICAL() ergibt Wahr, wenn der Parameter ein boolescher Wert ist. Ansonsten ergibt die Funktion Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISLOGICAL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISLOGICAL(A1
>A2) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISLOGICAL(12) ergibt Falsch</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNA">
<title
>ISNA</title>
<para
>Die Funktion ISNA() ergibt Wahr, wenn der Parameter ein „N/A“-Fehler ist. Sonst ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISNA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNONTEXT">
<title
>ISNONTEXT</title>
<para
>Die Funktion ISNONTEXT() ergibt Wahr wenn der Parameter keine Zeichenfolge ist. Ansonsten ergibt sie Falsch. Sie ist identisch mit der ISNOTTEXT-Funktion.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISNONTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISNONTEXT(12) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISNONTEXT("Hallo") ergibt Falsch</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ISNOTTEXT"
>ISNOTTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNOTTEXT">
<title
>ISNOTTEXT</title>
<para
>Die Funktion ISNOTTEXT() ergibt Wahr wenn der Parameter keine Zeichenfolge ist. Ansonsten ergibt sie Falsch. Sie ist identisch mit der ISNONTEXT-Funktion.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISNOTTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISNOTTEXT(12) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISNOTTEXT("Hallo") ergibt Falsch</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ISNONTEXT"
>ISNONTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUM">
<title
>ISNUM</title>
<para
>Die Funktion ISNUM() gibt Wahr zurück, wenn der Parameter ein numerischer Wert ist. Ansonsten gibt sie Falsch zurück. Sie ist identisch mit der ISNUMBER-Funktion.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISNUM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISNUM(12) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISNUM(Hallo) ergibt Falsch</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ISNUMBER"
>ISNUMBER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUMBER">
<title
>ISNUMBER</title>
<para
>Die Funktion ISNUMBER() gibt Wahr zurück, wenn der Parameter ein numerischer Wert ist. Ansonsten gibt sie Falsch zurück. Sie ist identisch mit der ISNUM-Funktion.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISNUMBER(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISNUMBER(12) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISNUMBER(Hallo) ergibt Falsch</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ISNUM"
>ISNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISODD">
<title
>ISODD</title>
<para
>Die Funktion ISODD() ergibt Wahr, wenn die angegebene Zahl ungerade ist. Sonst ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISODD(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISODD(12) ergibt Falsch</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISODD(-7) ergibt Wahr</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISREF">
<title
>ISREF</title>
<para
>Die Funktion ISREF() ergibt Wahr, wenn der Parameter ein Zellenverweis ist. Ansonsten ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISREF(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISREF(A12) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISREF("Hallo") ergibt Falsch</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTEXT">
<title
>ISTEXT</title>
<para
>Die Funktion ISTEXT() ergibt Wahr, wenn der Parameter eine Zeichenfolge ist. Ansonsten ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISTEXT(12) ergibt Falsch</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISTEXT("Hallo") ergibt Wahr</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTIME">
<title
>ISTIME</title>
<para
>Die Funktion ISTIME() ergibt Wahr, wenn der Parameter ein Zeitwert ist. Sonst ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ISTIME(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISTIME("12:05") ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ISTIME("Hallo") ergibt Falsch</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="N">
<title
>N</title>
<para
>Die Funktion N() konvertiert einen Wert zu einer Zahl. Wenn der Wert eine Zahl ist oder auf eine Zahl verweist, gibt diese Funktion die Zahl wieder. Wenn der Wert Wahr, also wahr ist, ergibt die Funktion 1. Wenn der Wert ein Datum ist,gibt diese Funktion die Seriennummer des Datums zurück. Bei jedem anderen Wert gibt die Funktion 0 zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>N(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>N(3,14) ergibt 3,14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>N("7") ergibt 0 (weil "7" Text ist)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NA">
<title
>NA</title>
<para
>Die Funktion NA() ergibt den konstanten Fehlerwert „N/A“.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Fehler</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NA()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TYPE">
<title
>TYPE</title>
<para
>Die Funktion TYPE() ergibt 1, wenn der Wert eine Zahl ist. Sie ergibt 2, wenn der Wert ein Text ist, sie ergibt 4, wenn er ein boolescher Wert ist, sie ergibt 16, wenn er ein Fehlerwert ist, und sie ergibt 64, wenn der Wert ein Feld ist. Wenn die Zelle, auf die der Wert zeigt, eine Formel enthält, ergibt die Funktion deren Rückgabetyp.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>

<listitem
><para
>TYPE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Irgendein Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TYPE(A1) ergibt 2, wenn A1 „Text“ enthält.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TYPE(-7) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TYPE(A2) ergibt 1, wenn A2 „=CURRENTDATE()“ enthält</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Logical">
<title
>Logik</title>

<sect3 id="AND">
<title
>AND</title>
<para
>Die Funktion AND() ergibt Wahr, wenn alle angegebenen Parameter Wahr sind. Ansonsten ergibt sie Falsch (sofern nicht einer der Werte fehlerhaft ist – dann wird ein Fehler zurückgegeben)</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>AND(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AND(Wahr;Wahr;Wahr) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AND(Wahr;Falsch) ergibt Falsch</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FALSE">
<title
>FALSE</title>
<para
>Die Funktion Falsch() ergibt den booleschen Wert Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>Falsch()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>Falsch() ergibt Falsch</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IF">
<title
>IF</title>
<para
>Die IF() Funktion ist eine Bedingungs-Funktion. Die Funktion ergibt den zweiten Parameter, wenn die Bedingung Wahr ist, ansonsten ergibt sie den dritten Parameter.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IF(Bedingung;Wenn_Wahr;Wenn_Falsch)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Bedingung</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>If Wahr</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem>
<seglistitem
><seg
>If Falsch</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>A1=4;A2=6;IF(A1
>A2;5;3) ergibt 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFERROR">
<title
>IFERROR</title>
<para
>Gibt X zurück, wenn es kein Fehlerwert ist. Ansonsten wird der alternative Wert zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IFERROR(BeliebigesX;BeliebigeAlternative)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Beliebiges X </seg
><seg
>Ein beliebiger Wert</seg
></seglistitem>
<seglistitem
><seg
>Beliebige Alternative</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IFERROR(A1;A2) gibt den Inhalt von A1 zurück, wenn dieser Inhalt kein Fehlerwert ist. Ansonsten wird der Inhalt von A2 zurückgegeben.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFNA">
<title
>IFNA</title>
<para
>Gibt X zurück, wenn es kein „N/A“-Wert (Nicht verfügbar) ist. Ansonsten wird der alternative Wert zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>IFNA(BeliebigesX;BeliebigeAlternative)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Beliebiges X </seg
><seg
>Ein beliebiger Wert</seg
></seglistitem>
<seglistitem
><seg
>Beliebige Alternative</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>IFNA(A1;A2) gibt den Inhalt von A1 zurück, wenn dieser Inhalt kein „N/A“-Wert ist. Ansonsten wird der Inhalt von A2 zurückgegeben.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NAND">
<title
>NAND</title>
<para
>Die Funktion NAND() ergibt Wahr, wenn mindestens ein Parameter Falsch ist. Sind alle Parameter Wahr, ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NAND(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NAND(Wahr;Falsch;Falsch) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NAND(Wahr;Wahr) ergibt Falsch</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOR">
<title
>NOR</title>
<para
>Die Funktion NOR() ergibt Wahr, wenn alle Parameter boolesch sind und den Wert Falsch haben. Ansonsten ergibt sie Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NOR(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NOR(Wahr;Falsch;Falsch) ergibt Falsch</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NOR(Falsch;Falsch) ergibt Wahr</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOT">
<title
>NOT</title>
<para
>Die Funktion NOT() ergibt Wahr, wenn der Parameter den Wert Falsch hat und ergibt Falsch, wenn der Parameter den Wert Wahr hat.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NOT(Bool)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Boolescher Wert</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NOT(Falsch) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NOT(Wahr) ergibt Falsch</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OR">
<title
>OR</title>
<para
>Die Funktion OR() ergibt Wahr, wenn mindestens ein Parameter Wahr ist. Sind alle Parameter Falsch, ergibt sie Falsch (sofern nicht einer der Werte fehlerhaft ist – dann wird ein Fehler zurückgegeben)</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>OR(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>OR(Falsch;Falsch;Falsch) ergibt Falsch</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>OR(Wahr;Falsch) ergibt Wahr</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUE">
<title
>TRUE</title>
<para
>Die Funktion Wahr() ergibt den booleschen Wert Wahr.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>Wahr()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>Wahr() ergibt Wahr</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XOR">
<title
>XOR</title>
<para
>Die Funktion XOR() ergibt Falsch, wenn die Anzahl der Wahr-Werte gerade ist. Anderenfalls ergibt sie Wahr. Wenn eines der Argumente fehlerhaft ist, wird ein Fehler zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>XOR(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Boolesche Werte</seg
><seg
>Eine Folge von Wahrheitswerten (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>XOR(Falsch;Falsch;Falsch) ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>XOR(Wahr;Falsch) ergibt Wahr</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Lookup---Reference">
<title
>Nachschlagen &amp; Referenz</title>

<sect3 id="ADDRESS">
<title
>ADDRESS</title>
<para
>Die Funktion ADDRESS erzeugt eine Zelladresse. Der Parameter Zeile ist die Zeilennummer und Spalte die Spaltennummer.</para>
<para
>Absolut gibt den Typ der Referenz an: 1 oder weggelassen = Absolut, 2 = Absolute Zeile, relative Spalte, 3 = Relative Zeile, absolute Spalte und 4 = Relativ.</para>
<para
>A1 Stil bezeichnet den Stil der Adresse, welche zurückgegeben wird. Wenn A1 auf Wahr gesetzt ist (Standard) dann ist die zurückgegebene Adresse im A1 Stil. Wenn A1 auf Falsch gesetzt ist, dann ist die zurückgegebene Adresse im R1C1 Stil.</para>
<para
>Tabellenname ist der Text, welcher den Namen der Tabelle bezeichnet.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ADDRESS(Zeile; Spalte; Absolut; Stil; Tabellenname)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeilennummer</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Spaltennummer</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Absolute Zahl (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>A1-Stil (optional)</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem>
<seglistitem
><seg
>Tabellenname</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ADDRESS(6; 4) ergibt $D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ADDRESS(6; 4; 2) ergibt D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ADDRESS(6; 4; 2; Falsch; "Tabelle1") ergibt Tabelle1!R6C[4]</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ADDRESS(6; 4; 1; Falsch; "Tabelle1") ergibt Tabelle1!R6C4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ADDRESS(6; 4; 4; Wahr; "Tabelle1") ergibt Tabelle1!D6</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AREAS">
<title
>AREAS</title>
<para
>Gibt die Anzahl der Bereiche in dem angegebenen Zellenverweis zurück. Ein Bereich kann eine einzelne Zelle oder ein Satz von Zellen sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>AREAS(Zellenverweis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AREAS(A1) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AREAS((A1; A2:A4)) ergibt 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CELL">
<title
>CELL</title>
<para
>Gibt Informationen über die Position, Formatierung oder Inhalt eines Zellenverweises zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CELL(Typ; Zellenverweis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Typ</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Verweis</seg
><seg
>Verweis</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CELL("COL", C7) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CELL("ROW", C7) ergibt 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CELL("ADDRESS", C7) ergibt $C$7</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHOOSE">
<title
>CHOOSE</title>
<para
>Gibt den Parameter zurück, der durch den Index angegeben wird.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CHOOSE(Index; Parameter1; Parameter2;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Index</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Argumente</seg
><seg
></seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CHOOSE(1; "erster"; "zweiter") ergibt "erster"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CHOOSE(2; 3; 2; 4) ergibt 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMN">
<title
>COLUMN</title>
<para
>Die Funktion COLUMN gibt die Spalte eines angegebenen Zellenverweises zurück. Wenn kein Parameter angegeben wird, gibt die Funktion die Spalte der aktuellen Zelle zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COLUMN(Zellenverweis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COLUMN(A1) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COLUMN(D2) ergibt 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMNS">
<title
>COLUMNS</title>
<para
>Die Funktion COLUMNS gibt die Anzahl der Spalten in einem Zellenverweis zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COLUMNS(Zellenverweis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COLUMNS(A1:C3) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COLUMNS(D2) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HLOOKUP">
<title
>HLOOKUP</title>
<para
>Sucht nach einem passenden Wert in der ersten Zeile der angegebenen Tabelle und gibt den Wert aus der angegebenen Zeile und der Spalte mit dem gefundenen Wert zurück.</para>
<para
>Sucht nach dem „Suchwert“ in der ersten Zeile der „Datenquelle“. Wird ein passender Wert gefunden, dann wird der Wert in der angegebenen „Zeile“ und in der Spalte, in der der „Suchwert“ gefunden wurde, zurückgegeben. Ist „Sortiert“ wahr (Standard), dann wird angenommen, dass die erste Zeile sortiert ist. Die Suche ist beendet, wenn der „Suchwert“ kleiner als der aktuelle Vergleichswert ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Zeichenfolge/Zahl</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>HLOOKUP(Suchwert; Datenquelle; Zeile; Sortiert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Suchwert</seg
><seg
>Zeichenfolge/Zahl</seg
></seglistitem>
<seglistitem
><seg
>Datenquelle</seg
><seg
>Feld/Bereich</seg
></seglistitem>
<seglistitem
><seg
>Zeile</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Sortiert (optional)</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDEX">
<title
>INDEX</title>
<para
>Wenn ein Bereich angegeben ist, wird der in der entsprechenden Zeile/Spalte gespeicherte Wert zurückgegeben. Wenn eine Zelle angegeben ist, die ein Feld enthält, wird ein Element des Feldes zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>INDEX(Zelle, Zeile, Spalte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zeile</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Spalte</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INDEX(A1:C3,2,2) ergibt den Inhalt von B2.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INDEX(A1,2,2) ergibt, falls A1 das Ergebnis einer Feldberechnung ist, sein (2,2) Element.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDIRECT">
<title
>INDIRECT</title>
<para
>Gibt den Inhalt einer Zelle welche als Verweis angegeben wird zurück. Der zweite Parameter ist optional.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>INDIRECT(Zellenverweis, A1 Stil)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>A1-Stil (optional)</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INDIRECT(A1), A1 enthält „B1“, und B1 1 =
> ergibt 1</para
></listitem>

</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INDIRECT(„A1“), ergibt den Inhalt von A1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOOKUP">
<title
>LOOKUP</title>
<para
>Die Funktion LOOKUP sucht den ersten Parameter im Suchvektor. Sie ergibt einen Wert im Ergebnisvektor mit demselben Index wie der entsprechende Wert im Suchvektor. Wenn der Wert nicht im Suchvektor ist, wird der nächstkleinere verwendet. Wenn kein Wert im Suchvektor passt, wird ein Fehler ausgegeben. Der Suchvektor muss aufsteigend sortiert sein und Such- und Ergebnisvektor müssen dieselbe Größe haben. Numerische Werte, Zeichenfolgen und boolesche Werte werden akzeptiert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LOOKUP(Wert; Suchvektor; Ergebnisvektor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Suchwert</seg
><seg
>Zeichenfolge/Zahl</seg
></seglistitem>
<seglistitem
><seg
>Suchvektor</seg
><seg
>Zeichenfolge/Zahl</seg
></seglistitem>
<seglistitem
><seg
>Ergebnisvektor</seg
><seg
>Zeichenfolge/Zahl</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOOKUP(1,232; A1:A6; B1:B6) für A1 = 1, A2 = 2 ergibt den Wert von B1.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MATCH">
<title
>MATCH</title>
<para
>Sucht nach einem Suchwert in einem Suchbereich und gibt dessen Position beginnend mit 1 zurück. Die Art der Übereinstimmung kann entweder -1, 0 oder 1 sein und bestimmt die Art der Suche. Ist die Art der Übereinstimmung 0, dann wird der Index des ersten Werts gleich dem Suchwert zurückgegeben. Bei 1 als Art der Übereinstimmung oder keiner Angabe wird der Index des ersten Wertes kleiner oder gleich dem Suchwert zurückgegeben und die Werte im Suchbereich müssen aufsteigend sortiert sein. Ist die Art der Übereinstimmung -1, dann wird der Index des ersten Werts größer oder gleich dem Suchwert zurückgegeben und die Werte im Suchbereich müssen absteigend sortiert sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MATCH(Suchwert; Suchbereich; Art der Übereinstimmung)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Suchwert</seg
><seg
>Zeichenfolge/Zahl</seg
></seglistitem>
<seglistitem
><seg
>Suchbereich</seg
><seg
>Verweis/Feld</seg
></seglistitem>
<seglistitem
><seg
>Art der Übereinstimmung (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLE.OPERATIONS">
<title
>MULTIPLE.OPERATIONS</title>
<para
>MULTIPLE.OPERATIONS führt den Formelausdruck in der Formelzelle und alle darauf verweisenden Formelausdrücke. Dabei werden alle Verweise auf Zeilenzelle mit Verweisen auf Zeilenersatz und entsprechend alle Verweise auf Spaltenzelle mit Verweisen auf Spaltenersatz ersetzt. Diese Funktion kann dazu benutzt werden, Tabellen mit Ausdrücken zu erstellen, die von zwei Eingabeparametern abhängen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Zeichenfolge/Zahl</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MULTIPLE.OPERATIONS(Formelzelle; Zeilenzelle; Zeilenersatz; Spaltenzelle; Spaltenersatz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Formelzelle</seg
><seg
>Verweis</seg
></seglistitem>
<seglistitem
><seg
>Zeilenzelle</seg
><seg
>Verweis</seg
></seglistitem>
<seglistitem
><seg
>Zeilenersatz</seg
><seg
>Verweis</seg
></seglistitem>
<seglistitem
><seg
>Spaltenzelle (optional)</seg
><seg
>Verweis</seg
></seglistitem>
<seglistitem
><seg
>Spaltenersatz (optional)</seg
><seg
>Verweis</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OFFSET">
<title
>OFFSET</title>
<para
>Ändert die Position und Dimension eines Verweises.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Verweis</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>OFFSET(Referenz Zellenverweis; Ganzzahl Reihenversatz; Ganzzahl Spaltenversatz; Ganzzahl neueHöhe; Ganzzahl neueBreite)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis oder Bereich</seg
><seg
>Verweis</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der zu versetzenden Reihen</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der zu versetzenden Spalten</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Höhe des Versatzbereichs (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Breite des Versatzbereichs (optional)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROW">
<title
>ROW</title>
<para
>Die Funktion ROW gibt die Zeile des angegebenen Zellenverweises zurück. Ohne Parameter gibt die Funktion die aktuelle Zeile zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ROW(Zellenverweis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROW(A1) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROW(D2) ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROWS">
<title
>ROWS</title>
<para
>Die Funktion ROWS gibt die Anzahl der Zeilen in einem Zellenverweis zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ROWS(Zellenverweis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROWS(A1:C3) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROWS(D2) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEET">
<title
>SHEET</title>
<para
>Gibt die Tabellennummer in dem angegebenen Zellenverweis oder eine Zeichenfolge mit dem Tabellennamen zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SHEET(Zellenverweis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Verweis</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SHEET(Sheet1!C7) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SHEET(Sheet2!C7) ergibt 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEETS">
<title
>SHEETS</title>
<para
>Gibt die Anzahl der Tabellen in einem Verweis oder im aktuellen Dokument zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SHEETS(Zellenverweis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Verweis</seg
><seg
>Verweis</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VLOOKUP">
<title
>VLOOKUP</title>
<para
>Sucht nach einem passenden Wert in der ersten Spalte der angegebenen Tabelle und gibt den Wert aus der angegebenen Spalte und der Zeile mit dem gefundenen Wert zurück.</para>
<para
>Sucht nach dem „Suchwert“ in der ersten Spalte der „Datenquelle“. Wird ein passender Wert gefunden, dann wird der Wert in der angegebenen „Spalte“ und in der Zeile, in der der „Suchwert“ gefunden wurde, zurückgegeben. Ist „Sortiert“ wahr (Standard), dann wird angenommen, dass die erste Spalte sortiert ist. Die Suche ist beendet, wenn der „Suchwert“ kleiner als der aktuelle Vergleichswert ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Zeichenfolge/Zahl</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>VLOOKUP(Suchwert; Datenquelle; Spalte; Sortiert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Suchwert</seg
><seg
>Zeichenfolge/Zahl</seg
></seglistitem>
<seglistitem
><seg
>Datenquelle</seg
><seg
>Feld/Bereich</seg
></seglistitem>
<seglistitem
><seg
>Spalte</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Sortiert (optional)</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Math">
<title
>Mathematik</title>

<sect3 id="ABS">
<title
>ABS</title>
<para
>Die Funktion ABS() ergibt den absoluten Wert der Fließkommazahl x.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ABS(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ABS(12,5) ergibt 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ABS(-12,5) ergibt 12,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEIL">
<title
>CEIL</title>
<para
>Die Funktion CEIL() ergibt den auf die nächste ganze Zahl nach oben gerundeten Wert als Fließkommawert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Eine ganze Zahl wie 0, -5, 14</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CEIL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CEIL(12,5) ergibt 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CEIL(-12,5) ergibt -12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEILING">
<title
>CEILING</title>
<para
>Die Funktion CEILING() rundet auf (weg von Null) zum nächsten Vielfachen der Signifikanz größer als der Eingabewert. Der Standardwert der Signifikanz ist 1, wenn x positiv ist. Wenn der Wert negativ ist, beträgt der Standardwert der Signifikanz -1, das bedeutet Aufrunden zur nächsten ganzen Zahl. Wenn ein Modus angegeben und ungleich Null ist, wird der Betrag von x weg von Null zu einem Vielfachen der Signifikanz gerundet. Ansonsten wird zu positiv Unendlich gerundet.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Eine ganze Zahl wie 0, -5, 14</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CEILING(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Signifikanz (optional)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Modus (optional)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CEILING(12,5) ergibt 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CEILING(6,43; 4) ergibt 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CEILING(-6,43; -4; 1) ergibt -8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CEILING(-6,43; -4; 0) ergibt -4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNT">
<title
>COUNT</title>
<para
>Die Funktion COUNT() ergibt die Anzahl der übergebenen ganzzahligen und Fließkommawerte. Sie können einen Bereich zählen: COUNT(A1:B5). Sie können auch eine Liste von Werten zählen: COUNT(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COUNT(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COUNT(-5;"KSpread";2) ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COUNT(5) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTA">
<title
>COUNTA</title>
<para
>Diese Funktion gibt die Anzahl aller nicht leeren Argumente zurück. Sie können auch einem Zellbereich zählen. COUNTA(A1:B5) oder benutzen Sie eine Liste von Werten wie COUNTA(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COUNTA(Wert;Wert;Wert ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COUNTA(-5;"KSpread";2) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COUNTA(5) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTBLANK">
<title
>COUNTBLANK</title>
<para
>Diese Funktion gibt die Anzahl von allen leeren Zellen in dem angegebenen Bereich zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COUNTBLANK(Zellbereich)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zellbereich</seg
><seg
>Bereich</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COUNTBLANK(A1:B5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTIF">
<title
>COUNTIF</title>
<para
>Die Funktion COUNTIF() ergibt die Anzahl der Zellen im gegebenen Bereich, die das gegebene Kriterium erfüllen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COUNTIF(Bereich;Kriterium)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Bereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Kriterium</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COUNTIF(A2:A3;"14") ergibt 1, wenn A2 = -4 und A3 = 14 sind</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUR">
<title
>CUR</title>
<para
>Die Funktion CUR() ergibt die nicht negative kubische Wurzel von x.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CUR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CUR(27) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DIV">
<title
>DIV</title>
<para
>Die Funktion DIV() teilt den ersten Wert der Reihe nach durch die anderen Werte.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DIV(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DIV(20;2;2) ergibt 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DIV(25;2,5) ergibt 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="MOD"
>MOD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EPS">
<title
>EPS</title>
<para
>Die Funktion EPS() ergibt das Rechner-epsilon. Das ist die Differenz zwischen 1 und der nächstgrößeren Fließkommazahl. Da Computer eine begrenzte Anzahl an Stellen verwenden, sind Rundungsfehler in allen Berechnungen vorhanden, aber normalerweise unbedeutend klein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EPS()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>Auf den meisten Systemen ergibt diese Funktion 2^-52=2,2204460492503131e-16</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>0,5*EPS() ergibt die „unit round“; dieser Wert ist interessant, weil es der größte Wert ist, bei dem durch Rundungsfehler (1+x)-1=0 ist.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EPS() ist so klein, dass Calligra Sheets 1+eps() als 1 darstellt</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>Wählen Sie eine Zahl x zwischen 0 und EPS(). 1+x rundet x unter Verwendung der Gleichung (1+x)-1 entweder zu 0 oder zu EPS().</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EVEN">
<title
>EVEN</title>
<para
>Die Funktion EVEN() gibt die angegebene Zahl, aufgerundet zur nächsten geraden Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EVEN(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>

<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EVEN(1,2) ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EVEN(2) ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ODD"
>ODD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXP">
<title
>EXP</title>
<para
>Die Funktion EXP() ergibt e „hoch“ x, wobei „e“ die Basis des natürlichen Logarithmus ist und „x“ der angegebene Parameter.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EXP(9) ergibt 8 103,08392758</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EXP(-9) ergibt 0,00012341</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACT">
<title
>FACT</title>
<para
>Die Funktion fact() berechnet die Fakultät des Parameters. Der mathematische Ausdruck dazu ist x!.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FACT(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FACT(10) ergibt 3628800</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FACT(0) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACTDOUBLE">
<title
>FACTDOUBLE</title>
<para
>Die Funktion FACTDOUBLE() berechnet die doppelte Fakultät des Parameters. Der mathematische Ausdruck dazu ist x!!.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FACTDOUBLE(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FACTDOUBLE(6) ergibt 48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FACTDOUBLE(7) ergibt 105</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIB">
<title
>FIB</title>
<para
>Die Funktion FIB berechnet den n-ten Term einer Fibonacci-Folge (1, 1, 2, 3, 5, 8, 13, 21...). In dieser Folge ist nach den ersten beiden Zahlen jede Zahl die Summe der beiden direkt vorangegangenen Zahlen. FIB(0) ist als 0 definiert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FIB(n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>n-ter Term</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FIB(9) ergibt 34</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FIB(26) ergibt 121393</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FLOOR">
<title
>FLOOR</title>
<para
>Eine Zahl x zum nächsten Vielfachen des zweiten Parameters, Signifikanz, abrunden.</para>
<para
>Die Funktion FLOOR() rundet ab (gegen Null) zum nächsten Vielfachen der Signifikanz kleiner als der Eingabewert. Der Standardwert der Signifikanz ist 1, wenn x positiv ist. Wenn der Wert negativ ist, beträgt der Standardwert der Signifikanz -1, das bedeutet Aufrunden zur nächsten ganzen Zahl. Wenn ein Modus angegeben und ungleich Null ist, wird der Betrag von x gegen Null zu einem Vielfachen der Signifikanz gerundet und das Vorzeichen hinzugefügt. Ansonsten wird zu negativ Unendlich gerundet. Ist einer der beiden Parameter x oder die Signifikanz Null, ist auch das Ergebnis Null.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Eine ganze Zahl wie 0, -5, 14</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FLOOR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Signifikanz (optional)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Modus (optional)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FLOOR(12,5) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FLOOR(-12,5) ergibt -13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FLOOR(5; 2) ergibt 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FLOOR(5; 2,2) ergibt 4,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMA">
<title
>GAMMA</title>
<para
>Die Funktion GAMMA() gibt den Wert der Gamma-Funktion zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>GAMMA(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GAMMA(1) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FACT"
>FACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GCD">
<title
>GCD</title>
<para
>Die Funktion GCD() ergibt den größten gemeinsamen Teiler von zwei oder mehr ganzzahligen Werten.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>GCD(Wert;Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erste Zahl</seg
><seg
>Eine Folge ganzer Zahlen (wie 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Zweite Zahl</seg
><seg
>Eine Folge ganzer Zahlen (wie 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Dritte Zahl</seg
><seg
>Eine Folge ganzer Zahlen (wie 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GCD(6;4) ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GCD(10;20) ergibt 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GCD(20;15;10) ergibt 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LCM"
>LCM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="G_PRODUCT">
<title
>G_PRODUCT</title>
<para
>Die G_PRODUCT()-Funktion ist identisch mit der KPRODUCT-Funktion. Sie ist für die Gnumeric-Kompatibilität nötig.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>G_PRODUCT(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT">
<title
>INT</title>
<para
>Die Funktion INT() ergibt den ganzzahligen Teil des angegebenen Parameters.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>INT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INT(12,55) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INT(15) ergibt 15</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="QUOTIENT"
>QUOTIENT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INV">
<title
>INV</title>
<para
>Diese Funktion multipliziert jeden Wert mit -1</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>INV(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INV(-5) ergibt 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INV(5) ergibt -5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INV(0) ergibt 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KPRODUCT">
<title
>KPRODUCT</title>
<para
>Die Funktion KPRODUCT() berechnet das Produkt von allen als Parameter übergebenen Werten. Sie können das Produkt eines Zellbereichs: KPRODUCT(A1:B5) oder der Liste von Parametern wie KPRODUCT(12;5;12,5) berechnen lassen. Wenn keine numerischen Werte gefunden werden ergibt die Funktion 1.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>KPRODUCT(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>KPRODUCT(3;5;7) ergibt 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>KPRODUCT(12,5;2) ergibt 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="G_PRODUCT"
>G_PRODUCT</link
>&nbsp;</member>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LCM">
<title
>LCM</title>
<para
>Die Funktion LCM() ergibt das kleinste gemeinsame Vielfache von zwei oder mehr Fließkommawerten.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LCM(Wert;Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erste Zahl</seg
><seg
>FLOAT</seg
></seglistitem>
<seglistitem
><seg
>Zweite Zahl</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LCM(6;4) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LCM(1,5;2,25) ergibt 4,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LCM(2;3;4) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="GCD"
>GCD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LN">
<title
>LN</title>
<para
>Die Funktion LN() ergibt den natürlichen Logarithmus von x.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LN(0,8) ergibt -0,22314355</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LN(0) ergibt -unendlich</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG">
<title
>LOG</title>
<para
>Die Funktion LOG() ergibt den Logarithmus zur Basis 10 von x.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LOG(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert größer als 0</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOG(0,8) ergibt -0,09691001</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOG(0) ergibt einen Fehler.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG10">
<title
>LOG10</title>
<para
>Die Funktion LOG10() ergibt den Logarithmus zur Basis 10 des Arguments.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LOG10(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein positiver Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOG10(10) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOG10(0) ergibt einen Fehler.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG2">
<title
>LOG2</title>
<para
>Die Funktion LOG2() ergibt den Logarithmus zur Basis 2 von x.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LOG2(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOG2(0,8) ergibt -0,32192809</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOG2(0) ergibt -unendlich</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGN">
<title
>LOGN</title>
<para
>Die Funktion LOGn() ergibt den Logarithmus zur Basis n von x.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LOGn(Wert;Basis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Basis</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOGn(12; 10) ergibt 1,07918125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOGn(12;2) ergibt 3,5849625</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAX">
<title
>MAX</title>
<para
>Die Funktion MAX() ergibt den größten Wert, der als Parameter angegeben wurde. Zeichenfolge und boolesche Werte werden ignoriert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MAX(Wert;Wert;...)</para
></listitem>
</varlistentry>

<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MAX(12;5; 7) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MAX(12,5; 2) ergibt 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MAXA(0,5; 0,4; Wahr; 0,2) ergibt 0,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAXA">
<title
>MAXA</title>
<para
>Die Funktion MAXA() gibt den größten als Parameter übergebenen Wert zurück ohne boolesche Werte zu ignorieren. Der boolesche Wert Wahr entspricht 1, der Wert Falsch entspricht 0. Zeichenfolgen werden ignoriert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MAXA(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MAXA(12;5; 7) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MAXA(12,5; 2) ergibt 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MAXA(0,5; 0,4; Wahr; 0,2) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDETERM">
<title
>MDETERM</title>
<para
>Die Funktion MDETERM gibt die Determinante einer gegebenen Matrix aus. Die Matrix muss vom Typ n x n sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MDETERM(Matrix)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Bereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MDETERM(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MMULT"
>MMULT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIN">
<title
>MIN</title>
<para
>Die Funktion MIN() ergibt den kleinsten Wert, welcher als Parameter angegeben wurde. Zeichenfolgen und boolesche Werte werden ignoriert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MIN(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MIN(12;5; 7) ergibt 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MIN(12,5; 2) ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MIN(0,4, 2; Falsch, 0,7) ergibt 0,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINA">
<title
>MINA</title>
<para
>Die Funktion MINA() gibt den kleinsten als Parameter übergebenen Wert zurück ohne boolesche Werte zu ignorieren. Der boolesche Wert Wahr entspricht 1, der Wert Falsch entspricht 0. Zeichenfolgen werden ignoriert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MINA(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MINA(12;5;7) ergibt 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MINA(12,5; 2) ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MINA(0,4, 2; Falsch, 0,7) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINVERSE">
<title
>MINVERSE</title>
<para
>Berechnet die Inverse der Matrix.</para>
<para
>Die Matrix multipliziert mit ihrer Inversen ergibt die Einheitsmatrix derselben Dimension.</para>
<para
>Die Determinante invertierbarer Matrizen ist nicht 0.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MINVERSE(Matrix)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Matrix</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MINVERSE(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
<member
><link linkend="MUNIT"
>MUNIT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MMULT">
<title
>MMULT</title>
<para
>Die Funktion MMULT multipliziert zwei Matrizen. Die Spaltenanzahl der ersten Matrix muss der Zeilenanzahl der zweiten entsprechen. Das Ergebnis ist eine Matrix.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MMULT(Matrix1;Matrix2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erste Matrix</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zweite Matrix</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MMULT(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MOD">
<title
>MOD</title>
<para
>Die Funktion MOD() ergibt den Rest einer Division des ersten Parameters mit dem zweiten Parameter. Wenn der zweite Parameter null ist, wird #DIV/0 zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MOD(Wert;Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MOD(12;5) ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MOD(5;5) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MROUND">
<title
>MROUND</title>
<para
>Die Funktion MROUND() ergibt den Wert auf ein angegebenes Vielfaches gerundet zurück. Der Wert und das Vielfache müssen dasselbe Vorzeichen haben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MROUND(Wert; Vielfaches)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Vielfaches</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MROUND(1,252; 0,5) ergibt 1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MROUND(-1,252; -0,5) ergibt -1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTINOMIAL">
<title
>MULTINOMIAL</title>
<para
>Die Funktion MULTINOMIAL() berechnet das „Multinom“ für die Zahlen in der Parameterliste. Die folgende Formel wird für MULTINOMIAL(a,b,c) verwendet:</para>
<para
>(a+b+c)! / a!b!c!</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MULTINOMIAL(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MULTINOMIAL(3;4;5) ergibt 27720</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLY">
<title
>MULTIPLY</title>
<para
>Die Funktion MULTIPLY() multipliziert alle als Parameter angegebenen Werte miteinander. Sie können einen Wertbereich MULTIPLY(A1:B5), aber auch eine Wertliste MULTIPLY(12;5;12,5) angeben. Sie ist mit der PRODUCT-Funktion identisch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MULTIPLY(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MULTIPLY(12;5;7) ergibt 420</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MULTIPLY(12,5;2) ergibt 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MUNIT">
<title
>MUNIT</title>
<para
>Erstellt die Einheitsmatrix der angegebenen Dimension.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MUNIT(Dimension)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Dimension</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MUNIT(3) erstellt eine 3×3 Einheitsmatrix.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MINVERSE"
>MINVERSE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODD">
<title
>ODD</title>
<para
>Die Funktion ODD() rundet eine Zahl auf die nächste ungerade ganze Zahl auf (oder ab für negative Zahlen). ODD(0) ist definitionsgemäß 1.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ODD(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ODD(1,2) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ODD(2) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ODD(-2) ergibt -3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="EVEN"
>EVEN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POW">
<title
>POW</title>
<para
>Die Funktion POW(x;y) ergibt dem Wert x potenziert mit y. (x „hoch“ y). Sie ist identisch mit der POWER-Funktion.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>POW(Wert;Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POW(1,2;3,4) ergibt 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POW(2;3) ergibt 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="POWER"
>POWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POWER">
<title
>POWER</title>
<para
>Die Funktion POWER(x;y) ergibt dem Wert x potenziert mit y. (x „hoch“ y).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>POWER(Wert;Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POWER(1,2;3,4) ergibt 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POWER(2;3) ergibt 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="POW"
>POW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRODUCT">
<title
>PRODUCT</title>
<para
>Die Funktion PRODUCT() berechnet das Produkt von allen als Parameter übergebenen Werten. Sie können das Produkt eines Zellbereichs: PRODUCT(A1:B5) oder der Liste von Parametern wie PRODUCT(12;5;12,5) berechnen lassen. Wenn keine numerischen Werte gefunden werden ergibt die Funktion 0.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PRODUCT(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PRODUCT(3;5;7) ergibt 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PRODUCT(12,5;2) ergibt 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="QUOTIENT">
<title
>QUOTIENT</title>
<para
>Die Funktion QUOTIENT() ergibt den ganzzahligen Teil des angegebenen Quotienten Zähler / Nenner.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>QUOTIENT(Zähler;Nenner)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zähler</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Nenner</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>QUOTIENT(21;4) ergibt 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="INT"
>INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RAND">
<title
>RAND</title>
<para
>Die Funktion RAND() gibt eine pseudo-zufällige Zahl zwischen 0 und 1 zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RAND()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RAND() ergibt z. B. 0,78309922...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RANDBETWEEN"
>RANDBETWEEN</link
>&nbsp;</member>
<member
><link linkend="RANDEXP"
>RANDEXP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBERNOULLI">
<title
>RANDBERNOULLI</title>
<para
>Die Funktion RANDBERNOULLI() gibt eine Bernoulli-verteilte pseudo-zufällige Zahl zurück.</para>

<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RANDBERNOULLI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (zwischen 0 und 1)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RANDBERNOULLI(0,45)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBETWEEN">
<title
>RANDBETWEEN</title>
<para
>Die Funktion RANDBETWEEN() gibt eine pseudo-zufällige Zahl zwischen dem oberen und dem unteren Wert zurück. Ist der untere Wert größer als der obere, gibt diese Funktion „Err“ zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RANDBETWEEN(Unterer;Oberer)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Unterer Wert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Oberer Wert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RANDBETWEEN(12;78) ergibt z. B. 61,0811...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBINOM">
<title
>RANDBINOM</title>
<para
>Die Funktion RANDBINOM() gibt eine binomisch verteilte pseudo-zufällige zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RANDBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (zwischen 0 und 1)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Versuche (größer 0)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RANDBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDNEGBINOM"
>RANDNEGBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDEXP">
<title
>RANDEXP</title>
<para
>Die Funktion RANDEXP() gibt eine exponentiell verteilte pseudo-zufällige Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RANDEXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (größer als 0)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RANDEXP(0,88)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNEGBINOM">
<title
>RANDNEGBINOM</title>
<para
>Die Funktion RANDNEGBINOM() gibt eine negativ binomisch verteilte pseudo-zufällige Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RANDNEGBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (zwischen 0 und 1)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fehler (größer 0)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RANDNEGBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDBINOM"
>RANDBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNORM">
<title
>RANDNORM</title>
<para
>Die Funktion RANDNORM() gibt eine normal-(Gauß-)verteilte pseudo-zufällige Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RANDNORM(mü; sigma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Mittelwert der Normalverteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Standardabweichung der Normalverteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RANDNORM(0; 1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDPOISSON">
<title
>RANDPOISSON</title>
<para
>Die Funktion RANDPOISSON() gibt eine Poisson-verteilte pseudo-zufällige Zahl zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RANDPOISSON(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (größer als 0)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RANDPOISSON(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROOTN">
<title
>ROOTN</title>
<para
>Die Funktion ROOTN() ergibt die nicht negative n-te Wurzel von x.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ROOTN(x;n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Wert</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROOTN(9;2) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUND">
<title
>ROUND</title>
<para
>Die Funktion ROUND(Wert;[Ziffern]) gibt die gerundete Zahl zurück. „Ziffern“ ist dabei die Anzahl der Nachkommaziffern, auf welche Sie die Zahl runden möchten. Falls Sie „Ziffern“ weglassen oder auf 0 setzen, wird die angegebene Zahl auf den nächsten ganzzahligen Wert gerundet. Wenn „Ziffern“ kleiner als 0 ist, wird die Zahl auf einen entsprechende ganzzahligen Wert gerundet.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ROUND(Wert;[Ziffern])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Ziffern</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUND(1,252;2) ergibt 1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUND(-1,252;2) ergibt -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUND(1,258;2) ergibt 1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUND(-12,25;-1) ergibt -10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUND(-1,252;0) ergibt -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MROUND"
>MROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDDOWN">
<title
>ROUNDDOWN</title>
<para
>Die Funktion ROUNDDOWN(Wert;[Ziffern]) gibt eine Zahl mit abgerundetem Betrag zurück. „Ziffern“ ist dabei die Anzahl der Nachkommaziffern, auf welche Sie die Zahl runden möchten. Falls Sie „Ziffern“ weglassen oder auf 0 setzen, wird die angegebene Zahl auf den nächsten ganzzahligen Wert abgerundet.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ROUNDDOWN(Wert; [Ziffern])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Ziffern</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUNDDOWN(1,252) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUNDDOWN(1,252;2) ergibt 1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUNDDOWN(-1,252;2) ergibt -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUNDDOWN(-1,252) ergibt -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDUP">
<title
>ROUNDUP</title>
<para
>Die Funktion ROUNDUP(Wert;[Ziffern]) gibt eine Zahl mit aufgerundetem Betrag zurück. „Ziffern“ ist dabei die Anzahl der Nachkommaziffern, auf welche Sie die Zahl runden möchten. Falls Sie „Ziffern“ weglassen oder auf 0 setzen, wird die angegebene Zahl auf den nächsten ganzzahligen Wert aufgerundet.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ROUNDUP(Wert;[Ziffern])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Ziffern</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUNDUP(1,252) ergibt 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUNDUP(1,252;2) ergibt 1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUNDUP(-1,252;2) ergibt -1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROUNDUP(-1,252) ergibt -2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SERIESSUM">
<title
>SERIESSUM</title>
<para
>Die Funktion SERIESSUM() gibt die Summe einer Potenzreihe zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SERIESSUM( X; N; M; Koeffizienten)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>X ist die unabhängige Variable der Potenzreihe</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>N ist die Anfangspotenz, in die Sie x erheben möchten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>M ist das Inkrement, um das Sie N in jedem Glied der Reihe vergrößern möchten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Koeffizienten ist eine Gruppe von Koeffizienten, mit denen die aufeinander folgenden Potenzen der Variablen X multipliziert werden</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SERIESSUM(2;0;2;{1;2}) ergibt 9</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIGN">
<title
>SIGN</title>
<para
>Diese Funktion ergibt -1, wenn die Zahl negativ ist. Sie ergibt 0, wenn die Zahl null ist. Sie ergibt 1, wenn die Zahl positiv ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SIGN(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SIGN(5) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SIGN(0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SIGN(-5) ergibt -1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRT">
<title
>SQRT</title>
<para
>Die Funktion SQRT() ergibt die nicht negative Quadratwurzel des Arguments. Wenn das Argument negativ ist, wird ein Fehler zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SQRT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SQRT(9) ergibt 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SQRT(-9) ergibt einen Fehler</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="IMSQRT"
>IMSQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRTPI">
<title
>SQRTPI</title>
<para
>Die Funktion SQRTPI() ergibt die nicht negative Quadratwurzel von x * PI. Wenn das Argument negativ ist, wird ein Fehler zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SQRTPI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ein Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SQRTPI(2) ergibt 2,506628</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBTOTAL">
<title
>SUBTOTAL</title>
<para
>Die Funktion SUBTOTAL() gibt eine Zwischensumme von einer angegebenen Liste von Argumenten. Dabei werden andere Zwischensummen ignoriert. Funktion kann eine der folgenden Zahlen sein: 1 – Average, 2 – Count, 3 – CountA, 4 – Max, 5 – Min, 6 – Product, 7 – StDev, 8 – StDevP, 9 – Sum, 10 – Var, 11 – VarP.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUBTOTAL(Funktion; Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Funktion</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>Wenn A1:A5 7, 24, 23, 56 und 9 enthält:</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUBTOTAL(1; A1:A5) ergibt 23,8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUBTOTAL(4; A1:A5) ergibt 56</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUBTOTAL(9; A1:A5) ergibt 119</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUBTOTAL(11; A1:A5) ergibt 307,76</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="AVERAGE"
>AVERAGE</link
>&nbsp;</member>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM">
<title
>SUM</title>
<para
>Die Funktion SUM() berechnet die Summe von allen Werten, welche als Parameter angegeben wurden. Sie können die Summe eines Zellbereichs SUM(A1:B5) oder einer Werteliste SUM(12;5;12,5) berechnen lassen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUM(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUM(12;5;7) ergibt 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUM(12,5;2) ergibt 14,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SUMA"
>SUMA</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMA">
<title
>SUMA</title>
<para
>Die Funktion SUMA() berechnet die Summe von allen als Parameter übergebenen Werten. Sie können die Summe von einem Zellbereich SUMA(A1:B5) oder eine Liste von Parametern wie SUMA(12;5;12,5) berechnen lassen. Wenn ein Parameter Text enthält, oder den booleschen Wert Falsch wird er als 0 gezählt. Wenn ein Parameter den booleschen Wert Wahr enthält wird dieser als 1 gezählt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUM(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMA(12;5; 7) ergibt 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMA(12,5; 2; Wahr) ergibt 15,5</para
></listitem>
</varlistentry>

<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMIF">
<title
>SUMIF</title>
<para
>Die Funktion SUMIF() berechnet die Summe aller als Parameter übergebenen Werte, die die Bedingung erfüllen. Die Angabe des Summenbereichs ist optional. Wird er nicht übergeben, werden die Werte in Bereich summiert. Die Länge von Bereich sollte kleiner oder gleich der Länge von Summenbereich sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUMIF(Bereich;Bedingung;Summenbereich)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Prüfbereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Kriterium</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Bereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMIF(A1:A4;"
>1") summiert alle Werte im Bereich A1:A4, die die Bedingung 
>1 erfüllen</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMIF(A1:A4;"=0";B1:B4) summiert alle Werte im Bereich B1:B4 wenn der entsprechende Wert in A1:A4 die Bedingung =0 erfüllt.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMSQ">
<title
>SUMSQ</title>
<para
>Die Funktion SUMSQ() berechnet die Summe der Quadrate der übergebenen Werte („hoch 2“). Sie können die Summe eines Zellbereichs SUMSQ(A1:B5) oder einer Werteliste SUMSQ(12;5;12,5) berechnen lassen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUMSQ(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Werte</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMSQ(12;5;7) ergibt 218</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMSQ(12;5;2) ergibt 173</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRANSPOSE">
<title
>TRANSPOSE</title>
<para
>Ergibt die Transponierte einer Matrix. Das bedeutet, dass Zeilen und Spalten der Matrix ausgetauscht sind.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TRANSPOSE(Matrix)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Matrix</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TRANSPOSE(A1:C3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUNC">
<title
>TRUNC</title>
<para
>Die Funktion TRUNC() beschneidet einen Wert auf eine angegebene Genauigkeit. Wenn der Parameter Genauigkeit fehlt, wird 0 angenommen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TRUNC(Wert; Genauigkeit)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Genauigkeit</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TRUNC(1,2) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TRUNC(213,232; 2) ergibt 213,23</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Statistical">
<title
>Statistik</title>

<sect3 id="AVEDEV">
<title
>AVEDEV</title>
<para
>Die Funktion AVEDEV() berechnet den Durchschnitt der absoluten Abweichungen eines Wertbereiches AVEDEV(A1:B5) oder einer Liste von Werten AVEDEV(12;5;12,5) von seinem Mittelwert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>AVEDEV(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AVEDEV(11,4;17,3;21,3;25,9;40,1) ergibt 7,84</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AVEDEV(A1:A5) ...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGE">
<title
>AVERAGE</title>
<para
>Die Funktion AVERAGE() berechnet den Durchschnitt aller als Parameter angegebenen Werte. Sie können einen Wertbereich AVERAGE(A1:B5), aber auch eine Liste von Werten AVERAGE(12;5;12,5) berechnen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>AVERAGE(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AVERAGE(12;5;7) ergibt 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AVERAGE(12,5;2) ergibt 7,25</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGEA">
<title
>AVERAGEA</title>
<para
>Die Funktion AVERAGEA() berechnet den Durchschnitt der angegebenen Parameter. Sowohl Zahlen als auch Text und boolesche Werte werden in der Berechnung verwendet. Wenn die Zelle Text oder „Falsch“ enthält, wird sie als null (0) gewertet. Wenn ein boolesches „Wahr“ in der Zelle steht, wird es als 1 gewertet. Leere Zellen werden nicht in die Berechnung mit einbezogen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>AVERAGEA(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zeichenfolgen</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>AVERAGEA(11,4;17,3;"eintext";25,9;40,1) ergibt 18,94</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETADIST">
<title
>BETADIST</title>
<para
>Die Funktion BETADIST() gibt die kumulierte Beta-Wahrscheinlichkeitsdichte zurück.</para>
<para
>Der dritte und vierte Parameter sind optional. Sie geben die untere und die obere Schranke an. Wenn sie weggelassen werden, werden Standardwerte von 0,0 bzw. 1,0 verwendet.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BETADIST(Zahl;Alpha;Beta;Start;Ende;[kumulativ=WAHR])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Alpha-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Beta-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Start</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Ende</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Kumulativ</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BETADIST(0,2859;0,2606;0,8105) ergibt 0,675444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BETADIST(0,2859;0,2606;0,8105;0,2;0,9) ergibt 0,537856</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETAINV">
<title
>BETAINV</title>
<para
>Die Funktion BETAINV() ergibt die Umkehrfunktion von BETADIST(x;Alpha;Beta;a;b;WAHR()).</para>
<para
>Die Start- und Endparameter sind optional. Sie geben die untere und die obere Schranke an. Wenn sie weggelassen werden, werden Standardwerte von 0,0 bzw. 1,0 verwendet.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BETAINV(Zahl;Alpha;Beta [; Start=0 [; Ende=1]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Alpha-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Beta-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Start</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Ende</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BETADIST(BETAINV(0,1;3;4);3;4) ergibt 0,1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BETADIST(BETAINV(0,3;3;4);3;4) ergibt 0,3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BINO">
<title
>BINO</title>
<para
>Die Funktion BINO() gibt die binomische Verteilung zurück.</para>
<para
>Der erste Parameter ist die Zahl der Versuche, der zweite Parameter ist die Zahl der Erfolge und der dritte Parameter ist die Wahrscheinlichkeit des Erfolgs. Die Zahl der Versuche sollte größer sein als die Zahl der Erfolge und die Wahrscheinlichkeit sollte kleiner oder 1 sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BINO(Versuche;Erfolge;Wahrsch_des_Erfolgs)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Anzahl der Versuche</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl erfolgreicher Versuche</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Wahrscheinlichkeit des Erfolges</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BINO(12;9;0,8) ergibt 0,236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHIDIST">
<title
>CHIDIST</title>
<para
>Die Funktion CHIDIST() berechnet aus einem angegebenen Chi-Quadrat den Wahrscheinlichkeitswert, dass eine Hypothese bestätigt wird.</para>
<para
>CHIDIST vergleicht den für eine Zufallsstichprobe zu gebenden Chiquadratwert, der aus folgender Summe errechnet wird: (beobachteter Wert-erwarteter Wert)^2/erwarteter Wert für alle Werte mit der theoretischen Chiquadratverteilung und berechnet daraus die Wahrscheinlichkeit des Fehlers, um die Hypothese zu prüfen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CHIDIST(Zahl;Freiheitsgrade)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Freiheitsgrade</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CHIDIST(13,27;5) ergibt 0,021</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBIN">
<title
>COMBIN</title>
<para
>Die Funktion COMBIN() berechnet die Zahl der möglichen Kombinationen. Der erste Parameter ist die Gesamtzahl der Elemente. Der zweite Parameter ist die Anzahl der zu wählenden Elemente. Diese beiden Parameter müssen positiv sein, sonst gibt die Funktion einen Fehler zurück. Der erste Parameter muss größer als der zweite sein, sonst gibt die Funktion auch einen Fehler zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COMBIN(gesamt;gewählt)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Anzahl der Elemente</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der auszuwählenden Elemente</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMBIN(12;5) ergibt 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMBIN(5;5) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBINA">
<title
>COMBINA</title>
<para
>Die Funktion COMBINA() berechnet die Zahl der möglichen Kombinationen. Der erste Parameter ist die Gesamtzahl der Elemente. Der zweite Parameter ist die Anzahl der zu wählenden Elemente. Diese beiden Parameter müssen positiv sein, sonst gibt die Funktion einen Fehler zurück. Der erste Parameter muss größer als der zweite sein, sonst gibt die Funktion auch einen Fehler zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COMBIN(gesamt;gewählt)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Anzahl der Elemente</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der auszuwählenden Elemente</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMBIN(12;5) ergibt 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMBIN(5;5) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONFIDENCE">
<title
>CONFIDENCE</title>
<para
>Die Funktion CONFIDENCE() gibt den Vertrauensbereich eines Populationsmittel zurück.</para>
<para
>Der Alpha-Parameter muss zwischen 0 und 1 liegen (exklusive 0 und 1 selbst), stddev muss positiv und Größe muss größer gleich 1 sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CONFIDENCE(alpha;stddev;Größe)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Ebene des Konfidenzintervalls</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Standardabweichung für die gesamte Population</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Größe der ganzen Population</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CONFIDENCE(0,05;1,5;100) ergibt 0,294059</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CORREL">
<title
>CORREL</title>
<para
>Die Funktion CORREL() berechnet den Korrelationskoeffizienten von zwei Zellbereichen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CORREL(Bereich1; Bereich2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zellbereich von Werten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zweiter Zellbereich von Werten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CORREL(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="PEARSON"
>PEARSON</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COVAR">
<title
>COVAR</title>
<para
>Die Funktion COVAR() berechnet die Kovarianz von zwei Zellbereichen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COVAR(Bereich1; Bereich2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zellbereich von Werten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zweiter Zellbereich von Werten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COVAR(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEVSQ">
<title
>DEVSQ</title>
<para
>Die Funktion DEVSQ() berechnet die Summe von quadratischen Abweichungen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DEVSQ(Wert; Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEVSQ(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEVSQ(21; 33; 54; 23) ergibt 684,75</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXPONDIST">
<title
>EXPONDIST</title>
<para
>Die Funktion EXPONDIST() gibt die exponentielle Verteilung zurück.</para>
<para
>Der lambda Parameter muss positiv sein.</para>
<para
>Kumulativ = 0 berechnet die Dichtefunktion, Kumulativ = 1 berechnet die Verteilung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EXPONDIST(Zahl;lambda;kumulativ)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Lambda-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = Dichte, 1 = Verteilung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EXPONDIST(3;0,5;0) ergibt 0,111565</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EXPONDIST(3;0,5;1) ergibt 0,776870</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FDIST">
<title
>FDIST</title>
<para
>Die Funktion FDIST() gibt die f-Verteilung zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FDIST(Zahl;Freiheitsgrade_1;Freiheitsgrade_2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Freiheitsgrade 1</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Freiheitsgrade 2</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FDIST(0,8;8;12) ergibt 0,61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINV">
<title
>FINV</title>
<para
>Die Funktion FINV() ergibt die eindeutige, nicht negative Zahl X, sodass gilt FDIST(x;r1;r2) = p.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FINV(Zahl; r1; r2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zahl r1</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Zahl r2</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FDIST(FINV(0,1;3;4);3;4) ergibt 0,1</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="FISHER">
<title
>FISHER</title>
<para
>Die Funktion FISHER() ergibt die Fisher-Transformation für x und erzeugt eine der Normalverteilung ähnliche Funktion.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FISHER(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FISHER(0,2859) ergibt 0,294096</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FISHER(0,8105) ergibt 1,128485</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FISHERINV">
<title
>FISHERINV</title>
<para
>Die Funktion FISHERINV() ergibt die Inverse der Fisher-Transformation für x und erzeugt eine der Normalverteilung ähnliche Funktion.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FISHERINV(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FISHERINV(0,2859) ergibt 0,278357</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FISHERINV(0,8105) ergibt 0,669866</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FREQUENCY">
<title
>FREQUENCY</title>
<para
>Zählt die Anzahl an Werten für jedes, durch die Grenzwerte im zweiten Parameter definierte, Intervall.</para>
<para
>Die Werte des zweiten Parameters bestimmen die obere Grenze der Intervalle. Die Intervalle schließen die obere Grenze mit ein. Der ausgegebene Wert ist ein Spaltenvektor und hat ein Element mehr als der zweite Parameter. Das letzte Element repräsentiert die Anzahl aller Elemente, die größer sind als der letzte Wert im zweiten Parameter. Wenn der zweite Parameter nicht angegeben wird, werden alle Werte des ersten Parameters gezählt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FREQUENCY(Daten; Klassen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte, die gezählt werden sollen.</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte, die die oberen Grenzen der Intervalle angeben.</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMADIST">
<title
>GAMMADIST</title>
<para
>Die Funktion GAMMADIST() gibt die Gamma-Verteilung zurück.</para>
<para
>Wenn der letzte Parameter (kumuliert) 0 ist, wird die Dichtefunktion berechnet. Wenn der Parameter 1 ist, wird die Verteilung berechnet.</para>
<para
>Die ersten drei Parameter müssen positiv sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>GAMMADIST(Zahl; Alpha; Beta; kumuliert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Alpha-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Beta-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Kumuliert-Schalter</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GAMMADIST(0,758;0,1;0,35;1) ergibt 0,995450</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GAMMADIST(0,758;0,1;0,35;0) ergibt 0,017179</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMAINV">
<title
>GAMMAINV</title>
<para
>Die Funktion GAMMAINV() ergibt die eindeutige Zahl x 
>=0, sodass gilt GAMMAINV(x;Alpha;Beta;WAHR()) = p.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>GAMMAINV(Zahl; Alpha; Beta)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Alpha-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Beta-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0,1;3;4);3;4) ergibt 0,1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0,3;3;4);3;4) ergibt 0,3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMALN">
<title
>GAMMALN</title>
<para
>Die Funktion GAMMALN() gibt den natürlichen Logarithmus der Gamma-Funktion G(x) zurück. Der Parameter „Zahl“ muss positiv sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>GAMMALN(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GAMMALN(2) ergibt 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAUSS">
<title
>GAUSS</title>
<para
>Die Funktion GAUSS() berechnet die Integralwerte für die kumulative Standardnormalverteilung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>GAUSS(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Die Zahl, für die der Integralwert der Standardnormalverteilung berechnet werden soll.</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GAUSS(0,25) ergibt 0,098706</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GEOMEAN">
<title
>GEOMEAN</title>
<para
>Die Funktion GEOMEAN() gibt das geometrische Mittel der angegebenen Argumente zurück. Dies entspricht der N-ten Wurzel des Produkts der Werte.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>GEOMEAN(Wert; Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GEOMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>GEOMEAN(21; 33; 54; 23) ergibt 30,45886</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="HARMEAN"
>HARMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HARMEAN">
<title
>HARMEAN</title>
<para
>Die Funktion HARMEAN() berechnet das harmonische Mittel von den N Datenpunkten (N dividiert durch die Summe des Inversen der Datenpunkte).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>HARMEAN(Wert; Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HARMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HARMEAN(21; 33; 54; 23) ergibt 28,588</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="GEOMEAN"
>GEOMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HYPGEOMDIST">
<title
>HYPGEOMDIST</title>
<para
>Die Funktion HYPGEOMDIST() gibt die Hypergeometrische Verteilung zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>HYPGEOMDIST(x; n; M; N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Anzahl der Erfolge in der Probe</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Versuche</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Erfolge insgesamt</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Populationsgröße</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>HYPGEOMDIST(2; 5; 6; 20) ergibt 0,3522</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTERCEPT">
<title
>INTERCEPT</title>
<para
>Die Funktion INTERCEPT() berechnet den Schnittpunkt der Regressionsgeraden mit der Y-Achse.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>INTERCEPT(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Y-Werte (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>X-Werte (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INVBINO">
<title
>INVBINO</title>
<para
>Die Funktion INVBINO() ergibt die negative binomische Verteilung. Der erste Parameter ist die Zahl der Versuche, der zweite Parameter die Zahl der Misserfolge und die dritte Zahl ist die Wahrscheinlichkeit des Misserfolgs. Die Zahl der Versuche sollte größer sein als die Zahl der Misserfolge und die Wahrscheinlichkeit sollte kleiner oder gleich 1 sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>INVBINO(Versuche;Misserfolge;Wahrsch_des_Misserfolgs)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Anzahl der Versuche</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Zahl der Misserfolge</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Wahrscheinlichkeit des Misserfolgs</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>INVBINO(12;3;0,2) ergibt 0,236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURT">
<title
>KURT</title>
<para
>Die Funktion KURT() berechnet eine erwartungstreue Schätzung der Kurtosis eines Datensatzes. Sie müssen mindestens 4 Werte angeben, sonst wird ein Fehler zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>KURT(Wert; Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>KURT(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>KURT(21; 33; 54; 23) ergibt 1,344239</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="KURTP"
>KURTP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURTP">
<title
>KURTP</title>
<para
>Die Funktion KURTP() berechnet eine Population-Kurtosis eines Datensatzes. Sie müssen mindestens 4 Werte angeben, sonst wird ein Fehler zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>KURTP(Wert; Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>KURTP(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>KURTP(21; 33; 54; 23) ergibt -1,021</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="KURT"
>KURT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LARGE">
<title
>LARGE</title>
<para
>Die Funktion LARGE() gibt die „k“ größte Zahl aus dem Datensatz zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LARGE(Bereich; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zellbereich von Werten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Position (von dem größten)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> LARGE(A1:A3; 2) ergibt 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEGACYFDIST">
<title
>LEGACYFDIST</title>
<para
>Die Funktion LEGACYFDIST() gibt die f-Verteilung zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LEGACYFDIST(Zahl;Freiheitsgrade_1;Freiheitsgrade_2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Freiheitsgrade 1</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Freiheitsgrade 2</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LEGACYFDIST(0,8;8;12) ergibt 0,61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGINV">
<title
>LOGINV</title>
<para
>Die Funktion LOGINV() berechnet das Inverse der lognormal kumulativen Verteilung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LOGINV(p; Mitte; Standardverteilung)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wahrscheinlichkeit</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Mittelwert der logarithmischen Standardverteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Standardabweichung der logarithmischen Standardverteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOGINV(0,1;0;1) ergibt 0,2776</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGNORMDIST">
<title
>LOGNORMDIST</title>
<para
>Die Funktion LOGNORMDIST() gibt die kumulative lognormale Verteilung zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LOGNORMDIST(Number;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wahrscheinlichkeitswert, für den die logarithmische Standardverteilung berechnet werden soll</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Mittelwert der logarithmischen Standardverteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Standardabweichung der logarithmischen Standardverteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOGNORMDIST(0,1;0;1) ergibt 0,01</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MEDIAN">
<title
>MEDIAN</title>
<para
>Die Funktion MEDIAN() berechnet den Median von allen Werten, die als Parameter angegeben wurden. Sie können den Median eines Zellbereichs MEDIAN(A1:B5) oder einer Werteliste MEDIAN(12; 5; 12,5) berechnen lassen. Leere Zellen werden wie Zellen, die eine 0 enthalten, behandelt. Zellen, die Text enthalten, werden ignoriert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MEDIAN(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert oder Wertbereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte oder Wertbereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte oder Wertbereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte oder Wertbereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte oder Wertbereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MEDIAN(12; 5; 5,5) ergibt 5,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MEDIAN(12; 7; 8;2) ergibt 7,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MODE">
<title
>MODE</title>
<para
>Die Funktion MODE() gibt die am häufigsten vorkommende Zahl in einem Satz von Daten zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MODE(Zahl1; Zahl2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MODE(12; 14; 12; 15) ergibt 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NEGBINOMDIST">
<title
>NEGBINOMDIST</title>
<para
>Die Funktion NEGBINOMDIST() gibt die negative binomische Verteilung zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NEGBINOMDIST(Fehler; Erfolge; Wahrscheinlichkeit des Erfolges)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl der Misserfolge</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl erfolgreicher Versuche</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Wahrscheinlichkeit des Erfolges</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NEGBINOMDIST(2;5;0,55) ergibt 0,152872629</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMDIST">
<title
>NORMDIST</title>

<para
>Die Funktion NORMDIST() gibt die normale kumulative Verteilung zurück.</para>
<para
>Die Zahl für die Verteilung auf welcher die Standardnormalverteilung berechnet werden soll.</para>
<para
>MV ist die lineare Mitte der Verteilung.</para>
<para
>STD ist die Standardabweichung der Verteilung.</para>
<para
>K = 0 berechnet die dichte Funktion, K = 1 berechnet die Verteilung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NORMDIST(Zahl;MV;STD;K)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Lineare Mitte der Verteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Standardabweichung der Verteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = Dichte, 1 = Verteilung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NORMDIST(0,859;0,6;0,258;0) ergibt 0,934236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NORMDIST(0,859;0,6;0,258;1) ergibt 0,842281</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMINV">
<title
>NORMINV</title>
<para
>Die Funktion NORMINV() ergibt die Inverse der kumulativen Normalverteilung. Die Zahl muss zwischen 0 und 1 liegen (exklusive 0 und 1 selbst) und STD muss positiv sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NORMINV(Zahl;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wahrscheinlichkeitswert, für den die logarithmische Standardverteilung berechnet werden soll</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Mittelwert der Normalverteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Standardabweichung der Normalverteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NORMINV(0,9;63;5) ergibt 69,41</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSDIST">
<title
>NORMSDIST</title>
<para
>Die Funktion NORMSDIST() gibt die standard normal Verteilung zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NORMSDIST(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert für welche die Standardnormalverteilung berechnet werden soll</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NORMSDIST(1) ergibt 0,84</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSINV">
<title
>NORMSINV</title>
<para
>Die Funktion NORMSINV() ergibt die Inverse der kumulativen Standardnormalverteilung. Die Zahl muss zwischen 0 und 1 liegen (jedoch exklusive 0 und 1 selbst).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>NORMSINV(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>NORMSINV(0,908789) ergibt 1,3333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PEARSON">
<title
>PEARSON</title>
<para
>Die Funktion PEARSON() berechnet den Korrelationskoeffizienten von zwei Zellbereichen. Sie ist identisch mit der Funktion CORREL.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PEARSON(Bereich1; Bereich2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zellbereich von Werten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Zweiter Zellbereich von Werten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PEARSON(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CORREL"
>CORREL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERCENTILE">
<title
>PERCENTILE</title>
<para
>Die Funktion PERCENTILE() gibt das Perzentil oder die Überschreitungswahrscheinlichkeit von Datenwerten in Daten zurück. Ein Perzentil oder eine Überschreitungswahrscheinlichkeit ist der skalierte Wert einer Datenreihe vom kleinsten Wert (alpha=0) zum größten Wert (alpha=1) der Datenreihe. Alpha = 25 % ist das Quartil oder der Viertelwert. Alpha = 50 % ist der Median oder Mittelwert. Leere Zeilen werden als Null verarbeitet und Zellen mit Text werden ignoriert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PERCENTILE(daten;alpha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wertebereich</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Der Prozentwert zwischen 0 und 1 einschließlich dieser Werte.</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="MEDIAN"
>MEDIAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUT">
<title
>PERMUT</title>
<para
>Die PERMUT() Funktion ergibt die Anzahl der Permutationen. Der erste Parameter ist die Anzahl der Elemente und der zweite Parameter ist die Anzahl in der Permutation verwendeten Elemente.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PERMUT(gesamt;verwendet)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Anzahl der Elemente</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Elemente zum Permutieren</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PERMUT(8;5) ergibt 6720</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PERMUT(1;1) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUTATIONA">
<title
>PERMUTATIONA</title>
<para
>Die PERMUTATIONA() Funktion ergibt die Anzahl der geordneten Permutationen, wenn Wiederholungen erlaubt sind. Der erste Parameter ist die Anzahl der Elemente und der zweite Parameter ist die Anzahl in der Permutation auszuwählenden Elemente. Beide Parameter müssen positiv sein.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PERMUTATIONA(gesamt;gewählt)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Anzahl der Elemente</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der auszuwählenden Elemente</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PERMUTATIONA(2,3) ergibt 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PERMUTATIONA(0,0) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PHI">
<title
>PHI</title>
<para
>Die Funktion PHI() berechnet die Verteilungsfunktion für die Standardnormalverteilung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PHI(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Die Zahl, für die die Standardnormalverteilung berechnet werden soll.</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PHI(0,25) ergibt 0,386668</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POISSON">
<title
>POISSON</title>
<para
>Die Funktion POISSON() gibt die Poisson-Verteilung zurück.</para>
<para
>Der „Lambda“ und der „Zahl“ Parameter müssen positiv sein.</para>
<para
>Kumulativ = 0 berechnet die Dichtefunktion, Kumulativ = 1 berechnet die Verteilung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>POISSON(Zahl;lambda;kumulativ)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Lambda-Parameter (Mittelwert)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = Dichte, 1 = Verteilung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POISSON(60;50;0) ergibt 0,020105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>POISSON(60;50;1) ergibt 0,927840</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANK">
<title
>RANK</title>
<para
>Die Funktion RANK() ergibt den Rang, den eine Zahl innerhalb einer Liste von Zahlen einnimmt.</para>
<para
>Die Reihenfolge gibt an, wie der Rang der Zahlen bestimmt werden soll:</para>
<para
>Wenn die Reihenfolge 0 oder nicht angegeben ist, werden die Daten in absteigender Reihenfolge ermittelt.</para>
<para
>Wenn die Reihenfolge ungleich 0 ist, werden die Daten in aufsteigender Reihenfolge ermittelt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RSQ(Wert; Daten; Reihenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Daten (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Reihenfolge</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RANK (2;{1;2;3}) ergibt 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RSQ">
<title
>RSQ</title>
<para
>Die Funktion RSQ() ergibt das Quadrat des Pearsonschen Produktmomentkorrelationskoeffizienten entsprechend Datenpunkten in bekannten X- und Y-Werten. </para>
<para
>Wenn „BekanntesY“ und „BekanntesX“ leer sind oder eine unterschiedliche Anzahl von Datenpunkten haben, wird #N/A zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RSQ(BekanntesY; BekanntesX)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>BekanntesY (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>BekanntesX (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEW">
<title
>SKEW</title>
<para
>Die Funktion SKEW() gibt die voraussichtliche Schräge einer Verteilung zurück</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SKEW(Zahl1; Zahl2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SKEW(11,4; 17,3; 21,3; 25,9; 40,1) ergibt 0,9768</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SKEWP"
>SKEWP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEWP">
<title
>SKEWP</title>
<para
>Die Funktion SKEWP() gibt die Grundschräge einer Verteilung zurück</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SKEWP(Zahl1; Zahl2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SKEWP(11,4; 17,3; 21,3; 25,9; 40,1) ergibt 0,6552</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SKEW"
>SKEW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLOPE">
<title
>SLOPE</title>
<para
>Die Funktion SLOPE() berechnet die Steigung der Regressionsgeraden.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Y-Werte (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>X-Werte (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SMALL">
<title
>SMALL</title>
<para
>Die Funktion SMALL() gibt den „k“ kleinsten Wert von dem Datensatz zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SMALL(Bereich; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zellbereich von Werten</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Position (von dem kleinsten Wert)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> SMALL(A1:A3; 1) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STANDARDIZE">
<title
>STANDARDIZE</title>
<para
>Die Funktion STANDARDIZE() berechnet einen normalisierten Wert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>STANDARDIZE(x; Mittel, Standardabweichung)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl die normalisiert werden soll</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Der Mittelwert der Verteilung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Standardabweichung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>STANDARDIZE(4; 3; 7) ergibt 0,1429</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEV">
<title
>STDEV</title>
<para
>Die Funktion STDEV() gibt die geschätzte Standardabweichung basierend auf einer Probe zurück. Die Standardabweichung ist ein Maß wie weit die Werte vom Mittelwert gestreut sind.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>STDEV(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>STDEV(6;7;8) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVA">
<title
>STDEVA</title>
<para
>Die Funktion STDEVA() gibt die geschätzte Standardabweichung basierend auf einer Probe zurück. Die Standardabweichung ist ein Maß wie weit Werte vom Mittelwert gestreut sind. Wenn eine referenzierte Zelle Text oder den booleschen Wert Falsch enthält, wird er als 0 gezählt. Enthält eine Zelle den booleschen Wert Wahr, wird sie als 1 gezählt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>STDEVA(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) ergibt 1, wenn A1 leer ist</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) ergibt 3,109, wenn A1 Wahr ist</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVP">
<title
>STDEVP</title>
<para
>Die Funktion STDEVP() berechnet die Abweichung basierend auf der gesamten Population.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>STDEVP(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>STDEVP(6;7;8) ergibt 0,816497...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVPA">
<title
>STDEVPA</title>
<para
>Die Funktion STDEVPA() berechnet die Standardabweichung basierend auf der ganzen Population. Wenn eine referenzierte Zelle Text oder den booleschen Wert Falsch enthält, wird sie als 0 gezählt. Enthält die Zelle den booleschen Wert Wahr wird sie als 1 gezählt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>STDEVPA(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) ergibt 0,816497..., wenn A1 leer ist</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) ergibt 2,69..., wenn A1 Wahr ist.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) ergibt 3,11..., wenn A1 Falsch ist</para
></listitem>
</varlistentry>

<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STEYX">
<title
>STEYX</title>
<para
>Die Funktion STEYX() berechnet den Standardfehler des geschätzten Y-Wertes für jeden X-Wert der Regression.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Y-Werte (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>X-Werte (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM2XMY">
<title
>SUM2XMY</title>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMPRODUCT">
<title
>SUMPRODUCT</title>
<para
>Die Funktion SUMPRODUCT() gibt die Summe der Produkte (SUM(X*Y)) der angegebenen Werte zurück. Die Anzahl der Werte in beiden Feldern sollte gleich sein, sonst gibt die Funktion „Err“ zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUMPRODUCT(Feld1;Feld2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Wert (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMPRODUCT(A1:A2;B1:B2) mit A1=2 A2=5 B1=3 und B2=5 ergibt 31</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2MY2">
<title
>SUMX2MY2</title>
<para
>Die Funktion SUMX2MY2() gibt die Differenz des Quadrats (SUM(X^2-Y^2)) der angegebenen Werte zurück. Die Anzahl der Werte beider Felder muss gleich sein, sonst gibt die Funktion „Err“ zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUMX2MY2(Feld1;Feld2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Wert (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMX2MY2(A1:A2;B1:B2) mit A1=2 A2=5 B1=3 und B2=5 ergibt -5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2PY2">
<title
>SUMX2PY2</title>
<para
>Die Funktion SUMX2PY2() gibt die Summe der Quadrate (SUM(X^2+Y^2)) der angegebenen Werte zurück. Die Anzahl der Elemente jedes Feldes sollte gleich sein, sonst gibt die Funktion „Err“ zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUMX2PY2(Feld1;Feld2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Wert (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMX2PY2(A1:A2;B1:B2) mit A1=2 A2=5 B1=3 und B2=5 ergibt 63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMXMY2">
<title
>SUMXMY2</title>
<para
>Die Funktion SUMXMY2() gibt das Quadrat der Differenz (SUM((X-Y)^2)) der angegebenen Werte zurück. Die Anzahl der Werte in den beiden Feldern muss gleich sein, da die Funktion sonst einen Fehler zurückgibt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUMXMY2(Feld1;Feld2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Wert (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUMXMY2(A1:A2;B1:B2) mit A1=2, A2=5, B1=3 und B2=5 ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TDIST">
<title
>TDIST</title>
<para
>Die Funktion TDIST() gibt die t-Verteilung zurück.</para>
<para
>Modus = 1 gibt den einseitigen Test zurück, Modus = 2 gibt den zweiseitigen Test zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TDIST(Zahl;Freiheitsgrade;Modus)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Freiheitsgrade für die t-Verteilung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Modus (1 oder 2)</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TDIST(12;5;1) ergibt 0,000035</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TREND">
<title
>TREND</title>
<para
>Die Funktion TREND() berechnet eine Folge von Werten basierend auf einer linearen Regression von bekannten Wertepaaren.</para>
<para
>Vorgabe: COUNT(BekanntesY) = COUNT(BekanntesX).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TREND(BekanntesY[;BekanntesX[;NeuesX[;Konstante = WAHR]]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>BekanntesY</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>BekanntesX</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>NeuesX</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Konstante</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIMMEAN">
<title
>TRIMMEAN</title>
<para
>Die Funktion TRIMMEAN() berechnet den Mittelwert eines Datensatzes unter Auslassung der durch den Grenzbruch festgelegten Randwerte.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TRIMMEAN(Datensatz; Grenzbruch)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Datensatz</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Grenzbruch</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TTEST">
<title
>TTEST</title>
<para
>Die Funktion TTEST() berechnet die Wahrscheinlichkeit eines t-Tests.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TTEST(x; y; Typ; Modus)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>x (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>y (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Typ</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Modus</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VAR">
<title
>VAR</title>
<para
>Die Funktion VAR() berechnet die geschätzte Varianz, basierend auf einer Probe.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>VAR(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VAR(12;5;7) ergibt 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VAR(15;80;3) ergibt 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VAR(6;7;8) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="VARIANCE"
>VARIANCE</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARA">
<title
>VARA</title>
<para
>Die Funktion VARA() berechnet die Varianz basierend auf einer Probe.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>VARA(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARA(12;5;7) ergibt 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARA(15;80;3) ergibt 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARA(6;7;8) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARIANCE">
<title
>VARIANCE</title>
<para
>Die Funktion VARIANCE() berechnet die geschätzte Varianz, basierend auf einer Probe. Sie ist mit der Funktion VAR identisch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>VARIANCE(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARIANCE(12;5;7) ergibt 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARIANCE(15;80;3) ergibt 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARIANCE(6;7;8) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARP">
<title
>VARP</title>
<para
>Die Funktion VARP() berechnet die Varianz basierend auf der gesamten Population.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>VARP(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARP(12;5;7) ergibt 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARP(15;80;3) ergibt 1144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARP(6;7;8) ergibt 0,6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARPA">
<title
>VARPA</title>
<para
>Die Funktion VARPA() berechnet die Varianz basierend auf der gesamten Population. Text und boolesche Werte, die Falsch ergeben, werden als 0 gewertet, boolesche Werte, die Wahr ergeben, werden als 1 gewertet.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>VARPA(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Fließkommawerte</seg
><seg
>Eine Folge von Fließkommawerten (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARPA(12;5;7) ergibt 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARPA(15;80;3) ergibt 1144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VARPA(6;7;8) ergibt 0,6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEIBULL">
<title
>WEIBULL</title>
<para
>Die Funktion WEIBULL() gibt die Weibull-Verteilung zurück.</para>
<para
>Die Parameter Alpha und Beta müssen positiv sein, der erste Parameter Zahl darf nicht negativ sein.</para>
<para
>Kumulativ = 0 berechnet die Dichtefunktion, Kumulativ = 1 berechnet die Verteilung.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>WEIBULL(Zahl;Alpha;Beta;kumulativ)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Alpha-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Beta-Parameter</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = Dichte, 1 = Verteilung</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>WEIBULL(2;1;1;0) ergibt 0,135335</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>WEIBULL(2;1;1;1) ergibt 0,864665</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZTEST">
<title
>ZTEST</title>
<para
>Die Funktion ZTEST() berechnet die zweiseitige Wahrscheinlichkeit eines z-Tests mit Normalverteilung.</para>
<para
>Führt einen Test der Null-Hypothese durch, dass x ein Beispiel einer normal verteilten Zufallsprobe mit der dem angegebenen Mittelwert und der angegebenen  Standardabweichung. Ein Rückgabewert von 1 bedeutet, das die Null-Hypothese zurückgewiesen wurde, d. h. x ist keine zufällige Probe einer Normalverteilung.  Wenn die Standardabweichung nicht angegeben ist, wird sie mit der Funktion STDEV aus der Probe x ermittelt. </para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ZTEST(x; Mittelwert; Standardabweichung)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>x (Feld)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Mittelwert</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Standardabweichung</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Text">
<title
>Text</title>

<sect3 id="ASC">
<title
>ASC</title>
<para
>Die Funktion ASC() gibt die, dem Argument voller Breite entsprechenden, Zeichen halber Breite zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ASC(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichen voller Breite</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="JIS"
>JIS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BAHTTEXT">
<title
>BAHTTEXT</title>
<para
>Die Funktion BAHTTEXT() konvertiert eine Zahl in einen Text in Thai-Zeichen (baht).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>BAHTTEXT(Zahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>BAHTTEXT(23) ergibt "ยสบสามบาทถวน"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHAR">
<title
>CHAR</title>
<para
>Die Funktion CHAR() gibt den durch eine Zahl spezifizierten Buchstaben zurück. Die Zuordnung wird anhand des sogenannten ASCII-Zeichensatzes vorgenommen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CHAR(code)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichen-Code</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CHAR(65) ergibt "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="CLEAN">
<title
>CLEAN</title>
<para
>Die Funktion CLEAN() entfernt alle nicht druckbaren Zeichen aus einer Zeichenfolge.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CLEAN(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CLEAN(AsciiToChar(7) + "HALLO") ergibt "HALLO"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CODE">
<title
>CODE</title>
<para
>Die Funktion CODE() gibt eine Zahl für das erste Zeichen in einer Zeichenfolge zurück. Die Zuordnung wird anhand des sogenannten ASCII-Zeichensatzes vorgenommen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CODE(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Text</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CODE("KDE") ergibt 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPARE">
<title
>COMPARE</title>
<para
>Die Funktion COMPARE() gibt 0 zurück, wenn die beiden Zeichenfolgen übereinstimmen. Sie ergibt -1, wenn die erste bei alphabetischer Sortierung vor der zweiten kommt. Ansonsten ergibt sie 1.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COMPARE(Zeichenfolge1; Zeichenfolge2; Wahr|Falsch)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Erste Zeichenfolge</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zeichenfolge, mit der verglichen wird</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Vergleiche mit Beachtung der Groß-/Kleinschreibung (wahr/falsch)</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMPARE("Calligra"; "Calligra"; true) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMPARE("calligra"; "Calligra"; true) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COMPARE("kspread"; "Calligra"; false) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="EXACT"
>EXACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONCATENATE">
<title
>CONCATENATE</title>
<para
>Die Funktion CONCATENATE() ergibt eine Zeichenfolge, welche durch Aneinander hängen aller als Parameter übergebenen Zeichenfolgen entsteht.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CONCATENATE(Wert;Wert;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichenfolgen</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Zeichenfolgen</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Zeichenfolgen</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Zeichenfolgen</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem>
<seglistitem
><seg
>Zeichenfolgen</seg
><seg
>Eine Zeichenfolge</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CONCATENATE("Sheets";"Calligra";"KDE") ergibt "SheetsCalligraKDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLAR">
<title
>DOLLAR</title>
<para
>Die Funktion DOLLAR() konvertiert eine Zahl unter Verwendung des Währungsformates in eine Zeichenfolge. Die Nachkommastellen werden entsprechend gerundet. Obwohl der Name der Funktion DOLLAR ist, wird in die aktuell eingestellte Landeswährung umgewandelt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DOLLAR(Zahl;Dezimalstellen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Dezimalstellen</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DOLLAR(1403,77) ergibt „EUR 1 403,77“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DOLLAR(-0,123;4) ergibt „EUR -0,1230“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXACT">
<title
>EXACT</title>
<para
>Die Funktion EXACT() gibt Wahr zurück, wenn die beiden Zeichenfolgen übereinstimmen, ansonsten Falsch.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>EXACT(Zeichenfolge1;Zeichenfolge2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichenfolge</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EXACT("Calligra";"Calligra") ergibt Wahr</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>EXACT("KSpread";"Calligra") ergibt False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COMPARE"
>COMPARE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIND">
<title
>FIND</title>
<para
>Die Funktion FIND() sucht eine Zeichenfolge (find_text) in einer anderen Zeichenfolge (within_text) und gibt die Position des ersten Zeichens von „find_text“ in „within_text“ an.</para>
<para
>Der Parameter „start_num“ gibt das Zeichen an, bei dem die Suche gestartet werden soll. Das erste Zeichen hat die Position 1. Wenn „start_num“ nicht gegeben ist, wird ein Wert von 1 dafür angenommen.</para>
<para
>Sie können auch die Funktion SEARCH() verwenden, aber im Gegensatz zu SEARCH() beachtet FIND() Groß/Kleinschreibung und erlaubt keine Platzhalter.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FIND(find_text;within_text;start_num)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu suchende Text</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Der Text, in dem gesucht werden soll</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Gibt den Index an, an dem die Suche beginnt</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FIND("Cal";"Calligra") ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FIND("i";"Calligra") ergibt 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FIND("a";"Sheets in Calligra";4) ergibt 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINDB">
<title
>FINDB</title>
<para
>Die Funktion FINDB() sucht eine Zeichenfolge (find_text) in einer anderen Zeichenfolge (within_text) und gibt die Position des ersten Zeichens von „find_text“ in „within_text“ an unter Verwendung der Byteposition.</para>
<para
>Der Parameter „BytePosition“ gibt das Zeichen an, bei dem die Suche gestartet werden soll. Das erste Zeichen hat die Position 2. Wenn „BytePosition“ nicht gegeben ist, wird ein Wert von 2 dafür angenommen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FINDB(find_text;within_text;BytePosition Start)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu suchende Text</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Der Text, in dem gesucht werden soll</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Gibt die Byteposition an, an der die Suche beginnt</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIXED">
<title
>FIXED</title>
<para
>Die Funktion FIXED() rundet eine Zahl auf die angegebene Anzahl von Dezimalstellen, formatiert die Zahl entsprechend der Ländereinstellung für Dezimalzahlen und gibt das Ergebnis als Text aus. Wenn „Dezimalstellen“ negativ ist, wird entsprechend links vom Dezimalpunkt gerundet. Wenn Sie „Dezimalstellen“ weglassen, wird 2 als Wert angenommen. Wenn der optionale Parameter Kein_Tausendertrennzeichen Wahr ist, werden keine Tausender-Trennzeichen angezeigt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>FIXED(Zahl;Dezimalstellen;Kein_Tausendertrennzeichen)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zahl</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Dezimalstellen</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Kein_Tausendertrennzeichen</seg
><seg
>Wahrheitswert (WAHR oder FALSCH)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FIXED(1234,567;1) ergibt „1 234,6“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FIXED(1234,567;1;Wahr) ergibt „1234,6“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>FIXED(44,332) ergibt „44,33“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="JIS">
<title
>JIS</title>
<para
>Die Funktion JIS() gibt die, dem Argument halber Breite entsprechenden, Zeichen voller Breite zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>JIS(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichen halber Breite</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ASC"
>ASC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFT">
<title
>LEFT</title>
<para
>Die Funktion LEFT() ergibt eine Zeichenfolge, die der unter „Länge“ festgelegte Anzahl von Zeichen vom Anfang des angegebenen Textes entspricht. Wenn der Wert „Länge“ die Gesamtlänge der Zeichenfolge übersteigt, wird die ganze Zeichenfolge zurückgegeben. Negative Werte für „Länge“ führen zu einem Fehler.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LEFT(Text;Länge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Anzahl an Zeichen</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LEFT("Hallo";2) ergibt "Ha"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LEFT("KSpread";10) ergibt "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LEFT("KSpread") ergibt "K"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFTB">
<title
>LEFTB</title>
<para
>Die Funktion LEFTB() ergibt eine Zeichenfolge, die der unter „Länge“ festgelegte Anzahl von Zeichen vom Anfang des angegebenen Textes unter Verwendung der Byteposition entspricht. Wenn der Wert „Länge“ die Gesamtlänge der Zeichenfolge übersteigt, wird die ganze Zeichenfolge zurückgegeben. Negative Werte für „Länge“ führen zu einem Fehler.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LEFTB(Text;ByteLänge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Bytelänge</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEN">
<title
>LEN</title>
<para
>Die Funktion LEN() ergibt die Länge der übergebenen Zeichenfolge.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LEN(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LEN("Hallo") ergibt 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LEN("KSpread") ergibt 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LENB"
>LENB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LENB">
<title
>LENB</title>
<para
>Die Funktion LENB() ergibt die Länge der übergebenen Zeichenfolge unter Verwendung der Byteposition.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LENB(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOWER">
<title
>LOWER</title>
<para
>Die Funktion LOWER() konvertiert eine Zeichenfolge in Kleinbuchstaben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>LOWER(text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOWER("hallo") ergibt "hallo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>LOWER("HALLO") ergibt "hallo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MID">
<title
>MID</title>
<para
>Die Funktion MID() ergibt eine Teil-Zeichenfolge, bestehend aus einer bestimmten Anzahl Zeichen ab der Indexposition</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MID(Text;Position;Länge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Position</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Länge</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MID("Calligra";2;3) ergibt "all"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>MID("Calligra";2) ergibt "alligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIDB">
<title
>MIDB</title>
<para
>Die Funktion MIDB() ergibt eine Teil-Zeichenfolge, bestehend aus einer bestimmten Anzahl Zeichen ab der Indexposition unter Verwendung der Byteposition,</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>MIDB(Text;Byteposition Start;Bytelänge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Byteposition</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Bytelänge</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PROPER">
<title
>PROPER</title>
<para
>Die Funktion PROPER() wandelt den ersten Buchstaben jedes Wortes in einen Großbuchstaben und die restlichen Buchstaben in Kleinbuchstaben um.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PROPER(Zeichenfolge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PROPER("das ist ein titel") ergibt "Das Ist Ein Titel"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXP">
<title
>REGEXP</title>
<para
>Liefert den Teil einer Zeichenfolge, die einen regulären Ausdruck erfüllt. Erfüllt die Zeichenfolge den regulären Ausdruck nicht, wird der angegebene Standardwert zurückgeliefert.</para>
<para
>Ist ein Rückverweis angegeben, wird der Wert des Rückverweises zurückgeliefert.</para>
<para
>ist kein Standardwert angegeben, wird eine leere Zeichenfolge angenommen. Wird kein Rückverweis angegeben, wird 0 angenommen (sodass der Bereich der Zeichenfolge, der den regulären Ausdruck erfüllt, vollständig zurückgeliefert wird).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>REGEXP(Zeichenfolge, regulärer Ausdruck, Standardwert, Rückverweis)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Suchtext</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Regulärer Ausdruck</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Standardwert (optional)</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Rückverweis (optional)</seg
><seg
>Zahl</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>REGEXP("Anzahl ist 15.";"[0-9]+") = "15" </para
></listitem>

</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>REGEXP("15, 20, 26, 41";"([0-9]+), *[0-9]+$";"";1) = "26" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXPRE">
<title
>REGEXPRE</title>
<para
>Ersetzt alle Vorkommen eines regulären Ausdrucks mit dem Ersetzungstext.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>REGEXPRE(Text, regulärer Ausdruck, Ersetzungstext)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Suchtext</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Regulärer Ausdruck</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ersetzung</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>REGEXPRE(„14 und 15 und 16“;„[0-9]+“;„Zahl“) liefert „Zahl und Zahl und Zahl“</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACE">
<title
>REPLACE</title>
<para
>Die Funktion REPLACE() ersetzt einen Teil einer Zeichenfolge durch eine andere Zeichenfolge.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>REPLACE(text;position;laenge;neuer_text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Text, in dem einige Zeichen ersetzt werden sollen</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Position des ersten zu ersetzenden Zeichens</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der zu ersetzenden Zeichen</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Text, der die Zeichen im alten Text ersetzen wird</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>REPLACE("abcdefghijk";6;5;"-") ergibt "abcde-k"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>REPLACE("2002";3;2;"03") ergibt "2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACEB">
<title
>REPLACEB</title>
<para
>Die Funktion REPLACEB() ersetzt einen Teil einer Zeichenfolge durch eine andere Zeichenfolge unter Verwendung der Byteposition.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>REPLACEB(text;BytePosition;ByteLänge Län;neuer_text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Text, in dem einige Zeichen unter Verwendung der Byteposition ersetzt werden sollen</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Byteposition des ersten zu ersetzenden Zeichens</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Bytelänge der zu ersetzenden Zeichen</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Text, der die Zeichen im alten Text ersetzen wird</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPT">
<title
>REPT</title>
<para
>Die Funktion REPT() wiederholt den ersten Parameter so häufig, wie durch den zweiten Parameter festgelegt. Der zweite Parameter darf nicht negativ sein. Die Funktion ergibt eine leere Zeichenfolge, wenn der zweite Parameter auf 0 gesetzt ist (oder auf 0 abgerundet wird).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>REPT(Text;Anzahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Wiederholungen</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>REPT("KSpread";3) ergibt "KSpreadKSpreadKSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>REPT("KSpread";0) ergibt ""</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHT">
<title
>RIGHT</title>
<para
>Die Funktion RIGHT() ergibt eine Teil-Zeichenfolge, welche aus der angegebenen Anzahl Zeichen von rechts aus der Quellzeichenfolge gebildet wird. Falls „Länge“ die Gesamtlänge der Zeichenfolge überschreitet, wird die ganze Zeichenfolge zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RIGHT(Text;Länge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Anzahl an Zeichen</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RIGHT("Hallo";2) ergibt "lo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RIGHT("KSpread";10) ergibt "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RIGHT("KSpread") ergibt "d"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHTB">
<title
>RIGHTB</title>
<para
>Die Funktion RIGHTB() ergibt eine Teil-Zeichenfolge, welche aus der angegebenen Anzahl Zeichen von rechts aus der Quellzeichenfolge  unter Verwendung der Byteposition gebildet wird. Falls „Länge“ die Gesamtlänge der Zeichenfolge überschreitet, wird die ganze Zeichenfolge zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RIGHTB(Text;ByteLänge)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Bytelänge</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROT13">
<title
>ROT13</title>
<para
>Die Funktion ROT13() verschlüsselt Text dadurch, dass jeder Buchstabe durch den Buchstaben ersetzt wird, der 13 Zeichen später im Alphabet steht. Wenn die dreizehnte Position hinter dem Buchstaben Z ist, wird wieder bei A begonnen (Rotation).</para>
<para
>Durch Anwenden der Verschlüsselungsfunktion auf den verschlüsselten Text kann der Text wieder entschlüsselt werden.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ROT13(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Text</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROT13("KSpread") ergibt "XFcernq"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ROT13("XFcernq") ergibt "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCH">
<title
>SEARCH</title>
<para
>Die Funktion SEARCH() findet eine Zeichenfolge „find_text“ in einer anderen Zeichenfolge „within_text“ und gibt die Position des ersten Zeichens von „find_text“ in „within_text“ zurück.</para>
<para
>Sie können die Platzhalter Fragezeichen (?) und Stern (*) verwenden. Ein Fragezeichen steht für ein einzelnes Zeichen und ein Stern steht für eine beliebige Folge von Zeichen.</para>
<para
>Der Parameter start_num gibt den Buchstaben an, bei dem die Suche beginnen soll. Der erste Buchstabe steht an Position 1. Wenn start_num nicht angegeben ist, wird ein Wert von 1 angenommen. Die Funktion SEARCH() unterscheidet nicht zwischen Großbuchstaben und Kleinbuchstaben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SEARCH(find_text;within_text;start_num)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu suchende Text</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Der Text, in dem gesucht werden soll</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Startposition für die Suche</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SEARCH("e";"Kommentare";6) ergibt 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SEARCH("schwelle";"Gewinnschwelle") ergibt 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCHB">
<title
>SEARCHB</title>
<para
>Die Funktion SEARCHB() findet eine Zeichenfolge „find_text“ in einer anderen Zeichenfolge „within_text“ und gibt die Position des ersten Zeichens von „find_text“ in „within_text“  unter Verwendung der Byteposition zurück.</para>
<para
>Sie können die Platzhalter Fragezeichen (?) und Stern (*) verwenden. Ein Fragezeichen steht für ein einzelnes Zeichen und ein Stern steht für eine beliebige Folge von Zeichen.</para>
<para
>Der Parameter BytePosition gibt den Buchstaben an, bei dem die Suche beginnen soll. Der erste Buchstabe steht an Position 2. Wenn BytePosition nicht angegeben ist, wird ein Wert von 2 angenommen. Die Funktion SEARCHB() unterscheidet nicht zwischen Großbuchstaben und Kleinbuchstaben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SEARCHB(find_text;within_text;BytePosition Start)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Der zu suchende Text</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Der Text, in dem gesucht werden soll</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Angegebene Byteposition für der Start der Suche</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLEEK">
<title
>SLEEK</title>
<para
>Die Funktion SLEEK() entfernt alle Leerzeichen aus einer Zeichenfolge.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SLEEK(text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SLEEK("Dies ist ein Text  ") ergibt "DiesisteinText"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="TRIM"
>TRIM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBSTITUTE">
<title
>SUBSTITUTE</title>
<para
>Die Funktion SUBSTITUTE() ersetzt in einer Zeichenfolge alter_text durch neuer_text. Wenn Anzahl angegeben ist, wird nur die entsprechende Anzahl an Ersetzungen durchgeführt. Sonst wird jedes Vorkommen von alter_text durch neuer_text ersetzt. Verwenden Sie SUBSTITUTE(), wenn Sie bestimmten Text in einer Zeichenfolge ersetzen möchten. Verwenden Sie REPLACE(), wenn Sie Text, der an einer bestimmten Position steht, ersetzen möchten.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SUBSTITUTE(text; alter_text; neuer_text; Anzahl)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Text, in dem ersetzt werden soll</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Zu ersetzender Text</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Ersatztext</seg
><seg
>Text</seg
></seglistitem>
<seglistitem
><seg
>Anzahl der Ersetzungen</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUBSTITUTE("Kosten-Daten";"Kosten";"Verkaufs") ergibt "Verkaufs-Daten"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUBSTITUTE("Quartal 1, 2001";"1";"3";1) ergibt "Quartal 3, 2001"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SUBSTITUTE("Quartal 1, 2001";"1";"3";4) ergibt "Quartal 3, 2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="T">
<title
>T</title>
<para
>Die Funktion T() ergibt den Text, auf den durch „Wert“ verwiesen wird. Wenn „Wert“ ein Text ist oder auf einen Text verweist, dann wird der entsprechende Text zurückgegeben. Wenn „Wert“ nicht auf einen Text verweist, wird ein leerer Text zurückgegeben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>T(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>T("Calligra") ergibt "Calligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>T(1,2) ergibt "" (leerer Text)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TEXT">
<title
>TEXT</title>
<para
>Die Funktion TEXT() konvertiert einen Wert in einen Text.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TEXT(Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Wert</seg
><seg
>Ein beliebiger Wert</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TEXT(1234,56) ergibt „1234,56“</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TEXT("KSpread") ergibt "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TOGGLE">
<title
>TOGGLE</title>
<para
>Die Funktion TOGGLE() verwandelt Großbuchstaben in Kleinbuchstaben und Kleinbuchstaben in Großbuchstaben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TOGGLE(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TOGGLE("hallo") ergibt "HALLO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TOGGLE("HALLO") ergibt "hallo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TOGGLE("HaLlO") ergibt "hAlLo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIM">
<title
>TRIM</title>
<para
>Die Funktion TRIM() gibt die Zeichenfolge mit einzelnen Leerzeichen zwischen den Worten zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TRIM(text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TRIM(" Hallo    KSpread   ") ergibt "Hallo KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICHAR">
<title
>UNICHAR</title>
<para
>Die Funktion UNICHAR() gibt den durch eine Unicode-Zahl spezifizierten Buchstaben zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>UNICHAR(Code)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Zeichen-Code</seg
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>UNICHAR(65) ergibt "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="UNICODE"
>UNICODE</link
>&nbsp;</member>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICODE">
<title
>UNICODE</title>
<para
>Die Funktion UNICODE() gibt die Unicode-Zahl für das erste Zeichen in einer Zeichenfolge zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ganze Zahl (z. B. 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>UNICODE(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Text</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>UNICODE("KDE") ergibt 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="UNICHAR"
>UNICHAR</link
>&nbsp;</member>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UPPER">
<title
>UPPER</title>
<para
>Die Funktion UPPER() konvertiert eine Zeichenfolge in Großbuchstaben.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Text</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>UPPER(text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Quell-Zeichenfolge</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>UPPER("hallo") ergibt "HALLO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>UPPER("HALLO") ergibt "HALLO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VALUE">
<title
>VALUE</title>
<para
>Konvertiert eine Zeichenfolge, die einen Wert darstellt, in den Wert. </para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>

<listitem
><para
>VALUE(Text)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Text</seg
><seg
>Text</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>VALUE("14,03") ergibt 14,03</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Trigonometric">
<title
>Trigonometrie</title>

<sect3 id="ACOS">
<title
>ACOS</title>
<para
>Die Funktion ACOS() gibt den Arcuskosinus im Bogenmaß zurück. Der Wert ist mathematisch zwischen 0 und PI definiert (inklusive).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ACOS(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ACOS(0,8) ergibt 0,6435011</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ACOS(0) ergibt 1,57079633</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOSH">
<title
>ACOSH</title>
<para
>Die Funktion ACOSH() berechnet den inversen Kosinus Hyperbolicus von x. Das ist der Wert, dessen Kosinus Hyperbolicus gleich x ist. Wenn x kleiner als 1,0 ist, gibt ACOSH() einen ungültigen Wert (NaN) zurück und errno wird entsprechend gesetzt.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ACOSH(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ACOSH(5) ergibt 2,29243167</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ACOSH(0) ist ungültig</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COSH"
>COSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOT">
<title
>ACOT</title>
<para
>Die Funktion ACOT() liefert den inversen Kotangens einer Zahl.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ACOT(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ACOT(0) ergibt 1,57079633</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASIN">
<title
>ASIN</title>
<para
>Die Funktion ASIN() gibt den Arcussinus im Bogenmaß zurück. Der Wert ist mathematisch zwischen -PI/2 und PI/2 definiert (inklusive).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ASIN(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ASIN(0,8) ergibt 0,92729522</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ASIN(0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASINH">
<title
>ASINH</title>
<para
>Die Funktion ASINH() berechnet den inversen Sinus Hyperbolicus von x. Das ist der Wert, dessen Sinus Hyperbolicus gleich x ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ASINH(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ASINH(0,8) ergibt 0,73266826</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ASINH(0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SINH"
>SINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN">
<title
>ATAN</title>
<para
>Die Funktion ATAN() gibt den Arcustangens im Bogenmaß zurück. Der Wert ist mathematisch zwischen -PI/2 und PI/2 definiert (inklusive).</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ATAN(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ATAN(0,8) ergibt 0,67474094</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ATAN(0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="TAN"
>TAN</link
>&nbsp;</member>
<member
><link linkend="ATAN2"
>ATAN2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN2">
<title
>ATAN2</title>
<para
>Diese Funktion berechnet den Arcustangens der beiden Variablen x und y. Es ist ähnlich dazu, den Arcustangens von y/x auszurechnen, nur dass die Vorzeichen der beiden Argumente dazu benutzt werden, den Quadranten des Ergebnisses zu bestimmen.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ATAN2(Wert;Wert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ATAN2(0,5;1,0) ergibt 1,107149</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ATAN2(-0,5;2,0) ergibt 1,815775</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATANH">
<title
>ATANH</title>
<para
>Die Funktion ATANH() berechnet den inversen Tangens Hyperbolicus von x. Das ist der Wert, dessen Tangens Hyperbolicus gleich x ist. Wenn der Betrag von x größer als 1,0 ist, gibt ATANH() einen ungültigen Wert (NaN) zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>ATANH(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ATANH(0,8) ergibt 1,09861229</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>ATANH(0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="TANH"
>TANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COS">
<title
>COS</title>
<para
>Die Funktion COS() gibt den Kosinus von x zurück, wobei x im Bogenmaß gegeben ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COS(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COS(0) ergibt 1,0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COS(PI/2) ergibt 0,0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
<member
><link linkend="ACOS"
>ACOS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COSH">
<title
>COSH</title>
<para
>Die Funktion COSH() gibt den Kosinus Hyperbolicus von x zurück. Er ist mathematisch als (exp(x) + (exp(-x)) / 2 definiert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>COSH(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COSH(0,8) ergibt 1,33743495</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>COSH(0) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ACOSH"
>ACOSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSC">
<title
>CSC</title>
<para
>Die Funktion CSC() gibt den Kosecans von x zurück, wobei x im Bogenmaß gegeben ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CSC(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CSC(PI()/2) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSCH">
<title
>CSCH</title>
<para
>Die Funktion CSCH() gibt den Kosecans Hyperbolicus von x zurück, wobei x im Bogenmaß gegeben ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>CSCH(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>CSCH(PI()/2) ergibt 0.434537208...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEGREES">
<title
>DEGREES</title>
<para
>Diese Funktion transformiert einen Winkel vom Bogenmaß ins Gradmaß.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>DEGREE(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEGREES(0,78) ergibt 44,69</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>DEGREES(1) ergibt 57,29</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="RADIANS"
>RADIANS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PI">
<title
>PI</title>
<para
>Die Funktion PI() gibt den Wert von PI zurück.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>PI()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>PI() ergibt 3,141592654...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RADIANS">
<title
>RADIANS</title>
<para
>Diese Funktion transformiert einen Winkel vom Gradmaß ins Bogenmaß.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>RADIANS(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (grad)</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RADIANS(75) ergibt 1,308</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>RADIANS(90) ergibt 1,5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="DEGREES"
>DEGREES</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEC">
<title
>SEC</title>
<para
>Die Funktion SECH() gibt den Secans von x zurück, wobei x im Bogenmaß gegeben ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SEC(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SEC(0) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECH">
<title
>SECH</title>
<para
>Die Funktion SECH() gibt den Secans Hyperbolicus von x zurück, wobei x im Bogenmaß gegeben ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SECH(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SECH(0) ergibt 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIN">
<title
>SIN</title>
<para
>Die Funktion SIN() gibt den Sinus von x zurück, wobei x im Bogenmaß gegeben ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SIN(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SIN(0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SIN(PI/2) ergibt 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
<member
><link linkend="ASIN"
>ASIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SINH">
<title
>SINH</title>
<para
>Die Funktion SINH() gibt den Sinus Hyperbolicus von x zurück. Er ist mathematisch als (exp(x) − exp(-x)) / 2 definiert.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>SINH(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SINH(0,8) ergibt 0,88810598</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>SINH(0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ASINH"
>ASINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TAN">
<title
>TAN</title>
<para
>Die Funktion TAN() gibt den Tangens von x zurück, wobei x im Bogenmaß gegeben ist.</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TAN(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>

<listitem
><para
>TAN(0,7) ergibt 0,84228838.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TAN(0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TANH">
<title
>TANH</title>
<para
>Die Funktion TANH() gibt den Tangens Hyperbolicus von x zurück. Er ist definiert als sinh(x) / cosh(x)</para>
<para
><segmentedlist
><segtitle
>Rückgabetyp</segtitle>
<seglistitem
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Syntax</term>
<listitem
><para
>TANH(Fließkommawert)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parameter</term>
<listitem
><para
><segmentedlist
><segtitle
>Kommentar</segtitle
><segtitle
>Typ</segtitle>
<seglistitem
><seg
>Winkel (rad):</seg
><seg
>Ein Fließkommawert (wie 1,3; 0,343; 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TANH(0,8) ergibt 0,66403677</para
></listitem>
</varlistentry>
<varlistentry
><term
>Beispiele</term>
<listitem
><para
>TANH(0) ergibt 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Ähnliche Funktionen</term>
<listitem
><simplelist>
<member
><link linkend="ATANH"
>ATANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2>
</sect1>
</chapter>
 


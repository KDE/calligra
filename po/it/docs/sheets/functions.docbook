<chapter id="functions">
<!--
*************************** DO NOT EDIT MANUALLY ************************

This file is autogenerated from *.xml files in calligra/tables/functions/
all changes will be overwritten on the next script run
-->
<title
>Funzioni</title>
<para
>&sheets; ha una vasta gamma di funzioni interne matematiche e di altro tipo che possono essere utilizzate in una cella con formula.</para>
<sect1 id="supported-functions">
<title
>Funzioni supportate</title>
<para
>Questo capitolo contiene un breve riepilogo di tutte le funzioni supportate nei seguenti gruppi:</para>
<simplelist>
<member
><link linkend="Bit-Operations"
>Operazioni su bit</link
>&nbsp;</member>
<member
><link linkend="Conversion"
>Conversione</link
>&nbsp;</member>
<member
><link linkend="Database"
>Database</link
>&nbsp;</member>
<member
><link linkend="Date---Time"
>Data e ora</link
>&nbsp;</member>
<member
><link linkend="Engineering"
>Ingegneria</link
>&nbsp;</member>
<member
><link linkend="Financial"
>Finanza</link
>&nbsp;</member>
<member
><link linkend="Information"
>Informazione</link
>&nbsp;</member>
<member
><link linkend="Logical"
>Logica</link
>&nbsp;</member>
<member
><link linkend="Lookup---Reference"
>Ricerca e riferimenti</link
>&nbsp;</member>
<member
><link linkend="Math"
>Matematica</link
>&nbsp;</member>
<member
><link linkend="Statistical"
>Statistica</link
>&nbsp;</member>
<member
><link linkend="Text"
>Testo</link
>&nbsp;</member>
<member
><link linkend="Trigonometric"
>Trigonometria</link
>&nbsp;</member>
</simplelist>
<!--
<para
>OpenFormula groups (small, medium, and large, more)? Which are supported by Sheets?</para>
<para
>Something about interoperablity / spread sheet exchange / known issues, incompabitilites, errors?</para>
-->
<sect2 id="Bit-Operations">
<title
>Operazioni sui bit</title>

<sect3 id="BITAND">
<title
>BITAND</title>
<para
>La funzione BITAND() esegue un'operazione AND bit per bit su due parametri interi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BITAND(valore;valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Secondo numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BITAND(12;10) restituisce 8 (poiché passando da decimale a binario, 12 diventa 1100 e 10 diventa 1010; poi, applicando AND ai bit di 1100 e 1010, si ottiene 1000, che è l'intero decimale 8).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITLSHIFT">
<title
>BITLSHIFT</title>
<para
>La funzione BITLSHIFT() esegue uno spostamento a sinistra, bit per bit, del primo parametro. Il numero di bit di cui spostare è specificato dal secondo parametro. Nota che se il secondo parametro è negativo, lo spostamento diventerà verso destra.  </para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BITLSHIFT(valore; dimensione spostamento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Posizioni di cui spostare verso sinistra</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITOR">
<title
>BITOR</title>
<para
>La funzione BITOR() esegue un'operazione OR bit per bit su due parametri interi. </para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BITOR(valore;valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Secondo numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BITOR(12;10) restituisce 14 (poiché passando da decimale a binario, 12 diventa 1100 e 10 diventa 1010; poi, applicando OR ai bit di 1100 e 1010, si ottiene 1110, che è l'intero decimale 14).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITRSHIFT">
<title
>BITRSHIFT</title>
<para
>La funzione BITRSHIFT() esegue uno spostamento a destra, bit per bit, del primo parametro. Il numero di bit di cui spostare è specificato dal secondo parametro. Nota che se il secondo parametro è negativo, lo spostamento diventerà verso sinistra. </para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BITRSHIFT(valore; dimensione spostamento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Posizioni di cui spostare verso destra</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITXOR">
<title
>BITXOR</title>
<para
>La funzione BITXOR() esegue un'operazione XOR (OR esclusivo) bit per bit su due parametri interi. </para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BITXOR(valore; valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Secondo numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BITXOR(12;10) restituisce 6 poiché, passando da decimale a binario, 12 diventa 1100 e 10 diventa 1010; poi, applicando XOR ai bit di 1100 e 1010, si ottiene 1000, che è l'intero decimale 6.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Conversion">
<title
>Conversione</title>

<sect3 id="ARABIC">
<title
>ARABIC</title>
<para
>La funzione ARABIC() converte un numero romano in un numero.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ARABIC(Numero romano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ARABIC("IV") restituisce 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ARABIC("XCIX") restituisce 99</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ROMAN"
>ROMAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASCIITOCHAR">
<title
>ASCIITOCHAR</title>
<para
>La funzione ASCIITOCHAR() restituisce il carattere per ogni dato codice ASCII</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ASCIITOCHAR(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore ASCII da convertire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ASCIITOCHAR(118) restituisce "v"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ASCIITOCHAR(75; 68; 69) restituisce "KDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2INT">
<title
>BOOL2INT</title>
<para
>La funzione BOOL2INT() restituisce un valore intero per un dato valore booleano. Questo metodo è inteso per utilizzare un valore booleano nei metodi che richiedono un intero.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BOOL2INT(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore booleano da convertire</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BOOL2INT(True) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BOOL2INT(False) restituisce 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="INT2BOOL"
>INT2BOOL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2STRING">
<title
>BOOL2STRING</title>
<para
>La funzione BOOL2STRING() restituisce un valore stringa per ogni dato valore booleano. Questo metodo è inteso per l'utilizzo di un booleano nei metodi che richiedono una stringa</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BOOL2STRING(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore booleano da convertire</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BOOL2STRING(true) restituisce "True"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BOOL2STRING(false) restituisce "False"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>upper(BOOL2STRING(find("nan";"banana"))) restituisce TRUE</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARX">
<title
>CARX</title>
<para
>La funzione CARX() restituisce l'ascissa di un punto espresso in coordinate polari.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CARX(raggio;angolo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Raggio</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CARX(12;1,5707) restituisce 0,00115592</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CARX(12;0) restituisce 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARY">
<title
>CARY</title>
<para
>La funzione CARY() restituisce l'ordinata di un punto espresso in coordinate polari.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CARY(raggio;angolo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Raggio</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CARY(12;1,5707) restituisce 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CARY(12;0) restituisce 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHARTOASCII">
<title
>CHARTOASCII</title>
<para
>La funzione CHARTOASCII() restituisce il codice ASCII per un dato carattere.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CHARTOASCII(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Una stringa di un carattere da convertire</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CHARTOASCII("v") restituisce 118</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CHARTOASCII(r) è un errore. Il carattere deve essere tra virgolette.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DECSEX">
<title
>DECSEX</title>
<para
>La funzione DECSEX() converte un valore decimale in uno temporale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DECSEX(double)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DECSEX(1,6668) restituisce 1:40  </para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DECSEX(7,8) restituisce 7:47</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT2BOOL">
<title
>INT2BOOL</title>
<para
>La funzione INT2BOOL() restituisce un valore booleano per un dato numero intero. Questo metodo è inteso per l'utilizzo di un intero nei metodi che richiedono un booleano. Accetta 0 o 1. Se qualsiasi altro valore è passato sarà restituito 'false'.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>INT2BOOL(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore intero da convertire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INT2BOOL(1) restituisce 'true'</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INT2BOOL(0) restituisce 'false'</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>OR(INT2BOOL(1); false) restituisce 'true'</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BOOL2INT"
>BOOL2INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NUM2STRING">
<title
>NUM2STRING</title>
<para
>La funzione NUM2STRING() ritorna un valore stringa per un dato numero. Nota che &sheets; converte automaticamente i numeri in stringhe quando serve. Quindi questa funzione si usa raramente.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NUM2STRING(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero da convertire in stringa</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NUM2STRING(10) restituisce "10"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NUM2STRING(2,05) restituisce "2,05"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>=find("101";NUM2STRING(A1)) (A1 = 2,010102) restituisce 'True'</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="STRING"
>STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLA">
<title
>POLA</title>
<para
>La funzione POLA() restituisce l'angolo (in radianti) di un punto espresso in coordinate cartesiane.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>POLA(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ascissa</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Ordinata</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POLA(12;12) restituisce 0,78539816</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POLA(12;0) restituisce 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POLA(0;12) restituisce 1,5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLR">
<title
>POLR</title>
<para
>La funzione POLR() restituisce il raggio di un punto espresso in coordinate cartesiane.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>POLR(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ascissa</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Ordinata</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POLR(12;12) restituisce 16,9705</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POLR(12;0) restituisce 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROMAN">
<title
>ROMAN</title>
<para
>La funzione ROMAN() restituisce il numero in cifre romane. Il numero deve essere un intero positivo. Il parametro opzionale 'Formato' specifica il livello di concisione, predefinito uguale a 0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ROMAN(Numero)</para
></listitem>

</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Formato</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROMAN(99) restituisce "XCIX"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROMAN(-55) restituisce "Err"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ARABIC"
>ARABIC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEXDEC">
<title
>SEXDEC</title>
<para
>La funzione SEXDEC() restituisce un valore decimale. È anche possibile specificare un valore temporale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SEXDEC(valore tempo) o SEXDEC(ore;minuti;secondi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ore</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minuti</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Secondi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SEXDEC(1;5;7) restituisce 1,0852778 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DECSEX("8:05") restituisce 8,08333333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STRING">
<title
>STRING</title>
<para
>La funzione STRING() ritorna un valore stringa per un dato numero. È identica alla funzione NUM2STRING.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero da convertire in stringa</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="NUM2STRING"
>NUM2STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Database">
<title
>Database</title>

<sect3 id="DAVERAGE">
<title
>DAVERAGE</title>
<para
>Calcola la media dei valori numerici contenuti in una colonna di un database specificata da condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DAVERAGE(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAVERAGE(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNT">
<title
>DCOUNT</title>
<para
>Conta le celle con valori numerici in una colonna di un database specificata da condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DCOUNT(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DCOUNT(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNTA"
>DCOUNTA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNTA">
<title
>DCOUNTA</title>
<para
>Conta le celle contenenti numeri o valori alfanumerici in una colonna di un database specificata da condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DCOUNTA(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DCOUNTA(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNT"
>DCOUNT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DGET">
<title
>DGET</title>
<para
>Ricava un unico valore da una colonna di un database specificata da alcune condizioni. Questa funzione segnala errore se non trova alcun valore o ne trova più di uno.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DGET(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DGET(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMAX">
<title
>DMAX</title>
<para
>Ricava il valore massimo in una colonna di un database specificata da alcune condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DMAX(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DMAX(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DMIN"
>DMIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMIN">
<title
>DMIN</title>
<para
>Ricava il valore minimo in una colonna di un database specificata da alcune condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DMIN(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DMIN(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DMAX"
>DMAX</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DPRODUCT">
<title
>DPRODUCT</title>
<para
>Restituisce il prodotto di tutti i valori numerici in una colonna di un database specificata da alcune condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DPRODUCT(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DPRODUCT(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEV">
<title
>DSTDEV</title>
<para
>Restituisce la stima della deviazione standard per una popolazione basandosi su un campione. Si usano tutti i valori numerici in una colonna di un database specificata da alcune condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DSTDEV(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DSTDEV(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEVP"
>DSTDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEVP">
<title
>DSTDEVP</title>
<para
>Restituisce la deviazione standard di popolazione basandosi su tutta la popolazione. Si usano tutti i valori numerici contenuti nella colonna di un database specificata da alcune condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DSTDEVP(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DSTDEVP(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEV"
>DSTDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSUM">
<title
>DSUM</title>
<para
>Somma i numeri di una colonna di un database specificata da condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DSUM(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DSUM(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVAR">
<title
>DVAR</title>
<para
>Restituisce la stima della varianza di una popolazione basandosi su un campione. Si usano tutti i valori numerici in una colonna di un database specificata da alcune condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DVAR(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DVAR(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DVARP"
>DVARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVARP">
<title
>DVARP</title>
<para
>Restituisce la varianza di una popolazione basandosi su tutta la popolazione. Si usano tutti i valori numerici in una colonna di un database specificata da alcune condizioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DVARP(Database; "Intestazione"; Condizioni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione per il database</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa che indica la colonna nel database</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Campo di variazione per le condizioni</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DVARP(A1:C5; "Salario"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DVAR"
>DVAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GETPIVOTDATA">
<title
>GETPIVOTDATA</title>
<para
>Recupera i dati riassuntivi della tabella pivot.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>GETPIVOTDATA(Database; "Vendite")</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Campo di variazione contenente la tabella pivot</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Nome del campo di cui desideri i dati riassuntivi</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Date---Time">
<title
>Data &amp; ora</title>

<sect3 id="CURRENTDATE">
<title
>CURRENTDATE</title>
<para
>La funzione CURRENTDATE() restituisce la data corrente. È equivalente alla funzione TODAY.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CURRENDATE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CURRENDATE() restituisce "sabato 13 aprile 2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTDATETIME">
<title
>CURRENTDATETIME</title>
<para
>La funzione CURRENTDATETIME() restituisce la data corrente e l'ora.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CURRENTDATETIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CURRENTDATETIME() restituisce "19:12, sabato 13 aprile 2002"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTTIME">
<title
>CURRENTTIME</title>
<para
>La funzione CURRENTTIME() restituisce l'orario attuale nel formato locale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CURRENTTIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CURRENTTIME() restituisce "19:12:01"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE">
<title
>DATE</title>
<para
>La funzione DATE() restituisce la data formattata con i parametri locali.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DATE(anno;mese;data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Anno</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mese</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Giorno</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DATE(2000;5;5) restituisce venerdì 5 maggio 2000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE2UNIX">
<title
>DATE2UNIX</title>
<para
>La funzione DATE2UNIX() converte un valore espresso come data e ora in tempo unix.</para>
<para
>Il tempo unix è il numero di secondi trascorsi dalla mezzanotte del 1° gennaio 1970.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DATE2UNIX(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DATE2UNIX("01/01/2000") restituisce 946.684.800</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEDIF">
<title
>DATEDIF</title>
<para
>La funzione DATEDIF() restituisce la differenza tra due date.</para>
<para
>Il tipo di intervallo deve essere uno dei seguenti:  "m": mesi; "d": giorni; "y": anni completi; "ym": mesi senza anni; "yd": giorni senza anni; "md": giorni senza mesi e anni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DATEDIF(prima data; seconda data; tipo-intervallo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Prima data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Seconda data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>intervallo</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DATEDIF(A1;A2;"d") restituisce 1626 giorni se A1 è "1° gennaio 1995" e A2 è "15 giugno 1999"</para
></listitem>
</varlistentry>

<varlistentry
><term
>Esempi</term>
<listitem
><para
>DATEDIF(A1;A2;"m") restituisce 53 mesi se A1 è "1° gennaio 1995" e A2 è "15 giugno 1999"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEVALUE">
<title
>DATEVALUE</title>
<para
>La funzione DATEVALUE restituisce un numero che rappresenta il giorno, cioè il numero di giorni trascorsi dal 31 dicembre 1899.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DATEVALUE(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DATEVALUE("22/2/2002") restituisce 37309</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="TIMEVALUE"
>TIMEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAY">
<title
>DAY</title>
<para
>La funzione DAY restituisce il giorno di una data. Se non vengono specificati parametri, viene restituito il giorno corrente.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>Giorno(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAY("22/2/2002") restituisce 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAY(2323,1285) restituisce 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYNAME">
<title
>DAYNAME</title>
<para
>La funzione DAY() restituisce il nome del giorno della settimana (1..7). In alcuni paesi il primo giorno della settimana è il lunedì, mentre in altri il primo giorno della settimana è la domenica.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DAYNAME(giorno_settimana)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero del giorno della settimana (1..7)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAYNAME(1) restituisce lunedì (se la settimana parte con lunedì)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="WEEKDAY"
>WEEKDAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYOFYEAR">
<title
>DAYOFYEAR</title>
<para
>La funzione DAYOFYEAR() restituisce il numero di giorni nell'anno (1...365).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DAYOFYEAR(anno;mese;data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Anno</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mese</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Giorno</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAYOFYEAR(2000;12;1) restituisce 336</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAYOFYEAR(2000;2;29) restituisce 60</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS">
<title
>DAYS</title>
<para
>La funzione DAYS() restituisce la differenza tra due date in giorni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DAYS(data2; data1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo valore data (precedente)</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Secondo valore data</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAYS("2002-02-22"; "2002-02-26") restituisce 4</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS360">
<title
>DAYS360</title>
<para
>La funzione DAYS360() calcola il numero di giorni tra data1 e data2 usando un calendario di 360 giorni, in cui tutti i mesi hanno 30 giorni. Se metodo è False (predefinito) viene usato il sistema americano, altrimenti quello europeo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DAYS360(data1; data2; metodo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data1</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Data2</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Metodo</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAYS360("22/2/2002"; "21/4/2002"; FALSE) restituisce 59</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DAYS"
>DAYS</link
>&nbsp;</member>
<member
><link linkend="MONTHS"
>MONTHS</link
>&nbsp;</member>
<member
><link linkend="WEEKS"
>WEEKS</link
>&nbsp;</member>
<member
><link linkend="YEARS"
>YEARS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINMONTH">
<title
>DAYSINMONTH</title>
<para
>La funzione DAYSINMONTH() restituisce il numero di giorni in un dato mese di un dato anno.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DAYSINMONTH(anno;mese)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Anno</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mese</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAYSINMONTH(2000;2) restituisce 29</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINYEAR">
<title
>DAYSINYEAR</title>
<para
>La funzione DAYSINYEAR() restituisce il numero di giorni in un dato anno.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DAYSINYEAR(anno)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Anno</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DAYSINYEAR(2000) restituisce 366</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EASTERSUNDAY">
<title
>EASTERSUNDAY</title>
<para
>La funzione EASTERSUNDAY() restituisce la data in cui cadrà la Pasqua dell'anno fornito come parametro.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EASTERSUNDAY(anno)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Anno</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EASTERSUNDAY(2003) restituisce "20 aprile 2003"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EDATE">
<title
>EDATE</title>
<para
>La funzione EDATE restituisce la data calcolata sommando o sottraendo un certo numero di mesi ad un giorno assegnato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EDATE(data;mesi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Mesi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EDATE("22/2/2002"; 3) restituisce "22/5/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EDATE("31/3/2002"; -1) restituisce "28/2/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DATE"
>DATE</link
>&nbsp;</member>
<member
><link linkend="EOMONTH"
>EOMONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EOMONTH">
<title
>EOMONTH</title>
<para
>La funzione EOMONTH restituisce l'ultimo giorno del mese specificato aggiungendo il numero dei mesi alla data.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EOMONTH(data; mesi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Mesi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EOMONTH("22/2/2002"; 3) restituisce "31/5/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EOMONTH("12/3/2002"; -1) restituisce "28/2/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EOMONTH("12/3/2002"; 0) restituisce "31/3/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="EDATE"
>EDATE</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOUR">
<title
>HOUR</title>
<para
>La funzione HOUR restituisce l'ora di un orario. Se non vengono specificati parametri, viene restituita l'ora attuale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>HOURS(orario)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ora</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HOUR("22:5:2") restituisce 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HOUR(0,1285) restituisce 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOURS">
<title
>HOURS</title>
<para
>La funzione HOURS() restituisce il valore delle ore in un'espressione di tempo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>HOURS(tempo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ora</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HOURS("10:5:2") restituisce 10</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLEAPYEAR">
<title
>ISLEAPYEAR</title>
<para
>La funzione ISLEAPYEAR() restituisce True se l'anno dato è bisestile.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISLEAPYEAR(anno)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Anno</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISLEAPYEAR(2000) restituisce True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISOWEEKNUM">
<title
>ISOWEEKNUM</title>
<para
>La funzione ISOWEEKNUM() restituisce il numero della settimana in cui cade la data assegnata. Si noti che questa funzione è conforme allo standard ISO8601: una settimana inizia sempre di lunedì e finisce di domenica. La prima settimana dell'anno è quella che contiene il primo martedì dell'anno.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISOWEEKNUM(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISOWEEKNUM(A1) restituisce 51 se A1 è "21 dic".</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="WEEKNUM"
>WEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTE">
<title
>MINUTE</title>
<para
>La funzione MINUTE restituisce i minuti di un orario. Se non vengono specificati parametri, vengono restituiti i minuti attuali.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MINUTE(orario)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ora</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MINUTE("22:10:12") restituisce 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MINUTE(0,1234) restituisce 57</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTES">
<title
>MINUTES</title>
<para
>La funzione MINUTES() restituisce il valore dei minuti in un orario.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MINUTES(orario)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ora</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MINUTES("10:5:2") restituisce 5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTH">
<title
>MONTH</title>
<para
>La funzione MONTH restituisce il mese di una data. Se non vengono specificati parametri, viene restituito il mese corrente.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MONTH(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MONTH("2/22/2002") restituisce 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MONTH(2323,1285) restituisce 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHNAME">
<title
>MONTHNAME</title>
<para
>La funzione MONTHNAME() restituisce il nome del mese (1...12).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MONTHNAME(numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero del mese (1..12)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MONTHNAME(5) restituisce maggio</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHS">
<title
>MONTHS</title>
<para
>La funzione MONTHS() restituisce la differenza tra due date in mesi. Il terzo parametro indica la modalità di calcolo: se la modalità è 0, MONTHS() restituisce il numero massimo possibile di mesi tra le date. Se la modalità è 1, è restituito il numero dei mesi completi nell'intervallo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MONTHS(data2; data1; modalità)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo valore data (precedente)</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Secondo valore data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Modalità calcolo</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MONTHS("2002-01-18"; "2002-02-26"; 0) restituisce 1, perché c'è un mese e 8 giorni nell'intervallo</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MONTHS("2002-01-19!; "2002-02-26"; 1) restituisce 0, perché non c'è un mese intero nell'intervallo a partire dal primo giorno del mese</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NETWORKDAY">
<title
>NETWORKDAY</title>
<para
>La funzione NETWORKDAY() restituisce il numero di giorni lavorativi tra la data iniziale e quella finale.</para>
<para
>Festività deve essere: un numero (=giorni da aggiungere), una singola data o un intervallo di date.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NETWORKDAY(data iniziale; data finale; festività)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data di inizio</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Data finale</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Festività</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NETWORKDAY("01/01/2001";"08/01/2001") restituisce 5 giorni lavorativi.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NETWORKDAY("01/01/2001";"08/01/2001";2) restituisce 3 giorni lavorativi. </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOW">
<title
>NOW</title>
<para
>La funzione NOW() restituisce la data corrente e l'ora. È identica a CURRENTDATETIME ed è fornita solo per compatibilità con altre applicazioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NOW()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NOW() restituisce "19:12, sabato 13 aprile 2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECOND">
<title
>SECOND</title>
<para
>La funzione SECOND restituisce i secondi di un orario. Se non vengono specificati parametri, vengono restituiti i secondi attuali.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SECOND(orario)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ora</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SECOND("22:10:12") restituisce 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SECOND(0,1234) restituisce 42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECONDS">
<title
>SECONDS</title>
<para
>La funzione SECONDS() restituisce il valore dei secondi in un orario.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SECONDS(orario)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ora</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SECONDS("10:5:2") restituisce 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIME">
<title
>TIME</title>
<para
>La funzione TIME() restituisce l'orario nel formato locale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TIME(ore;minuti;secondi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ore</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minuti</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Secondi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TIME(10;2;2) restituisce 10:02:02</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TIME(10;70;0) restituisce 11:10:0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TIME(10;-40;0) restituisce 9:20:0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIMEVALUE">
<title
>TIMEVALUE</title>
<para
>La funzione TIMEVALUE() restituisce un numero tra 0 e 1 che rappresenta il momento della giornata.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TIMEVALUE(orario)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ora</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TIMEVALUE("10:05:02") restituisce 0,42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DATEVALUE"
>DATEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TODAY">
<title
>TODAY</title>
<para
>La funzione TODAY() restituisce la data corrente.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TODAY()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TODAY() restituisce "sabato 13 aprile 2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="NOW"
>NOW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNIX2DATE">
<title
>UNIX2DATE</title>
<para
>La funzione UNIX2DATE() converte un valore espresso come tempo unix nel formato data e ora.</para>
<para
>Il tempo unix è il numero di secondi trascorsi dalla mezzanotte del 1° gennaio 1970.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>UNIX2DATE(TempoUnix)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tempo </seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>UNIX2DATE(0) restituisce 1970-01-01</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKDAY">
<title
>WEEKDAY</title>
<para
>La funzione WEEKDAY() fornisce il giorno della settimana di una data assegnata. Se il metodo è 1 (predefinito), WEEKDAY() restituisce 1 per la domenica, 2 per lunedì,... Se il metodo è 2, lunedì è 1, martedì 2,... Infine, se metodo è 3, WEEKDAY() restituisce 0 per lunedì, 1 per martedì,...</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>WEEKDAY(data; metodo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Metodo (facoltativo)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>WEEKDAY("2002-02-22"; 2) restituisce 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DAYNAME"
>DAYNAME</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKNUM">
<title
>WEEKNUM</title>
<para
>La funzione WEEKNUM() restituisce il numero della settimana in cui cade un giorno, senza seguire gli standard ISO.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>WEEKNUM(data; metodo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Metodo (facoltativo)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>WEEKNUM(A1; 1) restituisce 11 se A1 è "9 marzo 2008". Il numero della settimana nell'anno, considerando come primo giorno della settimana. la domenica(1, che è il valore predefinito per 'metodo').</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>WEEKNUM(A1; 2) restituisce 10 se A1 è "9 marzo 2008". Il numero della settimana nell'anno, considerando il lunedì (2) come primo giorno della settimana.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ISOWEEKNUM"
>ISOWEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKS">
<title
>WEEKS</title>
<para
>La funzione WEEKS() restituisce le settimane che passano tra due date. Il terzo parametro indica la modalità di calcolo: se la modalità è 0, WEEKS() restituisce il numero massimo possibile di settimane tra questi giorni. Se la modalità è 1, è restituito solo il numero delle settimane intere.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>WEEKS(data2; data1; modalità)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo valore data (precedente)</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Secondo valore data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Modalità calcolo</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>WEEKS("2002-02-18"; "2002-02-26"; 0) restituisce 1, perché c'è una settimana e un giorno nell'intervallo</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>WEEKS("2002-19-02"; "2002-19-02"; 1) restituisce 0, perché non c'è un'intera settimana nell'intervallo, partendo dal primo giorno della settimana (lunedì o domenica, a seconda delle proprie impostazioni internazionali)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKSINYEAR">
<title
>WEEKSINYEAR</title>
<para
>La funzione WEEKSINYEAR() restituisce il numero di settimane in un dato anno.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>WEEKSINYEAR(anno)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Anno</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>WEEKSINYEAR(2000) restituisce 52</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WORKDAY">
<title
>WORKDAY</title>
<para
>La funzione WORKDAY() restituisce la data che segue di tot giorni lavorativi la data iniziale.</para>
<para
>Festività deve essere: un numero (=giorni da aggiungere), una singola data o un intervallo di date.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>WORKDAY(data iniziale; giorni; festività)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data di inizio</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Giorni lavorativi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Festività</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>WORKDAY(B9;2;D3:D4) restituisce "Ven 5 gen. 2001" se B9 è "01/01/2001", D3 è "03/01/2001" e D4 è "04/01/2001"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEAR">
<title
>YEAR</title>
<para
>La funzione YEAR restituisce l'anno di una data. Se non vengono specificati parametri, viene restituito l'anno corrente.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>YEAR(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>YEAR("22/2/2002") restituisce 2002</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>YEAR(2323,1285) restituisce 1906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARFRAC">
<title
>YEARFRAC</title>
<para
>La funzione YEARFRAC() restituisce il numero di giorni completi tra la data iniziale e quella finale, calcolati con la base assegnata.</para>
<para
>La base deve essere una tra: 0 = 30/360 US, 1 = Effettivo/effettivo, 2 = Effettivo/360, 3 = Effettivo/365, 4 = Europeo 30/360</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>YEARFRAC(data iniziale; data finale; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Prima data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Seconda data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>intervallo</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARS">
<title
>YEARS</title>
<para
>La funzione YEARS() restituisce la differenza tra due date in anni. Il terzo parametro indica la modalità di calcolo: se la modalità è 0, ANNO() restituisce il numero massimo possibile di anni tra questi giorni. Se la modalità è 1, verranno restituiti gli interi anni, partendo dal 1 gennaio e terminando al 31 dicembre.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>YEARS(data2; data1; modalità)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo valore data (precedente)</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Secondo valore data</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Modalità calcolo</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>YEARS("2001-02-19"; "2002-02-26"; 0) restituisce 1, perché c'è un anno e 7 giorni nell'intervallo</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>YEARS("2002-02-19"; "2002-02-26"; 1) restituisce 0, perché non c'è un intero anno, partendo dal primo giorno dell'anno.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Engineering">
<title
>Ingegneria</title>

<sect3 id="BASE">
<title
>BASE</title>
<para
>La funzione BASE() converte un numero da base 10 a un valore stringa in una base da 2 a 36.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BASE(numero;base;precisione)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Lung.minima</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BASE(128;8) restituisce "200"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELI">
<title
>BESSELI</title>
<para
>La funzione BESSELI() restituisce la funzione di Bessel modificata In(x).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BESSELI(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dove la funzione è valutata</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordine della funzione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BESSELI(0.7;3) restituisce 0.007367374</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELJ">
<title
>BESSELJ</title>
<para
>La funzione BESSELJ() restituisce la funzione di Bessel.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BESSELJ(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dove la funzione è valutata</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordine della funzione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BESSELJ(0,89;3) restituisce 0,013974004</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELK">
<title
>BESSELK</title>
<para
>La funzione BESSELKI() restituisce la funzione di Bessel modificata che è equivalente alla funzione di Bessel valutata su argomenti immaginari puri.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BESSELK(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dove la funzione è valutata</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordine della funzione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BESSELK(3;9) restituisce 397,95880</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELY">
<title
>BESSELY</title>
<para
>La funzione BESSELY() restituisce la funzione di Bessel, chiamata anche funzione di Weber o di Neumann.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BESSELY(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dove la funzione è valutata</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordine della funzione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BESSELY(4;2) è uguale a 0,215903595</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="BIN2DEC">
<title
>BIN2DEC</title>
<para
>La funzione BIN2DEC() restituisce in formato decimale il valore binario dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BIN2DEC(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BIN2DEC("1010") restituisce 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BIN2DEC("11111") restituisce 31 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2HEX">
<title
>BIN2HEX</title>
<para
>La funzione BIN2HEX() restituisce in formato esadecimale il valore binario dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BIN2HEX(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>La lunghezza minima del risultato</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BIN2HEX("1010") restituisce "a"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BIN2HEX("11111") restituisce "1f"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2OCT">
<title
>BIN2OCT</title>
<para
>La funzione BIN2OCT restituisce in formato ottale il valore binario dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BIN2OCT(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>La lunghezza minima del risultato</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BIN2OCT("1010") restituisce "12" </para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BIN2OCT("11111") restituisce "37" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPLEX">
<title
>COMPLEX</title>
<para
>La funzione COMPLEX(X;Y) restituisce un numero complesso della forma X+Yi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COMPLEX(reale;immaginario)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Coefficiente reale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Coefficiente immaginario</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMPLEX(1,2;3,4) restituisce "1,2+3,4i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMPLEX(0;-1) restituisce "-i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONVERT">
<title
>CONVERT</title>
<para
>La funzione CONVERT() calcola la conversione da un sistema di misura ad un altro.</para>
<para
>Unità di massa supportate: g (grammo), sg (pieces), lbm (libbra), u (massa atomica), ozm (oncia), stone, ton, grain, pweight (pennyweight), hweight (hundredweight).</para>
<para
>Unità di distanza supportate: m (metro), in (pollice), ft (piede), mi (miglio), Nmi (miglio nautico), ang (ångström), parsec, lightyear (anno luce).</para>
<para
>Unità di pressione supportate: Pa (pascal), atm (atmosfere), mmHg (mm di mercurio), psi (libbre per pollice quadrato), Torr.</para>
<para
>Unità di forza supportate: N (newton), dyn, pound (libbra).</para>
<para
>Unità di energia supportate:J (joule), e (erg), c (caloria termodinamica), cal (caloria IT), eV (elettronvolt), HPh (cavalli vapore britannici-ora), Wh (watt-ora), flb (piedi-libbra), BTU.</para>
<para
>Unità di potenza supportate:W (watt), HP (cavalli vapore britannici), PS (cavalli vapore europei, CV).</para>
<para
>Unità magnetiche supportate: T (tesla), ga (gauss).</para>
<para
>Unità di temperatura supportate: C (Celsius), F (Fahrenheit), K (kelvin).</para>
<para
>Unità di volume supportate: l (litro), tsp (cucchiaino), tbs (cucchiaio), oz (oncia liquida), cup (tazza), pt (pinta), qt (quarto), gal (gallone), barrel (barile), m3 (metro cubo), mi3 (miglio cubo), Nmi3 (miglio nautico cubo), in3 (pollice cubo), ft3 (piede cubo), yd3 (iarda cuba), GRT o regton (gross register ton).</para>
<para
>Unità di superficie supportate: m2 (metro quadro), mi2 (miglio quadro), Nmi2 (miglio nautico quadro), in2 (pollice quadro), ft2 (piede quadro), yd2 (iarda quadra), acre (acro), ha (ettaro).</para>
<para
>Unità di velocità supportate: m/s (metri al secondo), m/h (metri all'ora), mph (miglia all'ora), kn (nodi).</para>
<para
>Per le unità metriche può essere usato qualunque di questi prefissi: E (exa, 1E+18), P (peta, 1E+15), T (tera, 1E+12), G (giga, 1E+09), M (mega, 1E+06), k (kilo, 1E+03), h (etto, 1E+02), e (deca, 1E+01), d (deci, 1E-01), c (centi, 1E-02), m (milli, 1E-03), u (micro, 1E-06), n (nano, 1E-09), p (pico, 1E-12), f (femto, 1E-15), a (atto, 1E-18).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CONVERT(Numero; Dall'unità; All'unità)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Dall'unità</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>All'unità</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CONVERT(32;"C";"F") dà 89,6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CONVERT(3;"lbm";"kg") dà 1,3608</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CONVERT(7,9;"cal";"J") dà 33,0757</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2BIN">
<title
>DEC2BIN</title>
<para
>La funzione DEC2BIN() restituisce in formato binario il valore dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DEC2BIN(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La lunghezza minima del risultato</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEC2BIN(12) restituisce "1100"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEC2BIN(55) restituisce "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2HEX">
<title
>DEC2HEX</title>
<para
>La funzione DEC2HEX() restituisce in formato esadecimale il valore dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DEC2HEX(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La lunghezza minima del risultato</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEC2HEX(12) restituisce "c"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEC2HEX(55) restituisce "37"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2OCT">
<title
>DEC2OCT</title>
<para
>La funzione DEC2OCT() restituisce in formato ottale il valore dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DEC2OCT(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>La lunghezza minima del risultato</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEC2OCT(12) restituisce "14"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEC2OCT(55) restituisce "67"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DELTA">
<title
>DELTA</title>
<para
>La funzione DELTA() restituisce 1 se x è uguale a y, altrimenti restituisce 0. Se non è specificato, si pone y=0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DELTA(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DELTA(1,2; 3,4) restituisce 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DELTA(3;3) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DELTA(1; TRUE) restituisce 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERF">
<title
>ERF</title>
<para
>La funzione ERF() restituisce la funzione di errore. Con un solo argomento ERF()  calcola la funzione di errore tra 0 e l'argomento dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ERF(Limite inferiore; limite superiore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Limite inferiore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Limite superiore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ERF(0,4) dà 0,42839236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ERFC"
>ERFC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERFC">
<title
>ERFC</title>
<para
>La funzione ERFC() restituisce la funzione d'errore complementare.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ERFC(limite inferiore; limite superiore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Limite inferiore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Limite superiore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ERFC(0,4) dà 0,57160764</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ERF"
>ERF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GESTEP">
<title
>GESTEP</title>
<para
>La funzione GESTEP() restituisce 1 se x è maggiore/uguale di y, altrimenti restituisce 0. Se non è specificato, si pone y=0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>GESTEP(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GESTEP(1,2; 3,4) restituisce 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GESTEP(3; 3) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GESTEP(0,4; TRUE) restituisce 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GESTEP(4; 3) restituisce 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2BIN">
<title
>HEX2BIN</title>
<para
>La funzione HEX2BIN() restituisce in formato binario il valore esadecimale dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>HEX2BIN(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HEX2BIN("a") restituisce "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HEX2BIN("37") restituisce "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2DEC">
<title
>HEX2DEC</title>
<para
>La funzione HEX2DEC() restituisce in formato decimale il valore esadecimale dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>HEX2DEC(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HEX2DEC("a") restituisce 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HEX2DEC("37") restituisce 55 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2OCT">
<title
>HEX2OCT</title>
<para
>La funzione HEX2OCT() restituisce in formato ottale il valore esadecimale dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>HEX2OCT(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HEX2OCT("a") restituisce "12" </para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HEX2OCT("37") restituisce "67" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMABS">
<title
>IMABS</title>
<para
>La funzione IMABS(numero complesso) restituisce la norma di un numero complesso della forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMABS(numero complesso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMABS("1,2+5i") restituisce 5,1419</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMABS("-i") restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMABS("12") restituisce 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMAGINARY">
<title
>IMAGINARY</title>
<para
>La funzione IMAGINARY(stringa) restituisce il coefficiente immaginario di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMAGINARY(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMAGINARY("1,2+3,4i") restituisce 3,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMAGINARY("1,2") restituisce 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMARGUMENT">
<title
>IMARGUMENT</title>
<para
>La funzione IMARGUMENT(numero complesso) restituisce l'argomento di un numero complesso della forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMARGUMENT(numero complesso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMARGUMENT("1,2+5i") restituisce 0,6072</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMARGUMENT("-i") restituisce -1,57079633 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMARGUMENT("12") restituisce "#Div/0"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCONJUGATE">
<title
>IMCONJUGATE</title>
<para
>La funzione IMCONJUGATE(numero complesso) restituisce il coniugato di un numero complesso della forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMCONJUGATE(numero complesso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCONJUGATE("1,2+5i") restituisce "1,2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCONJUGATE("-i") restituisce "i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCONJUGATE("12") restituisce "12"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOS">
<title
>IMCOS</title>
<para
>La funzione IMCOS(stringa) restituisce il coseno di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMCOS(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCOS("1+i") restituisce "0,83373-0,988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCOS("12i") restituisce 81 377,4 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOSH">
<title
>IMCOSH</title>
<para
>La funzione IMCOSH(stringa) restituisce il coseno iperbolico di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>

<listitem
><para
>IMCOSH(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCOSH("1+i") restituisce "0,83373+0,988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCOS("12i") restituisce 0,84358 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOT">
<title
>IMCOT</title>
<para
>La funzione IMCOT(stringa) restituisce la cotangente di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMCOT(string)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCOST("1+i") restituisce  "0,21762-0,86801i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSC">
<title
>IMCSC</title>
<para
>La funzione IMCSC(stringa) restituisce la cosecante di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMCSC(string)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCSC("1+i") restituisce "0,62151-0,30393i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSCH">
<title
>IMCSCH</title>
<para
>La funzione IMCSCH(stringa) restituisce la cosecante iperbolica di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMCSCH(string)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMCSCH("1+i") restituisce "0,30393-i0,62151"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMDIV">
<title
>IMDIV</title>
<para
>La funzione IMDIV() restituisce la divisione di vari numeri complessi della forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMDIV(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMDIV(1,2;"3,4+5i") restituisce "0,111597-0,164114i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMDIV("12+i";"12-i") restituisce "0,986207+0,16551i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMEXP">
<title
>IMEXP</title>
<para
>La funzione IMEXP(stringa) restituisce l'esponenziale di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMEXP(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMEXP("2-i") restituisce "3,99232-6,21768i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMEXP("12i") restituisce "0,843854-0,536573i" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLN">
<title
>IMLN</title>
<para
>La funzione IMLN(stringa) restituisce il logaritmo naturale di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMLN(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMLN("3-i") restituisce "1,15129-0,321751i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMLN("12") restituisce 2,48491 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG10">
<title
>IMLOG10</title>
<para
>La funzione IMLOG10(stringa) restituisce il logaritmo in base 10 di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMLOG10(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMLOG10("3+4i") restituisce "0,69897+0,402719i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG2">
<title
>IMLOG2</title>
<para
>La funzione IMLOG2(stringa) restituisce il logaritmo in base 2 di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMLOG2(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMLOG2("3+4i") restituisce "2,321928+1,337804i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPOWER">
<title
>IMPOWER</title>
<para
>La funzione IMPOWER(stringa) restituisce un numero complesso elevato ad una potenza.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMPOWER(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Potenza</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMPOWER("4-i";2) restituisce "15-8i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMPOWER("1,2";2) restituisce 1,44 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPRODUCT">
<title
>IMPRODUCT</title>
<para
>La funzione IMPRODUCT() restituisce il prodotto di vari numeri complessi della forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMPRODUCT(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMPRODUCT(1,2;"3,4+5i") restituisce "4,08+6i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMPRODUCT(1,2;"1i") restituisce "+1,2i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMREAL">
<title
>IMREAL</title>
<para
>La funzione IMREAL(stringa) restituisce il coefficiente reale di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMREAL(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMREAL("1,2+3,4i") restituisce 1,2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMREAL("1,2i") restituisce 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSEC">
<title
>IMSEC</title>
<para
>La funzione IMSEC(stringa) restituisce la secante di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMSEC(string)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSEC("1+i") restituisce "0,49833+i0,59108"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSECH">
<title
>IMSECH</title>
<para
>La funzione IMSECH(stringa) restituisce la secante iperbolica di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMSECH(string)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSECH("1+i") restituisce "0,49833-i0,59108"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSIN">
<title
>IMSIN</title>
<para
>La funzione IMSIN(stringa) restituisce il seno di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMSIN(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSIN("1+i") restituisce "1,29846+0,634964i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSIN("1,2") restituisce -0,536573 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSINH">
<title
>IMSINH</title>
<para
>La funzione IMSINH(stringa) restituisce il seno iperbolico di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMSINH(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSINH("1+i") restituisce "0,63496+1,29846i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSINH("1.2") restituisce 1,50946 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSQRT">
<title
>IMSQRT</title>
<para
>La funzione IMSQRT(stringa) restituisce la radice quadrata di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMSQRT(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSQRT("1+i") restituisce "1,09868+0,45509i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSQRT("1,2i") restituisce "0,774597+0,774597i" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUB">
<title
>IMSUB</title>
<para
>La funzione IMSUB() restituisce la differenza di vari numeri complessi della forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMSUB(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSUB(1,2;"3,4+5i") restituisce "-2,2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSUB(1,2;"1i") restituisce "1,2-i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUM">
<title
>IMSUM</title>
<para
>La funzione IMSUM() restituisce la somma di molti numeri complessi della forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMSUM(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSUM(1,2;"3,4+5i") restituisce "4,6+5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMSUM(1,2;"1i") restituisce "1,2+i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTAN">
<title
>IMTAN</title>
<para
>La funzione IMTAN(stringa) restituisce la tangente di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMTAN(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMTAN("1+i") restituisce "0,27175+1,08392i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMTAN("1.2") restituisce 2,57215</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTANH">
<title
>IMTANH</title>
<para
>La funzione IMTAN(stringa) restituisce la tangente iperbolica di un numero complesso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IMTANH(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero complesso</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMTANH("1+i") restituisce "1,08392+0,27175i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IMTANH("1.2") restituisce 0,83365</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2BIN">
<title
>OCT2BIN</title>
<para
>La funzione OCT2BIN() restituisce in formato binario il valore ottale dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>OCT2BIN(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>La lunghezza minima del risultato</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>OCT2BIN("12") restituisce "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>OCT2BIN("55") restituisce "101101"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2DEC">
<title
>OCT2DEC</title>
<para
>La funzione OCT2DEC() restituisce in formato decimale il valore ottale dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>OCT2DEC(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>OCT2DEC("12") restituisce 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>OCT2DEC("55") restituisce 45 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2HEX">
<title
>OCT2HEX</title>
<para
>La funzione OCT2HEX() restituisce in formato esadecimale il valore ottale dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>

<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>OCT2HEX(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il valore da convertire</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>La lunghezza minima del risultato</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>OCT2HEX("12") restituisce "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>OCT2HEX("55") restituisce "2D"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Financial">
<title
>Finanza</title>

<sect3 id="ACCRINT">
<title
>ACCRINT</title>
<para
>La funzione ACCRINT calcola gli interessi maturati da un titolo che paga cedole periodiche. Le frequenze previste sono 1 - annuale, 2 - semestrale e 4 - trimestrale. Base è il modo scelto per contare i giorni: 0: USA 30/360 (predefinito), 1: giorni effettivi, 2: giorni effettivi/360, 3: giorni effettivi/365 o 4: Europeo 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ACCRINT(emissione; prima cedola; liquidazione; interesse; val. nominale; frequenza; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data emissione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Primo interesse</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Interesse annuo del titolo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore nominale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Numero di pagamenti per anno</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Modo di contare i giorni</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ACCRINT("28/2/2001"; "31/8/2001"; "1/5/2001"; 0,1; 1000; 2; 0) restituisce 16944</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINTM"
>ACCRINTM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACCRINTM">
<title
>ACCRINTM</title>
<para
>La funzione ACCRINTM calcola gli interessi accumulati da un titolo che paga gli interessi alla data di scadenza. Base è il modo scelto per contare i giorni: 0: USA 30/360 (predefinito), 1: giorni effettivi, 2: giorni effettivi/360, 3: giorni effettivi/365 o 4: Europeo 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ACCRINT(emissione; liquidazione; interesse; val. nominale; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data emissione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Interesse annuo del titolo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore nominale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Modo di contare i giorni</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ACCRINTM("28/2/2001"; "31/8/2001"; 0,1; 100) restituisce 5,0278</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINT"
>ACCRINT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORDEGRC">
<title
>AMORDEGRC</title>
<para
>La funzione AMORDEGRC calcola il valore di ammortamento per il sistema di contabilità francese, utilizzando un deprezzamento degressivo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>AMORDEGRC(Costo; Data acquisto; Termine primo periodo; Valore residuo; Periodo; Tasso; Base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Costi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AMORDEGRC( 1000; "01-02- 2006", "31-12-2006"; 10; 0; 0,1; 1 ) restituisce 228</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="AMORLINC"
>AMORLINC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORLINC">
<title
>AMORLINC</title>
<para
>La funzione AMORLINC calcola il valore di ammortamento per il sistema di contabilità francese, utilizzando un deprezzamento lineare.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>AMORLINC(Costo; Data acquisto; Termine primo periodo; Valore residuo; Periodo; Tasso; Base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AMORLINC( 1000; "01-02- 2004", "31-12-2004"; 10; 0; 0,1; 1 ) restituisce 91,256831</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="AMORDEGRC"
>AMORDEGRC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPOUND">
<title
>COMPOUND</title>
<para
>La funzione COMPOUND() restituisce il valore di un investimento, dato il capitale, il tasso di interesse nominale, la frequenza e il tempo. Per esempio: €5000 al 12% di interesse, calcolato ogni 3 mesi, per i prossimi 5 anni  diventeranno COMPOUND(5000;0,12;4;5) ossia €9030,56.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COMPOUND(inizio;interesse;periodi;periodi_per_anno)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Capitale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasso di interesse</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodi in un anno</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Anni</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMPOUND(5000;0,12;4;5) è uguale a 9030,56</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONTINUOUS">
<title
>CONTINUOUS</title>
<para
>La funzione CONTINUOUS() calcola il ritorno di interessi composti continui, sulla base di capitale, interesse nominale e tempo in anni. Per esempio: €1000 con un guadagno del 10% per 1 anno diventa CONTINUOUS(1000; 0,1; 1) che ritorna €1105,17.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CONTINOUS(capitale_iniziale;interesse;anni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Capitale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasso di interesse</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Anni</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CONTINUOUS(1000;0,1;1) è uguale a 1105,17</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUPNUM">
<title
>COUPNUM</title>
<para
>La funzione COUPNUM calcola il numero di cedole previste tra la data di pagamento e quella di scadenza. Base è il modo scelto per contare i giorni: 0: USA 30/360 (predefinito), 1: giorni effettivi, 2: giorni effettivi/360, 3: giorni effettivi/365 o 4: Europeo 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COUPNUM(liquidazione; scadenza; frequenza; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Frequenza</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Modo di contare i giorni</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COUPNUM("28/2/2001"; "31/8/2001"; 2; 0) restituisce 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMIPMT">
<title
>CUMIPMT</title>
<para
>Calcola l'interesse cumulativo corrisposto.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CUMIPMT(tasso, periodi, valore, inizio, fine, tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>valore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>inizio</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>fine</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CUMIPMT( 0,06/12; 5*12; 100000; 5; 12; 0 ) è uguale a -3562,187023</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="CUMPRINC"
>CUMPRINC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMPRINC">
<title
>CUMPRINC</title>
<para
>Calcola il capitale accumulato che verrà corrisposto.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CUMPRINC(tasso, periodi, valore, inizio, fine, tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>valore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>inizio</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>fine</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CUMPRINC( 0,06/12; 5*12; 100000; 5; 12; 0 ) dà -11904,054201</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="CUMIPMT"
>CUMIPMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DB">
<title
>DB</title>
<para
>La funzione DB() calcola il deprezzamento di un bene per un periodo fissato usando il metodo a quote fisse proporzionali (fixed-declining). Il parametro mese è opzionale (ndt. rappresenta i mesi nel primo anno), se è omesso si assume pari a 12.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DB(costo; valore residuo; vita; periodo [;mese])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Costi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore residuo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Vita</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Mese</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DB(8000;400;6;3) è uguale a 1158,40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DB(8000;400;6;3;2) è uguale a 1783,41</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DDB">
<title
>DDB</title>
<para
>La funzione DDB() calcola il deprezzamento di un'attività per un periodo fissato usando il metodo a quote proporzionali ai valori residui (arithmetic-declining). Il fattore è opzionale, se è omesso si assume pari a 2. Tutti gli altri parametri devono essere maggiori di zero.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DDB(costo; valore residuo, vita; periodo [;fattore])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Costi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore residuo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Vita</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Fattore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DDB(75000;1;60;12;2) restituisce 1721,81</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DISC">
<title
>DISC</title>
<para
>La funzione DISC calcola il tasso di interesse per un titolo. Base è il modo scelto per contare i giorni: 0: USA 30/360 (predefinito), 1: giorni effettivi, 2: giorni effettivi/360, 3: giorni effettivi/365 o 4: Europeo 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DISC(liquidazione; scadenza; valore nominale; rimborso[; base])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Prezzo per 100€ di valore nominale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rimborso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Modo di contare i giorni</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DISC("28/2/2001"; "31/8/2001"; 12; 14) restituisce 0,2841</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARDE">
<title
>DOLLARDE</title>
<para
>La funzione DOLLARDE() trasforma dei dollari dal formato frazionario a quello decimale. ImportoFrazionario è il numero da convertire e  Frazione è il denominatore della frazione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DOLLARDE(ImportoFrazionario; Frazione)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dollaro frazionario</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Frazione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DOLLARDE(1,02; 16) - sta per 1 e 2/16 - restituisce 1,125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARFR"
>DOLLARFR</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARFR">
<title
>DOLLARFR</title>
<para
>La funzione DOLLARFR() trasforma dei dollari dal formato decimale a quello  frazionario. ImportoDecimale è il numero da convertire e Frazione è il denominatore della frazione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DOLLARFR(ImportoDecimale; Frazione)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dollaro decimale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Frazione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DOLLARFR(1.125; 16) restituisce 1,02. (1 + 2/16)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARDE"
>DOLLARDE</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION">
<title
>DURATION</title>
<para
>Calcola il numero di periodi necessari affinché un investimento raggiunga un valore prefissato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DURATION(interesse; pv; fv)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore attuale (PV)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore futuro (FV)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DURATION(0,1; 1000; 2000) restituisce 7,27</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION_ADD">
<title
>DURATION_ADD</title>
<para
>Restituisce la durata Macauley in anni di un titolo a tasso fisso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
> DURATION_ADD(liquidazione; scadenza; cedola, rendimento; frequenza; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Cedola</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendimento</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Frequenza</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DURATION_ADD( "1998-01-01"; "2006-01-01"; 0,08; 0,09; 2; 1 ) restituisce 5,9937749555</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MDURATION"
>MDURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EFFECT">
<title
>EFFECT</title>
<para
>La funzione EFFECT() calcola il rendimento effettivo di un titolo, dato il tasso di interesse nominale (tasso annuale o APR). Per esempio: un interesse composto mensile dell'8% produce un tasso effettivo pari a EFFECTIVE(0,08;12) o 8,3%.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EFFECT(nominale;periodi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso di interesse nominale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EFFECT(0,08;12) è uguale a 0,083</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="EFFECTIVE"
>EFFECTIVE</link
>&nbsp;</member>
<member
><link linkend="NOMINAL"
>NOMINAL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="EFFECTIVE">
<title
>EFFECTIVE</title>
<para
>La funzione EFFECTIVE() calcola il rendimento effettivo di un titolo, dato il tasso di interesse nominale (tasso annuale o APR). È identica alla funzione EFFECT.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EFFECTIVE(nominale;periodi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso di interesse nominale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EURO">
<title
>EURO</title>
<para
>La funzione EURO() converte un Euro nella valuta nazionale assegnata tra quelle dell'Unione Monetaria Europea. La valuta è una delle seguenti: ATS (Austria), BEF (Belgio), DEM (Germania), ESP (Spagna), EUR (Euro), FIM (Finlandia), FRF (Francia), GRD (Grecia), IEP (Irlanda), ITL (Italia), LUF (Lussemburgo), NLG (Paesi bassi) e PTE (Portogallo).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EURO(Valuta)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valuta</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EURO("DEM") è uguale a 1,95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="EUROCONVERT"
>EUROCONVERT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EUROCONVERT">
<title
>EUROCONVERT</title>
<para
>La funzione EUROCONVERT() converte un Euro in una valuta nazionale assegnata tra quelle dell'Unione Monetaria Europea. La valuta è una delle seguenti: ATS (Austria), BEF (Belgio), DEM (Germania), ESP (Spagna), EUR (Euro), FIM (Finlandia), FRF (Francia), GRD (Grecia), IEP (Irlanda), ITL (Italia), LUF (Lussemburgo), NLG (Paesi Bassi) e PTE (Portogallo).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EUROCONVERT(numero; valuta origine; valuta finale)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valuta origine</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Valuta destinazione</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EUROCONVERT(1; "EUR"; "DEM") è uguale a 1,95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="EURO"
>EURO</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV">
<title
>FV</title>
<para
>La funzione FV() restituisce il valore futuro (montante) di un investimento, dato il rendimento ed il tempo trascorso. Se hai €1000 in una banca che dà 8% di interesse, dopo due anni avrai FV(1000;0,08;2) o €1166,40.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FV(valore attuale;rendimento;periodi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore attuale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FV(1000;0,08;2) è uguale a 1166,40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV_ANNUITY">
<title
>FV_ANNUITY</title>
<para
>La funzione FV_ANNUITY() restituisce il valore futuro di una serie di pagamenti dato il totale dei pagamenti, il tasso d'interesse ed il numero di periodi. Per esempio: se ricevi €500 l'anno per 20 anni e li investi all'8%, il totale dopo 20 anni sarà FV_ANNUITY(500;0,08;20) ossia €22.880,98. Questa funzione assume che i pagamenti siano effettuati alla fine di ogni periodo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FV_ANNUITY(totale;interesse;periodi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Pagamento per periodo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasso di interesse</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FV_ANNUITY(1000 ; 0,05 ; 5) è uguale a 5525,63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTRATE">
<title
>INTRATE</title>
<para
>La funzione INTRATE calcola il tasso di interesse per un titolo "fully invested" (ndt. non paga cedole ma dà un premio di rimborso). Base è il modo scelto per contare i giorni: 0: USA 30/360 (predefinito), 1: giorni effettivi, 2: giorni effettivi/360, 3: giorni effettivi/365 o 4: Europeo 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>INTRATE(liquidazione; scadenza; investimento; rimborso; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Investimento</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rimborso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Modo di contare i giorni</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INTRATE("28/2/2001"; "31/8/2001"; 1000000; 2000000; 1) restituisce 1,98</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IPMT">
<title
>IPMT</title>
<para
>IPMT calcola l'importo pagato in un anno per un investimento in quota interessi.</para>
<para
>Tasso è il tasso di interesse per un periodo.</para>
<para
>Periodo è il periodo di ammortamento: 1 il primo e NPER l'ultimo.</para>
<para
>NPER è il numero totale di volte in cui le rate vengono pagate.</para>
<para
>PV è il valore attuale in seguito ai pagamenti.</para>
<para
>FV (opzionale) è il valore (futuro) previsto. È predefinito uguale a 0.</para>
<para
>Tipo (opzionale) definisce i tempi dei versamenti: 1, se effettuati all'inizio del periodo, o 0 (predefinito), se alla fine.</para>
<para
>L'esempio mostra l'interesse da pagare nell'ultimo anno di un prestito triennale. Il tasso di interesse è del 10 per cento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IPMT(Tasso; Periodo; NPer; PV; FV; Tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Numero di periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori attuali</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore futuro (opzionale)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opzionale)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IPMT(0,1;3;3;8000) vale -292,45</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IRR">
<title
>IRR</title>
<para
>La funzione IRR calcola il tasso interno di rendimento per una serie di flussi di cassa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IRR( Valori[; Ipotesi = 0,1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Ipotesi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="XIRR"
>XIRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISPMT">
<title
>ISPMT</title>
<para
>Calcola l'interesse pagato da un investimento in un periodo assegnato.</para>
<para
>Tasso è il tasso di interesse per un periodo.</para>
<para
>Periodo è il periodo di ammortamento: 1 il primo e NPER l'ultimo.</para>
<para
>NPER è il numero totale di volte in cui le rate vengono pagate.</para>
<para
>PV è il valore attuale in seguito ai pagamenti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISPMT(Tasso; Periodo; NPer; PV)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di periodi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valore attuale (PV)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISPMT(0,1; 1; 3; 8000000) è uguale a -533333</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEVEL_COUPON">
<title
>LEVEL_COUPON</title>
<para
>La funzione LEVEL_COUPON() calcola il valore di un titolo level-coupon. Per esempio: se il tasso d'interesse è del 10%, un titolo di €1000 con cedola semestrale con un tasso del 13% che matura in 4 anni ha una resa di LEVEL_COUPON(1000;,13;4;,1) o €1096,95.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LEVEL_COUPON(valore nominale;tasso cedola;cedole per anno;anni;tasso d'interesse di mercato)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore nominale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Indice della cedola</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Cedole per anno</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Anni</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasso d'interesse di mercato</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LEVEL_COUPON(1000;,13;2;4;,1) è uguale a 1096,95</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDURATION">
<title
>MDURATION</title>
<para
>La funzione MDURATION() calcola a quanti anni ammonta la durata Macauley modificata di un titolo a tasso d'interesse fisso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MDURATION(liquidazione; scadenza; cedola; rendimento; frequenza; [ Base=0 ])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Cedola</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendimento</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Frequenza</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MDURATION("1/2/2004"; "31/5/2004"; 0,08; 0,09; 2; 0) restituisce 0,316321106</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DURATION"
>DURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIRR">
<title
>MIRR</title>
<para
>La funzione MIRR() calcola il tasso di rendimento interno(IRR) modificato per una serie di investimenti periodici.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MIRR(valori; investimento; reinvestimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Investimento</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Reinvestimento</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MIRR({100;200;-50;300;-200}, 5%, 6%) è uguale a 34.2823387842%</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOMINAL">
<title
>NOMINAL</title>
<para
>La funzione NOMINAL() calcola il tasso di interesse nominale che rende un tasso di interesse effettivo (annuale) composto ad intervalli dati. Per esempio: per guadagnare l'8% su un conto ad interessi mensili composti, c'è bisogno di un ritorno di NOMINAL(,08;12) o 7,72%.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NOMINAL(effettivo;periodi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso di interesse effettivo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NOMINAL(0,08;12) è uguale a 0,0772</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPER">
<title
>NPER</title>
<para
>Calcola il numero di periodi di un investimento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NPER(tasso;rata;pv;fv;tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rata</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore attuale (PV)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore futuro (FV - opzionale)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opzionale)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NPER(0,1; -100; 1000) è uguale a 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NPER(0,06; 0; -10000; 20000 ;0) restituisce 11,906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPV">
<title
>NPV</title>
<para
>Valore attuale netto (NPV) per una serie di flussi di cassa periodici.</para>
<para
>Calcola il valore attuale netto (NPV) per una serie di flussi di cassa periodici con tasso di interesse assegnato. Gli importi saranno positivi se incassati e negativi se spesi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NPV(tasso; importi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NPV(100%;4;5;7) = 4,125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLPRICE">
<title
>ODDLPRICE</title>
<para
>La funzione ODDLPRICE calcola il valore di un titolo con valore nominale 100. Il titolo può avere una data irregolare per l'ultima cedola di interessi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ODDLPRICE( liquidazione; scadenza; ultima-cedola, interesse; Rend.Annuo; rimborso; Frequenza [; Base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Ultimo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>RendimentoAnnuo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rimborso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Frequenza</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ODDLPRICE(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;5%;100;2) restituisce 90,991042345</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLYIELD">
<title
>ODDLYIELD</title>
<para
>La funzione ODDLYELD calcola il rendimento di un titolo con una data irregolare per l'ultima cedola di interessi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ODDLYIELD(pagamento; scadenza; ultima-cedola; interesse; prezzo; rimborso; frequenza [; base =0])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Ultimo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Prezzo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rimborso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Frequenza</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ODDLYIELD(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;91;100;2) restituisce 4,997775351</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ODDLPRICE"
>ODDLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PMT">
<title
>PMT</title>
<para
>PMT restituisce il montante da pagare a fronte di un prestito basato su un tasso di interesse costante e rate costanti (tutte le rate sono uguali).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PMT(tasso; nper ; pv [; fv=0 [; tipo=0 ]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Numero di rate (NPer)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore attuale (PV)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore futuro (FV - opzionale)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opzionale)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PMT(0,1; 4; 10000) è uguale a -3154,71</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PPMT">
<title
>PPMT</title>
<para
>PPMT calcola l'importo pagato in un anno in quota capitale per un investimento.</para>
<para
>Tasso è il tasso di interesse per un periodo.</para>
<para
>Periodo è il periodo di ammortamento: 1 il primo e NPER l'ultimo.</para>
<para
>NPER è il numero totale di volte in cui le rate vengono pagate.</para>
<para
>PV è il valore attuale in seguito ai pagamenti.</para>
<para
>FV (opzionale) è il valore (futuro) previsto. È predefinito uguale a 0.</para>
<para
>Tipo (opzionale) definisce i tempi dei versamenti: 1, se effettuati all'inizio del periodo, o 0 (predefinito), se alla fine.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PPMT(Tasso; Periodo; NPer; PV [; FV=9 [; Tipo=0]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Numero di periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore attuale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore futuro (opzionale)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opzionale)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PPMT(0,0875;1;36;5000;8000;1) vale -18,48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRICEMAT">
<title
>PRICEMAT</title>
<para
>PRICEMAT calcola il prezzo di un titolo con valore nominale 100 che paga l'interesse alla data di scadenza.</para>
<para
>Base Metodo di calcolo</para>
<para
>0 Metodo USA, 12 mesi, ogni mese ha 30 giorni</para>
<para
>1 Numero effettivo di giorni nell'anno e nel mese </para>
<para
>2 360 giorni nell'anno, numero effettivo di giorni nel mese</para>
<para
>4 365 giorni nell'anno, numero effettivo di giorni nel mese</para>
<para
>5 Metodo Europeo, 12 mesi, ogni mese ha 30 giorni</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PRICEMAT(liquidazione; maturità; emissione; tasso; rendimento [; Base=0 ])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Emissione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Tasso di sconto</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rendimento</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PRICEMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);6%;5%) restituisce103,819218241</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV">
<title
>PV</title>
<para
>La funzione PV() restituisce il valore attuale di un investimento -- il valore odierno di una somma di denaro in futuro, dato il tasso di interesse o di inflazione. Per esempio, se hai bisogno di €1166,40 per il tuo nuovo computer e vuoi comprarlo tra due anni (durante i quali ricevi l'8% di interessi), devi partire con PV(1166,4;0,08;2) ossia €1000.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PV(valore futuro;interesse;periodi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore futuro</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasso di interesse</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PV(1166,4;0,08;2) è uguale a 1000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV_ANNUITY">
<title
>PV_ANNUITY</title>
<para
>La funzione PV_ANNUITY() restituisce il valore attuale di una rendita annua o di una serie di pagamenti. Per esempio: un biglietto di una lotteria da un " milione di euro" che paga €50.000 l'anno per 20 anni, con un interesse del 5%, vale attualmente PV_ANNUITY(50000;0,05;20) ossia €623.111. Questa funzione assume che i pagamenti siano fatti alla fine di ogni periodo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PV_ANNUITY(totale;interesse;periodi)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Pagamento per periodo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasso di interesse</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PV_ANNUITY(1000;0,05;5) è uguale a 4329,48</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RATE">
<title
>RATE</title>
<para
>La funzione RATE() calcola il tasso d'interesse costante periodale di un investimento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RATE(nper;pmt;pv;fv;tipo;stima)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Periodo di pagamento</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Pagamenti regolari</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore attuale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore futuro</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Ipotesi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RATE(4*12;-200;8000) è uguale a 0,007701472</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RECEIVED">
<title
>RECEIVED</title>
<para
>La funzione RECEIVED calcola l'importo che si riceverà alla scadenza di un titolo d'investimento. La base rappresenta il modo di contare i giorni: 0: USA 30/360 (predefinito), 1: giorni effettivi, 2: giorni effettivi/360, 3: giorni effettivi/365 o 4: Europeo 30/365. La data di pagamento deve essere anteriore a quella di scadenza.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RECEIVED(liquidazione; scadenza; investimento; tasso; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Investimento</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasso di sconto</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RECEIVED("28/2/2001"; "31/8/2001"; 1000; 0,05; 0) restituisce 1.025,787</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RRI">
<title
>RRI</title>
<para
>La funzione RRI calcola il tasso d'interesse risultante dal profitto (rendimento) di un investimento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RRI(P; Pv; Fv)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Pv</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Fv</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RRI(1;100;200) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLN">
<title
>SLN</title>
<para
>La funzione SLN() determina l'ammortamento costante di un bene in un singolo periodo. Costo è l'ammontare pagato per il bene. Il valore residuo è il valore del bene alla fine dell'ultimo periodo. Vita è il numero di periodi nel corso dei quali il bene viene ammortizzato. SLN suddivide uniformemente il costo lungo tutta la vita del bene.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SLN(costo; valore residuo; vita)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Costi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore residuo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Vita</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SLN(10000;700;10) è uguale a 930</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SYD"
>SYD</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SYD">
<title
>SYD</title>
<para
>La funzione SYD() calcola l'indice di deprezzamento totale pluriennale per un bene in base al suo costo, valore residuo, vita anticipata e un periodo particolare. Questo metodo accelera il tasso di deprezzamento, così questo costo di deprezzamento peserà più sui primi periodi che sugli ultimi. Il costo deprezzato è il costo attuale meno il valore residuo. La vita utile è il numero di periodi (solitamente anni) lungo la quale il bene verrà deprezzato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SYD(costo; valore residuo; vita; periodo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Costi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore residuo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Vita</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Periodo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SYD(5000; 200; 5; 2) è uguale a 1280</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLEQ">
<title
>TBILLEQ</title>
<para
>La funzione TBILLQ trova il bond (ndt. titolo a cedole) equivalente a un TreasuryBill (ndt. titolo zero-coupon, a breve durata). La data di scadenza deve essere successiva a quella di pagamento, ma entro 365 giorni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TBILLEQ(liquidazione; scadenza; interesse)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Tasso di sconto</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TBILLEQ("28/2/2001"; "31/8/2001"; 0,1) restituisce 0,1068</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLPRICE">
<title
>TBILLPRICE</title>
<para
>La funzione TBILLPRICE dà il prezzo di un TreasuryBill (ndt. titolo zero-coupon, a breve durata) da €100. La data di scadenza deve essere successiva a quella di pagamento, ma entro 365 giorni. Il tasso di interesse deve essere positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TBILLPRICE(liquidazione; scadenza; interesse)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Tasso di sconto</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TBILLPRICE("28/8/2001"; "31/8/2001"; 0,05) restituisce 97,4444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLYIELD">
<title
>TBILLYIELD</title>
<para
>La funzione TBILLYIELD calcola il rendimento di un TreasuryBill (ndt. titolo zero-coupon, a breve durata). La data di scadenza deve essere successiva a quella di pagamento, ma entro 365 giorni. Il prezzo deve essere positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TBILLYIELD(liquidazione; scadenza; prezzo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Prezzo per 100€ di valore nominale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TBILLYIELD("28/2/2001"; "31/8/2001"; 96,82) restituisce 0,06321785</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VDB">
<title
>VDB</title>
<para
>VDB calcola il margine di deprezzamento per un titolo di cui è dato il valore iniziale, la durata utile attesa ed il valore residuo finale dopo un periodo specificato, usando il metodo a quote proporzionali con tasso variabile (variable-rate declining balance).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>VDB(costo; valore residuo; vita; periodo-inizio; periodo-fine; [; fattore-deprezzamento = 2 [; switch = false ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Prezzo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rimborso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VDB(10000;600;10;0;0,875;1,5) restituisce 1312,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XIRR">
<title
>XIRR</title>
<para
>La funzione IRR calcola il tasso interno di rendimento per una serie non-periodica di flussi di cassa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>XIRR( Valori; Date[; Ipotesi = 0,1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Date</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Ipotesi</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>XIRR(B1:B4;C1:C4) restituisce 0,2115964, se B1:B4 contiene -20000, 4000, 12000, 8000 e C1:C4 contiene "=DATE(2000;1;1)", "=DATE(2000;6;1)", "=DATE(2000;12;30)", "=DATE(2001;3;1)"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XNPV">
<title
>XNPV</title>
<para
>La funzione XNPV calcola il valore netto attuale di una serie di flussi di cassa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>XNPV( Tasso; Valori; Date )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tasso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Date</seg
><seg
>Data</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>XNPV(5%;B1:B4;C1:C4) restituisce 2907,83187 se B1:B4 contiene -20000, 4000, 12000, 8000 e C1:C4 contiene "=DATE(2000;1;1)", "=DATE(2000;6;1)", "=DATE(2000;12;30)", "=DATE(2001;3;1)" </para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="NPV"
>NPV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDDISC">
<title
>YIELDDISC</title>
<para
>YIELDDISC calcola il rendimento di un titolo scontato con valore nominale 100.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>YIELDDISC(data-pagamento; scadenza; prezzo; rimborso; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Prezzo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Rimborso</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>YIELDDISC(DATE(1990;6;1);DATE(1990;12;31);941.66667;1000) restituisce 0,106194684</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDMAT">
<title
>YIELDMAT</title>
<para
>La funzione YIELDMAT calcola il rendimento di un titolo che paga gli interessi alla data di scadenza.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>YIELDMAT(pagamento; scadenza; emissione; tasso; prezzo; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Liquidazione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Scadenza</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Emissione</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Tasso di sconto</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Prezzo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>YIELDMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990; 1; 1); 6%;103,819218241) restituisce 0,050000000</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="YIELDDISC"
>YIELDDISC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZERO_COUPON">
<title
>ZERO_COUPON</title>
<para
>La funzione ZERO_COUPON() calcola il valore di un titolo zero_coupon (sconto puro). Per esempio: se il tasso di interesse è del 10%, un titolo di €1000 che matura tra 20 anni vale ZERO_COUPON(1000;,1;20) o €148,64.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ZERO_COUPON(valore nominale;tasso;anni)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore nominale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tasso di interesse</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Anni</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ZERO_COUPON(1000;,1;20) è uguale a 148,64</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2
><sect2 id="Information">
<title
>Informazione</title>

<sect3 id="ERRORTYPE">
<title
>ERRORTYPE</title>
<para
>La funzione ERRORTYPE() converte un messaggio d'errore in un numero. Se l'argomento non è un errore, viene restituito un errore. Altrimenti, viene reso un codice numerico. I codici di errore sono basati su quelli di Excel.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ERRORTYPE(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Errore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ERRORTYPE(NA()) restituisce 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ERRORTYPE(0) dà errore</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FILENAME">
<title
>FILENAME</title>
<para
>Restituisce il nome del file corrente. Se il documento corrente non è salvato, è restituita una stringa vuota.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FILENAME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FORMULA">
<title
>FORMULA</title>
<para
>La funzione FORMULA() restituisce una stringa con la formula contenuta nella cella.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Riferimento</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FORMULA(A1) restituisce "=SUM(1+2)" se la cella A1 contiene questa formula.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INFO">
<title
>INFO</title>
<para
>La funzione INFO() restituisce informazioni sull'ambiente operativo corrente. Il tipo di parametro specifica che tipo di informazione si desidera ottenere. È uno dei seguenti: "directory" restituisce il percorso della directory corrente, "numfile" restituisce il numero dei documenti attivi, "release" restituisce la versione di &sheets; come testo, "recalc" restituisce la modalità corrente di ricalcolo: "Automatic" o "Manual", "system" restituisce il nome dell'ambiente operativo, "osversion" restituisce il nome del sistema operativo corrente.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>INFO(tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo di informazione</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISBLANK">
<title
>ISBLANK</title>
<para
>La funzione ISBLANK() restituisce 'True' se il parametro è vuoto. Altrimenti restituisce 'False'.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISBLANK(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISBLANK(A1) restituisce 'True' se A1 è vuoto</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISBLANK(A1) restituisce 'False' se A1 contiene un valore</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISDATE">
<title
>ISDATE</title>
<para
>La funzione ISDATE() restituisce True se il parametro è un'espressione di una data. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISDATE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISDATE("2/2/2000") restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISDATE("ciao") restituisce 'False'</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERR">
<title
>ISERR</title>
<para
>La funzione ISERR() restituisce True se il parametro è un errore diverso da N/A. Altrimenti restituisce False. Puoi usare ISERROR() se vuoi includere anche gli errori di tipo N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISERR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERROR">
<title
>ISERROR</title>
<para
>La funzione ISERROR() restituisce True se il parametro è un errore di qualsiasi tipo. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISERROR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISEVEN">
<title
>ISEVEN</title>
<para
>La funzione ISEVEN() restituisce True se il numero è pari. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISEVEN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISEVEN(12) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISEVEN(-7) restituisce False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISFORMULA">
<title
>ISFORMULA</title>
<para
>La funzione ISFORMULA() restituisce 'True' se la cella contiene una formula. Altrimenti restituisce 'False'.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISFORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Riferimento</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLOGICAL">
<title
>ISLOGICAL</title>
<para
>La funzione ISLOGICAL() restituisce 'True' se il parametro è un valore booleano. Altrimenti è restituito 'False'.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISLOGICAL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISLOGICAL(A1
>A2) restituisce 'True'</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISLOGICAL(12) restituisce 'False'</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNA">
<title
>ISNA</title>
<para
>La funzione ISNA() restituisce True se il parametro è un errore di tipo N/A. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISNA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNONTEXT">
<title
>ISNONTEXT</title>
<para
>La funzione ISNONTEXT() restituisce True se il parametro non è una stringa. Altrimenti restituisce False. È identica alla funzione ISNOTTEXT.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISNONTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISNONTEXT(12) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISNONTEXT("ciao") restituisce False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ISNOTTEXT"
>ISNOTTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNOTTEXT">
<title
>ISNOTTEXT</title>
<para
>La funzione ISNOTTEXT() restituisce True se il parametro non è una stringa. Altrimenti restituisce False. È identica alla funzione ISNONTEXT.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISNOTTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISNOTTEXT(12) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISNOTTEXT("ciao") restituisce False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ISNONTEXT"
>ISNONTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUM">
<title
>ISNUM</title>
<para
>La funzione ISNUM() restituisce True se il parametro è un valore numerico. Altrimenti restituisce False. È identica alla funzione ISNUMBER.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISNUM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISNUM(12) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISNUM(ciao) restituisce False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ISNUMBER"
>ISNUMBER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUMBER">
<title
>ISNUMBER</title>
<para
>La funzione ISNUMBER() restituisce True se il parametro è un valore numerico. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISNUMBER(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISNUMBER(12) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISNUMBER(ciao) restituisce False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ISNUM"
>ISNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISODD">
<title
>ISODD</title>
<para
>La funzione ISODD() restituisce True se il numero è dispari. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISODD(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISODD(12) restituisce False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISODD(-7) restituisce True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISREF">
<title
>ISREF</title>
<para
>La funzione ISREF() restituisce True se il parametro è un riferimento. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISREF(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISREF(A12) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISREF("ciao") restituisce 'False'</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTEXT">
<title
>ISTEXT</title>
<para
>La funzione ISTEXT() restituisce True se il parametro è una stringa. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISTEXT(12) restituisce False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISTEXT("ciao") restituisce True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTIME">
<title
>ISTIME</title>
<para
>La funzione ISTIME() restituisce True se il parametro è un'espressione di tempo. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ISTIME(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISTIME("12:05") restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ISTIME("ciao") restituisce False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="N">
<title
>N</title>
<para
>La funzione N() converte un valore in un numero. Se il valore è o fa riferimento a un numero, la funzione restituisce il numero. Se il valore è "True", questa funzione restituisce 1. Se un valore è una data, questa funzione restituisce il numero seriale di quella data. Qualsiasi altra cosa porterà la funzione a restituire il valore 0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>N(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>N(3,14) restituisce 3,14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>N("7") restituisce 0 (perché "7" è testo)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NA">
<title
>NA</title>
<para
>La funzione NA() restituisce codice d'errore permanente, N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Errore</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NA()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TYPE">
<title
>TYPE</title>
<para
>La funzione TYPE() restituisce 1 se il valore è un numero, 2 se è un testo, 4 se è un valore logico, 16 se è un errore o 64 se è un array. Se l'argomento è una cella che contiene una formula, sarà restituito numero corrispondente al tipo del risultato della formula.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>

<listitem
><para
>TYPE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TYPE(A1) restituisce 2, se A1 contiene "Testo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TYPE(-7) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TYPE(A2) restituisce 1, se A2 contiene "=CURRENTDATE()"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Logical">
<title
>Logiche</title>

<sect3 id="AND">
<title
>AND</title>
<para
>La funzione AND() restituisce True se tutti i valori sono veri. Altrimenti restituisce False, a meno che uno dei valori non sia un errore. In tal caso dà errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>AND(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AND(true;true;true) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AND(true;false) restituisce False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FALSE">
<title
>FALSE</title>
<para
>La funzione FALSE() restituisce il valore booleano FALSE.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FALSE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FALSE() restituisce FALSE</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IF">
<title
>IF</title>
<para
>La funzione IF() è una funzione condizionale. Questa funzione restituisce il secondo parametro se la condizione è vera. Altrimenti restituisce il terzo parametro (che è predefinito per False).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IF(condizione;se_vero;se_falso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Condizione</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Se vero</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem>
<seglistitem
><seg
>Se falso</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>A1=4;A2=6;IF(A1
>A2;5;3) restituisce 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFERROR">
<title
>IFERROR</title>
<para
>Restituisci X a meno che non sia un errore, in tal caso restituisci un valore alternativo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IFERROR(QualsiasiX;QualsiasiAlternativa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi X</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem>
<seglistitem
><seg
>Qualsiasi alternativa</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IFERROR(A1;A2) restituisce il contenuto di A1 se tale contenuto non è un valore errato, altrimenti viene restituito il contenuto di A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFNA">
<title
>IFNA</title>
<para
>Restituisci X a meno che non sia un valore ND, in tal caso restituisci un valore alternativo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>IFNA(QualsiasiX;QualsiasiAlternativa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualsiasi X</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem>
<seglistitem
><seg
>Qualsiasi alternativa</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>IFNA(A1;A2) restituisce il contenuto di A1 se tale contenuto non è un valore #N/D, altrimenti viene restituito il contenuto di A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NAND">
<title
>NAND</title>
<para
>La funzione NAND() restituisce True se almeno un valore non è vero. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NAND(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NAND(true;false;false) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NAND(true;true) restituisce False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOR">
<title
>NOR</title>
<para
>La funzione NOR() restituisce True se tutti i valori dati come parametri sono di tipo booleano e hanno valore "false". Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NOR(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NOR(true;false;false) restituisce False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NOR(false;false) restituisce True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOT">
<title
>NOT</title>
<para
>La funzione NOT() restituisce True se il valore è False e restituisce False se il valore è True. Se il valore fornito è un errore, dà errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NOT(booleano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore booleano</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NOT(false) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NOT(true) restituisce False</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OR">
<title
>OR</title>
<para
>La funzione OR() restituisce True se almeno un valore è vero. Altrimenti restituisce False, a meno che uno dei valori non sia un errore. In tal caso dà errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>OR(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>OR(false;false;false) restituisce False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>OR(true;false) restituisce True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUE">
<title
>TRUE</title>
<para
>La funzione TRUE() restituisce il valore booleano TRUE.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TRUE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TRUE() restituisce TRUE</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XOR">
<title
>XOR</title>
<para
>La funzione XOR() restituisce 'False' se il numero di valori True è pari. Altrimenti restituisce 'True'. Dà errore se uno dei valori è un errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>XOR(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Valori booleani</seg
><seg
>Un intervallo di valori di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>XOR(false;false;false) restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>XOR(true;false) restituisce True</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Lookup---Reference">
<title
>Ricerca e riferimenti</title>

<sect3 id="ADDRESS">
<title
>ADDRESS</title>
<para
>ADDRESS costruisce l'indirizzo di una cella. I parametri sono: il numero della Riga e il numero della Colonna.</para>
<para
>"Assoluto" è un numero che indica il tipo di riferimento (1 o nulla= assoluto, 2=riga assoluta e colonna relativa, 3=riga relativa e colonna assoluta, 4=relativo).</para>
<para
>Stile A1 specifica lo stile con cui restituire l'indirizzo. Se A1 è posto TRUE (predefinito) l'indirizzo è restituito nella forma di A1, se è FALSE nella forma R1C1.</para>
<para
>Nome_foglio è la scritta che definisce il nome del foglio.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ADDRESS(riga; colonna; assoluto; stile; nome_foglio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero riga</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero colonna</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero assoluto (opzionale)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Stile A1 (opzionale)</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem>
<seglistitem
><seg
>Nome del foglio</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ADDRESS(6; 4) restituisce $D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ADDRESS(6; 4; 2) restituisce D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ADDRESS(6; 4; 2; FALSE; "Foglio1") restituisce Foglio1!R6C[4]</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ADDRESS(6; 4; 1; FALSE; "Foglio1") restituisce Foglio1!R6C4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ADDRESS(6; 4; 4; TRUE; "Foglio1") restituisce Foglio1!D6</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AREAS">
<title
>AREAS</title>
<para
>Restituisce il numero di aree nella stringa del riferimento. Un'area può essere una cella singola o un insieme di celle.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>AREAS(riferimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AREAS(A1) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AREAS((A1; A2:A4)) restituisce 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CELL">
<title
>CELL</title>
<para
>Restituisce le informazioni circa la posizione, la formattazione e il contenuto di un riferimento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CELL(tipo; riferimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Riferimento</seg
><seg
>Riferimento</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CELL("COL", C7) restituisce 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CELL("ROW", C7) restituisce 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CELL("ADDRESS", C7) restituisce $C$7</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHOOSE">
<title
>CHOOSE</title>
<para
>Restituisce il parametro specificato dall'indice.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CHOOSE(indice; parametro1; parametro2;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Indice</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Argomenti</seg
><seg
></seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CHOOSE(1; "Primo"; "Secondo") restituisce "Primo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CHOOSE(2; 3; 2; 4) restituisce 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMN">
<title
>COLUMN</title>
<para
>La funzione COLUMN restituisce la colonna della cella di cui si dà il riferimento. Se non si specificano parametri viene restituita la colonna della cella attuale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COLUMN(riferimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COLUMN(A1) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COLUMN(D2) restituisce 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMNS">
<title
>COLUMNS</title>
<para
>La funzione COLUMNS restituisce il numero di colonne nel riferimento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COLUMNS(riferimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COLUMNS(A1:C3) restituisce 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COLUMNS(D2) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HLOOKUP">
<title
>HLOOKUP</title>
<para
>Cerca un valore corrispondente nella prima riga della tabella assegnata e restituisce la riga indicata.</para>
<para
>Verifica se il 'valore da cercare' è presente nella prima riga della 'sorgente dati'. Se lo trova, restituisce il valore nella 'riga' e la colonna in cui il valore è stato trovato. Se 'ordinato' è TRUE (predefinito), si assume che la 'riga' sia ordinata. La ricerca viene interrotta se il 'valore da cercare' è minore del valore che si sta confrontando.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Stringa/Numerico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>HLOOKUP(Valore da cercare; Sorgente di dati; Riga; Ordinato)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore da cercare</seg
><seg
>Stringa/Numerico</seg
></seglistitem>
<seglistitem
><seg
>Sorgente dati</seg
><seg
>Array</seg
></seglistitem>
<seglistitem
><seg
>Riga</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Ordinamento (opzionale)</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDEX">
<title
>INDEX</title>
<para
>Se viene assegnato un insieme di celle, restituisce il valore immagazzinato in una data riga/colonna. Se viene assegnata una cella che contiene un array, viene restituito un elemento dell'array.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>INDEX(cella; riga; colonna)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Riga</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Colonna</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INDEX(A1:C3; 2; 2), restituisce il contenuto di B2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INDEX(A1; 2; 2), se A1 è il risultato di un calcolo su un array, ritorna l'elemento (2,2) dell'array.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDIRECT">
<title
>INDIRECT</title>
<para
>Restituisce il contenuto della cella specificata nel riferimento testuale. Il secondo parametro è opzionale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>INDIRECT(riferimento_testuale; stile a1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Stile A1 (opzionale)</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INDIRECT(A1), A1 contiene "B1", e B1 1 =
> restituisce 1</para
></listitem>

</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INDIRECT("A1"), restituisce il contenuto di A1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOOKUP">
<title
>LOOKUP</title>
<para
>La funzione LOOKUP cerca il primo parametro nel vettore di ricerca. Essa restituisce il valore che si trova nel vettore-risultati allo stesso indice in cui è situato il valore trovato nel vettore di ricerca. Se il valore non è presente nel vettore di ricerca, si prende quello immediatamente più basso. Se nessun valore corrisponde, viene ritornato un errore. Il vettore di ricerca deve essere ordinato in modo crescente e il vettore dei risultati deve aver la stessa dimensione. Si possono utilizzare valori numerici, stringhe e valori booleani. Il confronto tra stringhe non tiene conto della differenza tra maiuscole e minuscole.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LOOKUP(valore; vettore-ricerca ; vettore-risultati)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore da cercare</seg
><seg
>Stringa/Numerico</seg
></seglistitem>
<seglistitem
><seg
>Vettore da cercare</seg
><seg
>Stringa/Numerico</seg
></seglistitem>
<seglistitem
><seg
>Vettore risultati</seg
><seg
>Stringa/Numerico</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOOKUP(1,232; A1:A6; B1:B6) se A1 = 1 e A2 = 2 restituisce il valore di B1.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MATCH">
<title
>MATCH</title>
<para
>Trova il valore cercato nella regione di ricerca e restituisce la sua posizione (a partire da 1). Il tipo di corrispondenza può essere -1, 0 o 1 et determina cosa cercare per quel valore. Se il tipo di corrispondenza è 0, viene restituito l'indice del primo valore che è uguale a quello cercato. Se il tipo di corrispondenza è 1 (o non specificato), si ottiene l'indice del primo valore che è minore o uguale a quello cercato e i valori nella zona di ricerca devono essere ordinati in modo crescente. Se il tipo di corrispondenza è -1, si ottiene l'indice del primo valore che è maggiore o uguale a quello cercato e i valori nella zona di ricerca devono essere ordinati in modo decrescente. </para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MATCH(Valore cercato; regione di ricerca; tipo corrispondenza)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore cercato</seg
><seg
>Stringa/Numerico</seg
></seglistitem>
<seglistitem
><seg
>Regione di ricerca</seg
><seg
>Riferimento/Vettore</seg
></seglistitem>
<seglistitem
><seg
>Tipo di corrispondenza (opzionale)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLE.OPERATIONS">
<title
>MULTIPLE.OPERATIONS</title>
<para
>MULTIPLE.OPERATIONS esegue l'espressione della formula individuata da CellaFormula e tutte le formule da cui questa dipende, sostituendo tutti i riferimenti a CellaRiga (rispettivamente CellaColonna) con riferimenti a RigaSostituto (risp. a ColonnaSostituto). Questa funzione può essere usata per creare facilmente tabelle di funzioni che dipendono da due parametri d'ingresso.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Stringa/Numerico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MULTIPLE.OPERATIONS(CellaFormula; CellaRiga; RigaSostituto; CellaColonna; ColonnaSostituto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cella della formula</seg
><seg
>Riferimento</seg
></seglistitem>
<seglistitem
><seg
>Cella della riga</seg
><seg
>Riferimento</seg
></seglistitem>
<seglistitem
><seg
>Sostituzione riga</seg
><seg
>Riferimento</seg
></seglistitem>
<seglistitem
><seg
>Cella della colonna (opzionale)</seg
><seg
>Riferimento</seg
></seglistitem>
<seglistitem
><seg
>Sostituzione colonna (opzionale)</seg
><seg
>Riferimento</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OFFSET">
<title
>OFFSET</title>
<para
>Modifica posizione e dimensioni di un riferimento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Riferimento</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>OFFSET(Riferimento riferimento; Intero posizioneRiga; Intero posizioneColonna; Intero nuovaAltezza; Intero nuovaLarghezza)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento o intervallo</seg
><seg
>Riferimento</seg
></seglistitem>
<seglistitem
><seg
>Numero di righe di scostamento</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di colonne di scostamento</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Altezza dell'intervallo di scostamento (opzionale)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Larghezza dell'intervallo di scostamento (opzionale)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROW">
<title
>ROW</title>
<para
>La funzione ROW restituisce la riga della cella di cui si dà il riferimento. Se non si specificano parametri viene restituita la riga della cella attuale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ROW(riferimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROW(A1) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROW(D2) restituisce 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROWS">
<title
>ROWS</title>
<para
>La funzione ROWS restituisce il numero di righe nel riferimento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ROWS(riferimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROWS(A1:C3) restituisce 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROWS(D2) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEET">
<title
>SHEET</title>
<para
>Restituisce il numero del foglio o la stringa che rappresenta il nome di un foglio.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SHEET(riferimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Riferimento</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SHEET(Foglio1!C7) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SHEET(Foglio2!C7) restituisce 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEETS">
<title
>SHEETS</title>
<para
>Restituisce il numero di fogli in questo documento o in un altro inndicato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SHEETS(riferimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Riferimento</seg
><seg
>Riferimento</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VLOOKUP">
<title
>VLOOKUP</title>
<para
>Cerca un valore corrispondente nella prima colonna della tabella assegnata e restituisce la colonna indicata.</para>
<para
>Verifica se il 'valore da cercare' è presente nella prima colonna della 'sorgente dati'. Se lo trova, restituisce il valore nella 'colonna' e la colonna in cui il valore è stato trovato. Se 'ordinato' è TRUE (predefinito), si assume che la 'colonna' sia ordinata. La ricerca viene interrotta se il 'valore da cercare' è minore del valore che si sta confrontando.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Stringa/Numerico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>VLOOKUP(Valore da cercare; Sorgente di dati; Colonna; Ordinato)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore da cercare</seg
><seg
>Stringa/Numerico</seg
></seglistitem>
<seglistitem
><seg
>Sorgente dati</seg
><seg
>Array</seg
></seglistitem>
<seglistitem
><seg
>Colonna</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Ordinamento (opzionale)</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Math">
<title
>Matematica</title>

<sect3 id="ABS">
<title
>ABS</title>
<para
>La funzione ABS() restituisce il valore assoluto del numero a virgola mobile x.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ABS(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ABS(12,5) è uguale a 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ABS(-12,5) è uguale a 12,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEIL">
<title
>CEIL</title>
<para
>La funzione CEIL() arrotonda x per eccesso con il più prossimo numero intero del valore inserito, restituendo tale valore come double.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un intero (come 0, -5, 14)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CEIL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CEIL(12,5) è uguale a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CEIL(-12,5) è uguale a -12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEILING">
<title
>CEILING</title>
<para
>La funzione CEILING() arrotonda per eccesso x (a partire da zero) al più prossimo multiplo del coefficiente di significatività del valore inserito. Il valore predefinito di Significatività è 1 (o -1 se il valore è negativo), questo corrisponde ad un arrotondamento all'intero superiore più vicino. Se il parametro Modalità è diverso da zero, la funzione arrotonda a partire da zero, invece che verso l'infinito positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un intero (come 0, -5, 14)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CEILING(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Significatività (opzionale)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opzionale)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CEILING(12,5) è uguale a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CEILING(6,43; 4) è uguale a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CEILING(-6,43; -4;1) è uguale a -8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CEILING(-6,43; -4; 0) è uguale a -4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNT">
<title
>COUNT</title>
<para
>Questa funzione restituisce il numero di argomenti interi o a virgola mobile passati. Puoi contare utilizzando un intervallo: COUNT(A1:B5) o una lista di valori come COUNT(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COUNT(valore;valore;valore...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COUNT(-5;"KSpread";2) restituisce 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COUNT(5) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTA">
<title
>COUNTA</title>
<para
>Questa funzione restituisce il numero degli argomenti non vuoti che gli sono stati passati. Puoi contare utilizzando un intervallo: COUNTA(A1:B5) o utilizzare una lista di valori come COUNTA(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COUNTA(valore;valore;valore...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COUNTA(-5;"KSpread";2) restituisce 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COUNTA(5) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTBLANK">
<title
>COUNTBLANK</title>
<para
>Questa funzione fornisce il numero di celle vuote in un intervallo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COUNTBLANK(intervallo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervallo di celle</seg
><seg
>Intervallo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COUNTBLANK(A1:B5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTIF">
<title
>COUNTIF</title>
<para
>La funzione COUNTIF() restituisce il numero di celle nel dato intervallo che soddisfano i criteri richiesti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COUNTIF(intervallo;criterio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervallo</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Criteri</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COUNTIF(A2:A3;"14") restituisce 1 se A2 è -4 e A3 è 14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUR">
<title
>CUR</title>
<para
>La funzione CUR() restituisce la radice cubica non negativa di x.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CUR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CUR(27) è uguale a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DIV">
<title
>DIV</title>
<para
>La funzione DIV() divide successivamente il primo valore per tutti i successivi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DIV(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DIV(20;2;2) restituisce 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DIV(25;2,5) restituisce 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="MOD"
>MOD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EPS">
<title
>EPS</title>
<para
>EPS() restituisce l'epsilon (o precisione) della macchina; questo è la differenza tra 1 e il numero rappresentabile in virgola mobile immediatamente più grande. Per via del fatto che i computer utilizzano un numero finito di cifre, l'errore di arrotondamento è sempre presente (ma generalmente insignificante) nei calcoli.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EPS()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>Su molti sistemi, questo restituisce 2^-52=2,2204460492503131e-16</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>0,5*EPS() fornisce lo "zero macchina" ("unit round"); questo valore è interessante perché è il numero x più grande per cui (1+x)-1=0 (a seguito degli errori di arrotondamento).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EPS() è talmente piccolo che &sheets; visualizza 1+eps() come 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>Prendi un numero x tra 0 e EPS(). Osserva come 1+x arrotonda x con 0 o EPS(), valutando l'espressione (1+x)-1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EVEN">
<title
>EVEN</title>
<para
>La funzione EVEN() restituisce il più vicino intero pari superiore al numero dato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EVEN(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>

<varlistentry
><term
>Esempi</term>
<listitem
><para
>EVEN(1,2) restituisce 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EVEN(2) restituisce 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ODD"
>ODD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXP">
<title
>EXP</title>
<para
>La funzione EXP() restituisce il valore di e (la base dei logaritmi naturali) elevata alla potenza di x.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EXP(9) è uguale a 8.103,08392758</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EXP(-9) è uguale a 0,00012341</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACT">
<title
>FACT</title>
<para
>La funzione FACT() calcola il fattoriale del parametro. L'espressione matematica è (valore)!.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FACT(numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FACT(10) restituisce 3628800</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FACT(0) restituisce 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACTDOUBLE">
<title
>FACTDOUBLE</title>
<para
>La funzione FACTDOUBLE() calcola il fattoriale doppio di un numero, ovvero x!!.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FACTDOUBLE(Numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FACTDOUBLE(6) restituisce 48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FACTDOUBLE(7) restituisce 105</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIB">
<title
>FIB</title>
<para
>La funzione FIB calcola N-esimo termine della sequenza Fibonacci (1, 1, 2, 3, 5, 8, 13, 21...), nella quale ogni numero, dopo i primi due, è la somma dei due numeri immediatamente precedenti. FIB(0) è definito come 0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FIB(n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>N-esimo termine</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FIB(9) restituisce 34</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FIB(26) restituisce 121393</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FLOOR">
<title
>FLOOR</title>
<para
>La funzione CEILING() arrotonda per eccesso un numero x al più prossimo multiplo del secondo parametro, la significatività.</para>
<para
>La funzione FLOOR() arrotonda per difetto x (verso zero) al più prossimo multiplo del coefficiente di significatività del valore inserito. Il valore predefinito per la significatività è 1 se x è positivo e -1 se x è negativo, questo corrisponde ad un arrotondamento all'intero più vicino. Se viene assegnata una modalità e non è nulla, il valore di x è arrotondato verso zero ad un multiplo del coefficiente di significatività e poi si applica il segno. Altrimenti, lo si arrotonda a meno infinito. Se uno dei due parametri (x o significatività) è zero, il risultato è zero.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un intero (come 0, -5, 14)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FLOOR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Significatività (opzionale)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opzionale)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FLOOR(12,5) è uguale a 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FLOOR(-12,5) è uguale a -13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FLOOR(5; 2) è uguale a 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FLOOR(5; 2,2) è uguale a 4,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMA">
<title
>GAMMA</title>
<para
>La funzione GAMMA() restituisce il valore della funzione gamma.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>GAMMA(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GAMMA(1) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FACT"
>FACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GCD">
<title
>GCD</title>
<para
>La funzione GCD() restituisce il massimo comune denominatore tra due o più valori interi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>GCD(valore;valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo numero</seg
><seg
>Un intervallo di numeri interi (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Secondo numero</seg
><seg
>Un intervallo di numeri interi (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Terzo numero</seg
><seg
>Un intervallo di numeri interi (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GCD(6;4) restituisce 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GCD(10;20) restituisce 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GCD(20;15;10) restituisce 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LCM"
>LCM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="G_PRODUCT">
<title
>G_PRODUCT</title>
<para
>La funzione G_PRODUCT() è identica a KPRODUCT. Viene fornita per compatibilità con Gnumeric.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>G_PRODUCT(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT">
<title
>INT</title>
<para
>La funzione INT() restituisce la parte intera del valore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>INT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INT(12,55) è uguale a 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INT(15) è uguale a 15</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="QUOTIENT"
>QUOTIENT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INV">
<title
>INV</title>
<para
>Questa funzione moltiplica ogni valore per -1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>INV(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INV(-5) è uguale a 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INV(5) è uguale a -5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INV(0) è uguale a 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KPRODUCT">
<title
>KPRODUCT</title>
<para
>La funzione KPRODUCT() calcola il prodotto di tutti i valori dati come parametri. Puoi calcolare il prodotto di un intervallo: KPRODUCT(A1:B5) o una lista di valori come KPRODUCT(12;5;12,5). Se non vengono dati valori numerici, viene restituito 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>KPRODUCT(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>KPRODUCT(3;5;7) è uguale a 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>KPRODUCT(12,5;2) è uguale a 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="G_PRODUCT"
>G_PRODUCT</link
>&nbsp;</member>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LCM">
<title
>LCM</title>
<para
>La funzione LCM() restituisce il minimo comune multiplo di due o più valori a virgola mobile</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LCM(valore; valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primo numero</seg
><seg
>FLOAT</seg
></seglistitem>
<seglistitem
><seg
>Secondo numero</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LCM(6;4) restituisce 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LCM(1,5;2,25) restituisce 4.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LCM(2;3;4) restituisce 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="GCD"
>GCD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LN">
<title
>LN</title>
<para
>La funzione LN() restituisce il logaritmo naturale di x.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LN(0,8) è uguale a -0,22314355</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LN(0) è uguale a -inf</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG">
<title
>LOG</title>
<para
>La funzione LOG() restituisce il logaritmo in base 10 di x.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LOG(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile, maggiore di zero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOG(0,8) è uguale a -0,09691001</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOG(0) dà errore.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG10">
<title
>LOG10</title>
<para
>La funzione LOG10() restituisce il logaritmo in base 10 dell'argomento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LOG10(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore positivo in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOG10(10) è uguale a 1.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOG10(0) dà errore.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG2">
<title
>LOG2</title>
<para
>La funzione LOG2() restituisce il logaritmo in base 2 di x.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LOG2(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOG2(0,8) è uguale a -0,32192809</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOG2(0) è uguale a -inf.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGN">
<title
>LOGN</title>
<para
>La funzione LOGn() restituisce il logaritmo in base n di x.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LOGn(valore;base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOGn(12;10) è uguale a 1,07918125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOGn(12;2) è uguale a 3,5849625</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAX">
<title
>MAX</title>
<para
>La funzione MAX() restituisce il valore maggiore tra i parametri dati. Le stringhe e i valori logici vengono ignorati.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MAX(valore;valore;...)</para
></listitem>
</varlistentry>

<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MAX(12;5;7) restituisce 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MAX(12,5;2) restituisce 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MAX(0,5; 0,4; TRUE; 0,2) restituisce 0,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAXA">
<title
>MAXA</title>
<para
>La funzione MAXA() restituisce il valore maggiore tra i parametri dati. TRUE viene considerato uguale a 1 e FALSE a 0. Le stringhe vengono ignorate.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MAXA(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MAXA(12; 5; 7) restituisce 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MAXA(12,5; 2) restituisce 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MAXA(0,5; 0,4; TRUE; 0,2) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDETERM">
<title
>MDETERM</title>
<para
>La funzione MDETERM ritorna il determinante di una matrice. La matrice deve essere di tipo n x n.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MDETERM(matrice)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervallo</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MDETERM(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MMULT"
>MMULT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIN">
<title
>MIN</title>
<para
>La funzione MIN() restituisce il valore minore tra i parametri dati. Vengono ignorati i valori logici e le stringhe.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MIN(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MIN(12;5;7) restituisce 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MIN(12,5;2) restituisce 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MIN(0,4; 2; FALSE; 0,7) restituisce 0,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINA">
<title
>MINA</title>
<para
>La funzione MINA() restituisce il valore minore tra i parametri dati. TRUE viene considerato uguale a 1 e FALSE a 0. Vengono ignorate le stringhe.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MINA(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MINA(12;5; 7) restituisce 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MINA(12,5; 2) restituisce 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MINA(0,4; 2; FALSE; 0,7) restituisce 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINVERSE">
<title
>MINVERSE</title>
<para
>Calcola l'inversa della matrice.</para>
<para
>Moltiplicando una matrice per la sua inversa si ottiene la matrice unitaria della stessa dimensione.</para>
<para
>Le matrici invertibili hanno determinante non nullo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MINVERSE(matrice)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Matrice</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MINVERSE(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
<member
><link linkend="MUNIT"
>MUNIT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MMULT">
<title
>MMULT</title>
<para
>La funzione MMULT moltiplica due matrici. Il numero di colonne della prima matrice deve essere uguale al numero di righe della seconda. Il risultato è una matrice.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MMULT(matrice1;matrice2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Prima matrice</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Seconda matrice</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MMULT(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MOD">
<title
>MOD</title>
<para
>La funzione MOD() restituisce il resto della divisione. Se il secondo parametro è zero la funzione restituisce #DIV/0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MOD(valore;valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MOD(12;5) restituisce 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MOD(5;5) restituisce 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MROUND">
<title
>MROUND</title>
<para
>La funzione MROUND() restituisce l'arrotondamento con un multiplo della base fissata. Il valore e la base devono avere lo stesso segno.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MROUND(valore;base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Multiplo</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MROUND(1,252; 0,5) è uguale a 1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MROUND(-1,252; -0,5) è uguale a -1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTINOMIAL">
<title
>MULTINOMIAL</title>
<para
>La funzione MULTINOMIAL() restituisce il coefficiente multinomiale dei numeri forniti come parametri. MULTINOMIAL(a;b;c) è dato dalla formula:</para>
<para
>(a+b+c)! / a!b!c!</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MULTINOMIAL(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MULTINOMIAL(3;4;5) è uguale a 27720</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLY">
<title
>MULTIPLY</title>
<para
>La funzione MULTIPLY() moltiplica tutti i valori dati come parametri. Puoi moltiplicare i valori contenuti in un'area MULTIPLY(A1:B5) o una lista di valori come MULTIPLY(12;5;12,5). È equivalente a PRODUCT.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MULTIPLY(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MULTIPLY(12;5;7) è uguale a 420</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MULTIPLY(12,5;2) è uguale a 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MUNIT">
<title
>MUNIT</title>
<para
>Crea la matrice unitaria di dimensione assegnata.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MUNIT(dimensione)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dimensione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MUNIT(3) crea una matrice unitaria 3x3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MINVERSE"
>MINVERSE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODD">
<title
>ODD</title>
<para
>La funzione ODD() restituisce il più vicino intero dispari superiore (o inferiore, se il dato è negativo) al numero dato. Per definizione, ODD(0) è 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ODD(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ODD(1,2) restituisce 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ODD(2) restituisce 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ODD(-2) restituisce -3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="EVEN"
>EVEN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POW">
<title
>POW</title>
<para
>La funzione POW(x;y) restituisce il valore di x elevato alla potenza y. È identica alla funzione POWER.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>POW(valore;valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POW(1,2;3,4) è uguale a 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POW(2;3) è uguale a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="POWER"
>POWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POWER">
<title
>POWER</title>
<para
>La funzione POWER(x;y) restituisce il valore di x elevato alla potenza y.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>POWER(valore;valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POWER(1,2;3,4) è uguale a 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POWER(2;3) è uguale a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="POW"
>POW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRODUCT">
<title
>PRODUCT</title>
<para
>La funzione PRODUCT() calcola il prodotto di tutti i valori dati come parametri. Puoi calcolare il prodotto di un intervallo: PRODUCT(A1:B5) o una lista di valori come PRODUCT(12;5;12,5). Se non vengono dati valori numerici, viene restituito 0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PRODUCT(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PRODUCT(3;5;7) è uguale a 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PRODUCT(12,5;2) è uguale a 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="QUOTIENT">
<title
>QUOTIENT</title>
<para
>La funzione QUOTIENT restituisce la parte intera di numeratore/denominatore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>QUOTIENT(numeratore;denominatore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numeratore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Denominatore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>QUOTIENT(21;4) restituisce 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="INT"
>INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RAND">
<title
>RAND</title>
<para
>La funzione RAND() restituisce un numero pseudo-casuale tra 0 e 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RAND()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RAND() potrebbe essere 0,78309922...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RANDBETWEEN"
>RANDBETWEEN</link
>&nbsp;</member>
<member
><link linkend="RANDEXP"
>RANDEXP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBERNOULLI">
<title
>RANDBERNOULLI</title>
<para
>La funzione RAND() restituisce un numero pseudo-casuale, con distribuzione di Bernoulli, e compreso tra 0 e 1.</para>

<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RANDBERNOULLI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (tra 0 e 1)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RANDBERNOULLI(0,45)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBETWEEN">
<title
>RANDBETWEEN</title>
<para
>La funzione RANDBETWEEN() restituisce un numero pseudo casuale tra il valore inferiore e superiore. Se inferiore 
> superiore, la funzione restituisce Err.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RANDBETWEEN(inferiore;superiore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore inferiore</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valore superiore</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RANDBETWEEN(12;78) è uguale per esempio a 61,0811...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBINOM">
<title
>RANDBINOM</title>
<para
>La funzione RAND() restituisce un numero pseudo-casuale, con distribuzione binomiale, e compreso tra 0 e 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RANDBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (tra 0 e 1)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Tentativi (più di 0)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RANDBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDNEGBINOM"
>RANDNEGBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDEXP">
<title
>RANDEXP</title>
<para
>La funzione RANDEXP() restituisce un numero pseudo-casuale, distribuito esponenzialmente e compreso tra 0 e 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RANDEXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (maggiore di 0)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RANDEXP(0,88)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNEGBINOM">
<title
>RANDNEGBINOM</title>
<para
>La funzione RANDNEGBINOM() restituisce un numero pseudo-casuale negativo con distribuzione binomiale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RANDNEGBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (tra 0 e 1)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Fallimenti (più di 0)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RANDNEGBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDBINOM"
>RANDBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNORM">
<title
>RANDNORM</title>
<para
>La funzione RANDNORM() restituisce un numero pseudo-casuale, con distribuzione normale (Gaussiana).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RANDNORM(mu; sigma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore medio della distribuzione normale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Dispersione della distribuzione normale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RANDNORM(0; 1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDPOISSON">
<title
>RANDPOISSON</title>
<para
>La funzione RANDPOISSON() restituisce un numero pseudo-casuale, con distribuzione poissoniana, e compreso tra 0 e 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RANDPOISSON()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (maggiore di 0)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RANDPOISSON(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROOTN">
<title
>ROOTN</title>
<para
>La funzione ROOTN() restituisce la radice n-esima non negativa di x.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ROOTN(x;n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROOTN(9;2) è uguale a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUND">
<title
>ROUND</title>
<para
>La funzione ROUND(valore;[cifre]) restituisce valori arrotondati. Le "cifre" sono il numero di cifre al quale vuoi arrotondare il numero. Se "cifre" è zero o manca, il valore è arrotondato al più vicino intero. Se "cifre" è minore di zero, la corrispondente parte intera del numero è arrotondata.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ROUND(valore;[cifre])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Cifre</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUND(1,252;2) è uguale a 1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUND(-1,252;2) è uguale a -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUND(1,258;2) è uguale a 1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUND(-12,25;-1) è uguale a -10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUND(-1,252;0) è uguale a -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MROUND"
>MROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDDOWN">
<title
>ROUNDDOWN</title>
<para
>La funzione ROUNDDOWN(valore;[cifre]) restituisce l'arrotondamento del valore con un numero inferiore in valore assoluto. Cifre è il numero di cifre a cui vuoi arrotondare il valore. Se cifre è zero o viene omesso, la parte decimale del valore viene troncata.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ROUNDDOWN(valore;[cifre])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Cifre</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUNDDOWN(1,252) è uguale a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUNDDOWN(1,252;2) è uguale a 1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUNDDOWN(-1,252;2) è uguale a -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUNDDOWN(-1,252) è uguale a -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDUP">
<title
>ROUNDUP</title>
<para
>La funzione ROUNDUP(valore;[cifre]) restituisce l'arrotondamento del valore con un numero superiore in valore assoluto. Cifre è il numero di cifre con cui vuoi arrotondare il numero. Se cifre è zero, o omesso, il valore viene approssimato con un intero.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ROUNDUP(valore;[cifre])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Cifre</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUNDUP(1,252) è uguale a 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUNDUP(1,252;2) è uguale a 1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUNDUP(-1,252;2) è uguale a -1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROUNDUP(-1,252) è uguale a -2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SERIESSUM">
<title
>SERIESSUM</title>
<para
>La funzione SERIESSUM() restituisce la somma di una serie di potenze.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SERIESSUM(X; N; M; Coefficienti)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>X, la variabile indipendente della serie di potenze</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>N, la potenza iniziale a cui viene elevato X</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>M, l'incremento dato a N per ogni termine successivo della serie</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Coefficienti, un insieme di valori per i quali verranno moltiplicate le successive potenze della variabile X</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SERIESSUM(2;0;2;{1;2}) restituisce 9</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIGN">
<title
>SIGN</title>
<para
>Questa funzione restituisce -1 se il numero è negativo, 0 se il numero è zero e 1 se il numero è positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SIGN(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SIGN(5) è uguale a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SIGN(0) è uguale a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SIGN(-5) è uguale a -1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRT">
<title
>SQRT</title>
<para
>La funzione SQRT() restituisce la radice quadrata non negativa dell'argomento. Se questo è negativo, viene segnalato errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SQRT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SQRT(9) è uguale a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SQRT(-9) dà errore</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="IMSQRT"
>IMSQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRTPI">
<title
>SQRTPI</title>
<para
>La funzione SQRTPI() restituisce la radice quadrata non negativa di x*PI. Se x è negativo, viene restituito errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SQRTPI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SQRTPI(2) è uguale a 2,506628</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBTOTAL">
<title
>SUBTOTAL</title>
<para
>La funzione SUBTOTAL() restituisce il subtotale (ndt: risultato di una funzione) di una lista di argomenti, ignorando i risultati di altri subtotali inclusi. La funzione deve essere indicata con uno dei seguenti numeri: 1 - Average, 2 - Count, 3 - CountA, 4 - Max, 5 - Min, 6 - Product, 7 - StDev, 8 - StDevP, 9 - Sum, 10 - Var, 11 - VarP.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUBTOTAL(funzione; valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Funzione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>Se A1:A5 contengono 7, 24, 23, 56 e 9:</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUBTOTAL(1; A1:A5) restituisce 23,8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUBTOTAL(4; A1:A5) restituisce 56</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUBTOTAL(9; A1:A5) restituisce 119</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUBTOTAL(11; A1:A5) restituisce 307,76</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="AVERAGE"
>AVERAGE</link
>&nbsp;</member>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM">
<title
>SUM</title>
<para
>La funzione SUM() calcola la somma di tutti i valori dati come parametri. Puoi calcolare la somma di un campo di variazione SUM(A1:B5) o una lista di valori come SUM(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUM(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUM(12;5;7) è uguale a 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUM(12,5;2) è uguale a 14,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SUMA"
>SUMA</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMA">
<title
>SUMA</title>
<para
>La funzione SUMA() calcola la somma di tutti i valori dati come parametri. Puoi calcolare la somma di un campo di variazione SUMA(A1:B5) o una lista di valori come SUM(12;5;12,5). Se un parametro contiene del testo o il valore booleano FALSE è contato 0, se un parametro viene valutato TRUE sarà contato come 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUM(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUMA(12;5;7) è uguale a 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUMA(12,5; 2; TRUE) è uguale a 15,5</para
></listitem>
</varlistentry>

<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMIF">
<title
>SUMIF</title>
<para
>La funzione SUMIF() calcola la somma di tutti i valori passati come parametro se essi soddisfano ai criteri assegnati. Il parametro "intervallo di somma" è opzionale. Se non viene fornito, vengono sommati i valori dell'intervallo di verifica. L'ampiezza dell'intervallo di verifica deve essere inferiore od uguale a quella dell'intervallo di somma.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUMIF(intervallo verifica; criteri; intervallo somma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Check range</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Criteri</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Intervallo di somma</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUMIF(A1:A4;"
>1") somma tutti i valori maggiori di presenti nell'intervallo A1:A4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUMIF(A1:A4;"=0"; B1:B4) somma tutti i valori dell'intervallo B1:B4 i cui corrispondenti nell'intervallo A1:A4 sono uguali a zero.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMSQ">
<title
>SUMSQ</title>
<para
>La funzione SUMSQ() calcola la somma del quadrato di tutti i valori dati come parametri. Puoi calcolare questa somma per un intervallo SUMSQ(A1:B5) o per una lista di valori come SUMSQ(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUMSQ(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUMSQ(12;5;7) è uguale a 218</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUMSQ(12,5;2) è uguale a 173</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRANSPOSE">
<title
>TRANSPOSE</title>
<para
>Restituisce la matrice trasposta. Cioè, righe e colonne vengono scambiate.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TRANSPOSE(matrice)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Matrice</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TRANSPOSE(A1:C3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUNC">
<title
>TRUNC</title>
<para
>La funzione TRUNC() tronca un numero ad una certa precisione. Se non la si indica, la precisione sarà 0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TRUNC(valore, precisione)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore in virgola mobile</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Precisione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TRUNC(1,2) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TRUNC(213,232; 2) restituisce 213,23</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Statistical">
<title
>Statistica</title>

<sect3 id="AVEDEV">
<title
>AVEDEV</title>
<para
>La funzione AVEDEV() calcola la media delle deviazioni medie di un insieme di dati dalla loro media.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>AVEDEV(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AVEDEV(11,4;17,3;21,3;25,9;40,1) restituisce 7,84</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AVEDEV(A1:A5)...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGE">
<title
>AVERAGE</title>
<para
>La funzione AVERAGE() calcola la media di tutti i valori dati come parametri. Puoi calcolare la media di un intervallo AVERAGE(A1:B5) o una lista di valori come AVERAGE(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>AVERAGE(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AVERAGE(12;5;7) è uguale a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AVERAGE(12,5;2) è uguale a 7,25</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGEA">
<title
>AVERAGEA</title>
<para
>La funzione AVERAGEA() calcola la media di dati argomenti. Numeri, testo e valori logici sono inclusi anche nel calcolo. Se la cella contiene testo o argomenti uguali a FALSE, è contato come zero (0). Se l'argomento valutato è TRUE, è contato come uno (1). Nota che le celle vuote non sono contate.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>AVERAGEA(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Stringa di valori</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>AVERAGEA(11,4;17.3;"testo";25,9;40,1) è uguale a 18,94</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETADIST">
<title
>BETADIST</title>
<para
>La funzione BETADIST() restituisce la funzione di densità della probabilità beta cumulata.</para>
<para
>Il terzo e quarto parametro sono opzionali. Essi impostano il livello inferiore e superiore, che sono predefiniti rispettivamente come 0,0 e 1,0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BETADIST(numero;alfa;beta;inizio;fine;[cumulativo=TRUE])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro alfa</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro beta</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Inizia</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Fine</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Cumulativo</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BETADIST(0.2859;0,2606;0,8105) è uguale a 0,675444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BETADIST(0,2859;0,2606;0,8105;0,2;0,9) è uguale a 0,537856</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETAINV">
<title
>BETAINV</title>
<para
>La funzione BETAINV() restituisce l'inversa di BETADIST(x;alfa;beta;a;b;TRUE()).</para>
<para
>Il primo e l'ultimo parametro sono opzionali. Essi impostano il livello inferiore e superiore, che sono predefiniti rispettivamente come 0,0 e 1,0.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BETAINV(numero;alfa;beta [; inizio=0 [; fine=1]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro alfa</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro beta</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Inizia</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Fine</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BETADIST(BETAINV(0.1;3;4);3;4) dà 0,1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BETADIST(BETAINV(0,3;3;4);3;4) dà 0,3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BINO">
<title
>BINO</title>
<para
>La funzione BINO() restituisce la distribuzione binomiale.</para>
<para
>Il primo parametro è il numero di tentativi, il secondo parametro è il numero di successi e il terzo è la probabilità di successo. Il numero di tentativi deve essere maggiore del numero di successi e la probabilità deve essere minore o uguale ad 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BINO(tentativi;successi;probabilità_di_successo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero di tentativi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di casi favorevoli</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilità di successo</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BINO(12;9;0,8) restituisce 0,236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHIDIST">
<title
>CHIDIST</title>
<para
>La funzione CHIDIST() restituisce il valore di probabilità da un indicato Chi quadro che un'ipotesi sia confermata.</para>
<para
>CHIDIST confronta il valore Chi quadro come dato da un campione casuale che è calcolato dalla somma dei valori (osservati-attesi)^2/attesi per tutti i valori con la distribuzione teorica di Chi quadro e determina da questa la probabilità di errore per l'ipotesi da provare.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CHIDIST(numero;gradi_di_libertà)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Gradi di libertà</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CHIDIST(13,27;5) restituisce 0,021</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBIN">
<title
>COMBIN</title>
<para
>La funzione COMBIN() calcola il numero delle possibili combinazioni. Il primo parametro è il numero totale degli elementi. Il secondo parametro è il numero degli elementi da scegliere. Entrambi i parametri devono essere positivi ed il primo non deve essere minore del secondo. Altrimenti la funzione restituisce un errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COMBIN(totali;scelti)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero totale di elementi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di elementi da scegliere</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMBIN(12;5) restituisce 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMBIN(5;5) restituisce 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBINA">
<title
>COMBINA</title>
<para
>La funzione COMBINA() calcola il numero delle possibili combinazioni. Il primo parametro è il numero totale degli elementi. Il secondo parametro è il numero degli elementi da scegliere. Entrambi i parametri devono essere positivi ed il primo non deve essere minore del secondo. Altrimenti la funzione restituisce un errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COMBIN(totali;scelti)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero totale di elementi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di elementi da scegliere</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMBIN(12;5) restituisce 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMBIN(5;5) restituisce 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONFIDENCE">
<title
>CONFIDENCE</title>
<para
>La funzione CONFIDENCE() restituisce l'intervallo di confidenza per la media della popolazione.</para>
<para
>Il parametro alfa deve essere tra 0 e 1 (non inclusi), stddev deve essere positiva e la dimensione deve essere maggiore o uguale a 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CONFIDENCE(alfa;stddev;dimensione)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Livello dell'intervallo di confidenza</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Deviazione standard per la popolazione totale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Dimensione della popolazione totale</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CONFIDENCE(0,05;1,5;100) è uguale a 0,294059</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CORREL">
<title
>CORREL</title>
<para
>La funzione CORREL() calcola la correlazione tra due gruppi di celle.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CORREL(intervallo1; intervallo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervallo di celle con valori</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Secondo intervallo di celle con valori</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CORREL(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="PEARSON"
>PEARSON</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COVAR">
<title
>COVAR</title>
<para
>La funzione COVAR() calcola la covarianza tra due gruppi di celle.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COVAR(intervallo1; intervallo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervallo di celle con valori</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Secondo intervallo di celle con valori</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COVAR(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEVSQ">
<title
>DEVSQ</title>
<para
>La funzione DEVSQ() calcola la somma dei quadrati delle deviazioni.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DEVSQ(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEVSQ(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEVSQ(21; 33; 54; 23) restituisce 684,75</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXPONDIST">
<title
>EXPONDIST</title>
<para
>La funzione EXPONDIST() restituisce la distribuzione esponenziale.</para>
<para
>Il parametro lambda deve essere positivo.</para>
<para
>Cumulativo = 0 calcola la funzione di densità; cumulativo = 1 calcola la distribuzione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EXPONDIST(numero;lambda;cumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro lambda</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densità, 1 = distribuzione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EXPONDIST(3;0,5;0) è uguale a 0,111565</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EXPONDIST(3;0,5;1) è uguale a 0,776870</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FDIST">
<title
>FDIST</title>
<para
>La funzione FDIST() restituisce la distribuzione f.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FDIST(numero; gradi_di_libertà_1; gradi_di_libertà_2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>gradi di libertà 1</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>gradi di libertà 2</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FDIST(0,8;8;12) vale 0,61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINV">
<title
>FINV</title>
<para
>La funzione FINV() restituisce l'unico numero non negativo per cui FDIST(x;r1;r2) = p.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FINV(numero; r1; r2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Numero r1</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero r2</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FDIST(FINV(0,1;3;4);3;4) dà 0,1</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="FISHER">
<title
>FISHER</title>
<para
>La funzione FISHER() restituisce la trasformazione di Fisher per x e crea una funzione simile alla distribuzione normale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FISHER(numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FISHER(0,2859) è uguale a 0,294096</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FISHER(0,8105) è uguale a 1,128485</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FISHERINV">
<title
>FISHERINV</title>
<para
>La funzione FISHERINV() restituisce l'inversa della trasformazione di Fisher per x e crea una funzione simile alla distribuzione normale.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FISHERINV(numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FISHERINV(0,2859) è uguale a 0,278357</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FISHERINV(0,8105) è uguale a 0,669866</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FREQUENCY">
<title
>FREQUENCY</title>
<para
>Conta il numero di valori in ogni intervallo definito dagli estremi indicati dal secondo parametro.</para>
<para
>I valori del secondo parametro fissano gli estremi superiori degli intervalli. Gli intervalli includono gli estremi superiori. Il vettore restituito è un vettore colonna e ha un elemento in più del secondo parametro; l'ultimo elemento rappresenta il numero di tutti gli elementi maggiori dell'ultimo valore del secondo parametro. Se il secondo parametro è vuoto, tutti i valori contenuti nel primo parametro vengono contati.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FREQUENCY(Campo dei dati; Campo dei binari)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori a virgola mobile che devono essere contati.</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori a virgola mobile che indicano gli estremi superiori degli intervalli.</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMADIST">
<title
>GAMMADIST</title>
<para
>La funzione GAMMADIST() restituisce la distribuzione gamma.</para>
<para
>Se l'ultimo parametro (cumulativo) è 0, essa calcola la funzione di densità; se è 1, restituisce la distribuzione.</para>
<para
>I primi tre parametri devono essere positivi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>GAMMADIST(numero;alfa;beta;cumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro alfa</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro beta</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Contrassegno cumulato</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GAMMADIST(0,758;0,1;0,35;1) è uguale a 0,995450</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GAMMADIST(0,758;0,1;0,35;0) è uguale a 0,017179</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMAINV">
<title
>GAMMAINV</title>
<para
>La funzione GAMMAINV() restituisce l'unico numero x 
>= 0 tale che GAMMAINV(x;alfa;beta;TRUE()) = p.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>GAMMAINV(numero;alfa;beta)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro alfa</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro beta</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0,1;3;4);3;4) è uguale a 0,1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GAMMADIST(GAMMAINV(0,3;3;4);3;4) è uguale a 0,3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMALN">
<title
>GAMMALN</title>
<para
>La funzione GAMMALN() restituisce il logaritmo naturale della funzione gamma: G(x). Il parametro Numero deve essere positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>GAMMALN(Numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GAMMALN(2) restituisce 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAUSS">
<title
>GAUSS</title>
<para
>La funzione GAUSS() restituisce il valore integrale per una distribuzione normale standard cumulativa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>GAUSS(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il numero per il quale il valore integrale di una distribuzione normale è calcolato.</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GAUSS(0,25) è uguale a 0,098706</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GEOMEAN">
<title
>GEOMEAN</title>
<para
>La funzione GEOMEAN() restituisce la media geometrica degli argomenti. Questa è data dalla radice N-sima del prodotto dei termini.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>GEOMEAN(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GEOMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>GEOMEAN(21; 33; 54; 23) restituisce 30,45886</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="HARMEAN"
>HARMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HARMEAN">
<title
>HARMEAN</title>
<para
>La funzione HARMEAN() restituisce la media armonica degli N punti assegnati, pari a N diviso per la somma degli inversi dei dati.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>HARMEAN(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HARMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HARMEAN(21; 33; 54; 23) restituisce 28,588</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="GEOMEAN"
>GEOMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HYPGEOMDIST">
<title
>HYPGEOMDIST</title>
<para
>La funzione HYPGEOMDIST() restituisce la distribuzione ipergeometrica.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>HYPGEOMDIST(x; n; M; N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero di casi favorevoli nel campione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di tentativi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero globale di casi favorevoli</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Dimensione della popolazione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>HYPGEOMDIST(2; 5; 6; 20) restituisce 0,3522</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTERCEPT">
<title
>INTERCEPT</title>
<para
>La funzione INTERCEPT() calcola il punto di intersezione tra la retta di regressione lineare e l'asse delle y</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>INTERCEPT(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori delle y (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori delle x (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INVBINO">
<title
>INVBINO</title>
<para
>La funzione INVBINO() restituisce la distribuzione binomiale negativa. Il primo parametro è il numero di tentativi, il secondo parametro è il numero di insuccessi ed il terzo è la probabilità di fallire. Il numero di tentativi dovrebbe essere maggiore del numero di insuccessi e la probabilità dovrebbe essere minore o uguale di 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>INVBINO(tentativi;insuccessi;probabilità_di_fallire)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero di tentativi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di fallimenti</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilità di insuccesso</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>INVBINO(12;3;0,2) restituisce 0,236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURT">
<title
>KURT</title>
<para
>La funzione KURT() calcola la stima non distorta di Curtosi per un insieme di dati. È necessario indicare almeno 4 valori, altrimenti sarà segnalato un errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>KURT(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>KURT(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>KURT(21; 33; 54; 23) restituisce 1,344239</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="KURTP"
>KURTP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURTP">
<title
>KURTP</title>
<para
>La funzione KURTP() calcola la Curtosi di una popolazione per un insieme di dati. È necessario indicare almeno 4 valori, altrimenti sarà segnalato un errore.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>KURTP(valore; valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>KURTP(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>KURTP(21; 33; 54; 23) restituisce -1,021</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="KURT"
>KURT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LARGE">
<title
>LARGE</title>
<para
>La funzione LARGE() restituisce il k-esimo valore più grande di un insieme di dati.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LARGE(intervallo; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervallo di celle con valori</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Posizione (dal più grande)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> LARGE(A1:A3; 2) restituisce 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEGACYFDIST">
<title
>LEGACYFDIST</title>
<para
>La funzione LEGACYFDIST() restituisce la distribuzione f.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LEGACYFDIST(numero; gradi_di_libertà_1; gradi_di_libertà_2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>gradi di libertà 1</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>gradi di libertà 2</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LEGACYFDIST(0,8;8;12) vale 0,61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGINV">
<title
>LOGINV</title>
<para
>La funzione LOGINV()restituisce il valore inverso della distribuzione log-normale cumulativa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LOGINV(probabilità; media; stdev)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Probabilità</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore medio della distribuzione standard logaritmica</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Deviazione standard della distribuzione standard logaritmica</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOGINV(0.1;0;1) è uguale a 0.2776</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGNORMDIST">
<title
>LOGNORMDIST</title>
<para
>La funzione LOGNORMDIST() restituisce la distribuzione lognormale cumulativa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LOGNORMDIST(Numero;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore di probabilità per il quale la distribuzione standard logaritmica dovrà essere calcolata</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore medio della distribuzione standard logaritmica</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Deviazione standard della distribuzione standard logaritmica</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOGNORMDIST(0,1;0;1) è uguale a 0,01</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MEDIAN">
<title
>MEDIAN</title>
<para
>La funzione MEDIAN() calcola la mediana di tutti i valori dati come parametri. Puoi calcolare la mediana di un intervallo come MEDIAN(A1:B5) o una lista di valori come MEDIAN(12; 5; 12,5). Le celle vuote saranno considerate come zero, e le celle con testo saranno ignorate.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MEDIAN(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori a virgola mobile o intervalli di valori</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori a virgola mobile o intervalli di valori</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori a virgola mobile o intervalli di valori</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori a virgola mobile o intervalli di valori</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori a virgola mobile o intervalli di valori</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MEDIAN(12; 5; 5,5) è uguale a 5,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MEDIAN(12; 7; 8;2) è uguale a 7,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MODE">
<title
>MODE</title>
<para
>La funzione MODE() restituisce il valore che ricorre più frequentemente nell'insieme dei dati.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MODE(numero; numero2;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MODE(12; 14; 12; 15) restituisce 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NEGBINOMDIST">
<title
>NEGBINOMDIST</title>
<para
>La funzione NEGBINOMDIST() restituisce la distribuzione binomiale negativa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NEGBINOMDIST(insuccessi;successi;probabilità_di_successo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero di fallimenti</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di casi favorevoli</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilità di successo</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NEGBINOMDIST(2;5;0,55) restituisce 0,152872629</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMDIST">
<title
>NORMDIST</title>

<para
>La funzione NORMDIST() restituisce la distribuzione normale cumulativa.</para>
<para
>Numero è il valore della distribuzione basandosi sul quale viene calcolata la distribuzione normale.</para>
<para
>LMV è il centro lineare della distribuzione.</para>
<para
>STD è la deviazione standard della distribuzione.</para>
<para
>Per K = 0 calcola la funzione densità; per K = 1 la distribuzione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NORMDIST(Numero;MV;STD;K)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Centro lineare della distribuzione</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Deviazione standard della distribuzione</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densità, 1 = distribuzione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NORMDIST(0,859;0,6;0,258;0) è uguale a 0,934236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NORMDIST(0.859;0,6;0,258;1) è uguale a 0,842281</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMINV">
<title
>NORMINV</title>
<para
>La funzione NORMINV() restituisce l'inversa della distribuzione normale cumulativa. Il numero deve essere tra 0 e 1 (non inclusi) e STD deve essere positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NORMINV(numero;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore di probabilità per il quale la distribuzione standard logaritmica dovrà essere calcolata</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valore centrale nella distribuzione normale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Deviazione standard della distribuzione normale</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NORMINV(0,9;63;5) è uguale a 69,41</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSDIST">
<title
>NORMSDIST</title>
<para
>La funzione NORMSDIST() restituisce la distribuzione normale standard.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NORMDIST(Numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore per il quale la distribuzione normale standard è calcolata</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NORMSDIST(1) è uguale a 0,84</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSINV">
<title
>NORMSINV</title>
<para
>La funzione NORMSINV() restituisce l'inversa della distribuzione normale standard cumulativa. Il numero deve essere tra 0 e 1 (non inclusi).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>NORMSINV(Numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>NORMSINV(0,908789) restituisce 1,3333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PEARSON">
<title
>PEARSON</title>
<para
>La funzione PEARSON() calcola il coefficiente di correlazione tra due gruppi di celle. È uguale alla funzione CORREL.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PEARSON(intervallo1; intervallo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervallo di celle con valori</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Secondo intervallo di celle con valori</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PEARSON(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CORREL"
>CORREL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERCENTILE">
<title
>PERCENTILE</title>
<para
>La funzione PERCENTILE() restituisce l'x-simo percentile dei valori «Dati». Un percentile è il valore di scala per il gruppo di dati compresi tra il più piccolo (alfa=0) il più grande (alfa=1) di una serie di dati. Per alfa=25%, il percentile è il primo quartile; per alfa=50% è la MEDIANA. Alle celle vuote viene assegnato il valore zero e le celle contenenti testo vengono ignorate.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PERCENTILE(dati;alfa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervallo di valori</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Il valore percentile compreso tra 0 e 1 inclusi.</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="MEDIAN"
>MEDIAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUT">
<title
>PERMUT</title>
<para
>La funzione PERMUT() restituisce il numero delle permutazioni. Il primo parametro è il numero di elementi ed il secondo è il numero di elementi usati nella permutazione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PERMUT(totali;permutati)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero totale di elementi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di elementi da permutare</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PERMUT(8;5) è uguale a 6720</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PERMUT(1;1) è uguale a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUTATIONA">
<title
>PERMUTATIONA</title>
<para
>La funzione PERMUTATIONA() restituisce il numero delle permutazioni ordinate quando sono permesse ripetizioni. Il primo parametro è il numero di elementi ed il secondo è il numero di elementi usati nella permutazione. Entrambi i parametri devono essere positivi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PERMUTATIONA(totali;scelti)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero totale di elementi</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di elementi da scegliere</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PERMUTATIONA(2,3) restituisce 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PERMUTATIONA(0,0) restituisce 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PHI">
<title
>PHI</title>
<para
>La funzione PHI() restituisce il valore della funzione di distribuzione per una distribuzione normale standard.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PHI(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il numero per il quale la distribuzione normale standard deve essere calcolata.</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PHI(0,25) è uguale a 0,386668</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POISSON">
<title
>POISSON</title>
<para
>La funzione POISSON() restituisce la distribuzione di Poisson.</para>
<para
>Il numero e lambda devono essere positivi.</para>
<para
>Cumulativo = 0 calcola la funzione di densità; cumulativo = 1 calcola la distribuzione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>POISSON(numero;lambda;cumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro lambda (il valore centrale)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densità, 1 = distribuzione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POISSON(60;50;0) è uguale a 0,020105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>POISSON(60;50;1) è uguale a 0,927840</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANK">
<title
>RANK</title>
<para
>La funzione RANK() restituisce la posizione di un numero in un elenco di numeri.</para>
<para
>Ordinamento specifica come ordinare i numeri:</para>
<para
>Se 0 o mancante, i dati sono messi in ordine decrescente.</para>
<para
>Se non è 0, i dati sono messi in ordine crescente.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RSQ(Valore; Dati; Ordinamento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Dati (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Ordinamento</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RANK (2;{1;2;3}) dà 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RSQ">
<title
>RSQ</title>
<para
>La funzione RSQ() restituisce il quadrato del coefficiente di momento di correlazione di Pearson per un insieme di valori y noti e x noti.</para>
<para
>Se "vettoreY" e "vettoreX" sono vuoti o hanno un diverso numero di punti, viene restituito #N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RSQ(dati Y; dati X)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Y note (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>X note (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEW">
<title
>SKEW</title>
<para
>La funzione SKEW() restituisce una stima dell'asimmetria di una distribuzione</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SKEW(numero; numero2;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SKEW(11,4; 17,3; 21,3; 25,9; 40,1) restituisce 0,9768</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SKEWP"
>SKEWP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEWP">
<title
>SKEWP</title>
<para
>La funzione SKEWP() restituisce l'asimmetria di una distribuzione per una popolazione</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SKEWP(numero; numero2;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Virgola mobile</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SKEWP(11,4; 17,3; 21,3; 25,9; 40,1) restituisce 0,6552</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SKEW"
>SKEW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLOPE">
<title
>SLOPE</title>
<para
>La funzione SLOPE() calcola la pendenza della retta di regressione lineare.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori delle y (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori delle x (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SMALL">
<title
>SMALL</title>
<para
>La funzione SMALL() restituisce il k-esimo valore più piccolo dell'insieme dei dati.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SMALL(intervallo; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervallo di celle con valori</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Posizione (dal più piccolo)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> SMALL(A1:A3; 1) restituisce 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STANDARDIZE">
<title
>STANDARDIZE</title>
<para
>La funzione STANDARDIZE() calcola un valore normalizzato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>STANDARDIZE(x; media; stdev)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero da normalizzare</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Media della distribuzione</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Deviazione standard</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>STANDARDIZE(4; 3; 7) restituisce 0,1429</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEV">
<title
>STDEV</title>
<para
>La funzione STDEV() calcola la stima della deviazione standard basata su un campione. La deviazione standard è una misura di come si disperdono i valori attorno al valore medio.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>STDEV(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>STDEV(6;7;8) è uguale a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVA">
<title
>STDEVA</title>
<para
>La funzione STDEVA() calcola la stima della deviazione standard basata su un campione. La deviazione standard è una misura che indica la dispersione dei valori attorno al valore medio. Se una cella di riferimento contiene testo o un valore booleano FALSE, sono interpretati come 0. Se il valore booleano è TRUE è interpretato come 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>STDEVA(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) è uguale a 1, se A1 è vuoto</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>STDEVA(6; 7; A1; 8) è uguale a 1, se A1 è TRUE</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVP">
<title
>STDEVP</title>
<para
>La funzione STDEVP() calcola la deviazione standard basata su una intera popolazione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>STDEVP(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>STDEVP(6;7;8) è uguale a 0,816497...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVPA">
<title
>STDEVPA</title>
<para
>La funzione STDEVPA() calcola la deviazione standard per un'intera popolazione. Se una cella di riferimento contiene testo o un valore booleano FALSE, sarà interpretato come 0. Se il valore booleano è TRUE sarà interpretato come 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>STDEVPA(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) è uguale 0,816497..., se A1 è vuoto</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) è uguale a 2,69..., se A1 è TRUE</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>STDEVPA(6; 7; A1; 8) è uguale a 3,11..., se A1 è FALSE</para
></listitem>
</varlistentry>

<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STEYX">
<title
>STEYX</title>
<para
>La funzione STEYX() calcola l'errore standard del valore previsto y per ogni x della regressione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori delle y (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori delle x (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM2XMY">
<title
>SUM2XMY</title>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMPRODUCT">
<title
>SUMPRODUCT</title>
<para
>La funzione SUMPRODUCT() (SUM(X*Y)) restituisce la somma dei prodotti elemento per elemento. Il numero di elementi nei due vettori deve essere uguale. Altrimenti la funzione restituisce Err.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUMPRODUCT(vettore1;vettore2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore (vettore)</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valore (vettore)</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUMPRODUCT(A1:A2;B1:B2) con A1=2, A2=5, B1=3 e B2=5, restituisce 31</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2MY2">
<title
>SUMX2MY2</title>
<para
>La funzione SUMX2MY2() (SUM(X^2-Y^2)) restituisce la somma delle differenze dei quadrati degli elementi. Il numero di elementi nei due vettori deve essere uguale. Altrimenti la funzione restituisce Err.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUMX2MY2(vettore1;vettore2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore (vettore)</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valore (vettore)</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUMX2MY2(A1:A2;B1:B2) con A1=2, A2=5, B1=3 e B2=5, restituisce -5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2PY2">
<title
>SUMX2PY2</title>
<para
>La funzione SUMX2PY2() (SUM(X^2+Y^2)) restituisce la somma dei quadrati di tutti gli elementi. Il numero di elementi nei due vettori deve essere uguale. Altrimenti la funzione restituisce Err.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUMX2PY2(vettore1;vettore2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore (vettore)</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valore (vettore)</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUMX2PY2(A1:A2;B1:B2) con A1=2, A2=5, B1=3 e B2=5, restituisce 63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMXMY2">
<title
>SUMXMY2</title>
<para
>La funzione SUM2XMY() (=SUM((X-Y)^2)) restituisce il quadrato della differenza di questi valori. Il numero di valori nei due vettori deve essere uguale. Altrimenti la funzione restituisce Err.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUMXMY2(vettore1;vettore2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore (vettore)</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Valore (vettore)</seg
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUM2XMY2(A1:A2;B1:B2) con A1=2, A2=5, B1=3 e B2=5, restituisce 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TDIST">
<title
>TDIST</title>
<para
>La funzione TDIST() restituisce la distribuzione t.</para>
<para
>Modalità = 1 restituisce il test ad una sola coda, Modalità = 2 restituisce il test a due code.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TDIST(numero;gradi_di_libertà;modalità)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Gradi di libertà per la distribuzione t</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Modalità (1 o 2)</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TDIST(12;5;1) restituisce 0,000035</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TREND">
<title
>TREND</title>
<para
>La funzione TREND() calcola una sequenza di valori basandosi sulla regressione lineare di coppie di valori noti.</para>
<para
>Vincoli: COUNT(Y-dati) = COUNT(X-dati).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TREND(Y-dati[;X-dati[;nuovi-X[;permettiOffset = TRUE]]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Y-dati</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>X-dati</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Numero-sequenza del nuovo-X</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>permettiOffset</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIMMEAN">
<title
>TRIMMEAN</title>
<para
>La funzione TRIMMEAN() calcola la media di una frazione dell'insieme di dati.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TRIMMEAN(Insieme-dati; cutOffFraction)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Insieme-dati</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>cutOffFraction</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TTEST">
<title
>TTEST</title>
<para
>La funzione TTEST() calcola la probabilità di un t-test.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TTEST(x; y; tipo; modalità)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>x (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>y (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>modalità</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VAR">
<title
>VAR</title>
<para
>La funzione VAR() stima la varianza basandosi su di un campione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>VAR(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VAR(12;5;7) è uguale a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VAR(15;80;3) è uguale a 1716.333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VAR(6;7;8) è uguale a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="VARIANCE"
>VARIANCE</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARA">
<title
>VARA</title>
<para
>La funzione VARA() calcola la varianza basata su un campione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>VARA(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARA(12;5;7) è uguale a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARA(15;80;3) è uguale a 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARA(6;7;8) è uguale a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARIANCE">
<title
>VARIANCE</title>
<para
>La funzione VARIANCE() calcola la varianza basandosi su di un campione. È uguale alla funzione VARA.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>VARIANCE(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARIANCE(12;5;7) è uguale a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARIANCE(15;80;3) è uguale a 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARIANCE(6;7;8) è uguale a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARP">
<title
>VARP</title>
<para
>La funzione VARP() calcola la varianza su un'intera popolazione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>VARP(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARP(12;5;7) è uguale a 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARP(15;80;3) è uguale a 1144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARP(6;7;8) è uguale a 0,6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARPA">
<title
>VARPA</title>
<para
>La funzione VARPA() calcola la varianza sulla base dell'intera popolazione. Le variabili booleane valutate FALSE e i testi vengono considerati come 0, le variabili booleane valutate TRUE sono considerate come 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>VARPA(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem>
<seglistitem
><seg
>Valori in virgola mobile</seg
><seg
>Un insieme di valori in virgola mobile (come 1,3, 0,343, 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARPA(12;5;7) è uguale a 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARPA(15;80;3) è uguale a 1144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VARPA(6;7;8) è uguale a 0,6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEIBULL">
<title
>WEIBULL</title>
<para
>La funzione WEIBULL() restituisce la distribuzione di Weibull.</para>
<para
>I parametri alfa e beta devono essere positivi, il numero (primo parametro) non negativo.</para>
<para
>Cumulativo = 0 calcola la funzione di densità; cumulativo = 1 calcola la distribuzione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>WEIBULL(numero;alfa;beta;cumulativo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro alfa</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Parametro beta</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>0 = densità, 1 = distribuzione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>WEIBULL(2;1;1;0) è uguale a 0,135335</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>WEIBULL(2;1;1;1) è uguale a 0,864665</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZTEST">
<title
>ZTEST</title>
<para
>La funzione ZTEST() calcola la probabilità a due code di un z-test con distribuzione normale.</para>
<para
>Esegue un test di ipotesi nulla, dove il campione è un campionamento di una variabile aleatoria distribuita normalmente con media "media" e deviazione standard "sigma". Se restituisce 1, significa che l'ipotesi nulla è rifiutata, ossia che il campione non è un esempio di distribuzione normale. Se sigma è omesso, viene stimato su un campione, usando STDEV. </para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ZTEST(x; media, deviazione-standard)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>x (vettore)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>media</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Deviazione standard</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Text">
<title
>Testo</title>

<sect3 id="ASC">
<title
>ASC</title>
<para
>La funzione ASC() dimezza la dimensione dei caratteri a grande formato contenuti nell'argomento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ASC(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Caratteri grande formato</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="JIS"
>JIS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BAHTTEXT">
<title
>BAHTTEXT</title>
<para
>La funzione BAHTTEXT() converte un numero in un testo scritto in caratteri Thai (baht).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>BAHTTEXT(numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>BAHTTEXT(23) restituisce "ยสบสามบาทถวน"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHAR">
<title
>CHAR</title>
<para
>La funzione CHAR() restituisce il carattere indicato da un numero.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CHAR(codice)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Codice carattere</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CHAR(65) restituisce "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="CLEAN">
<title
>CLEAN</title>
<para
>La funzione CLEAN() rimuove ogni carattere non stampabile dalla stringa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CLEAN(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CLEAN(AsciiToChar(7) + "HELLO") restituisce "HELLO"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CODE">
<title
>CODE</title>
<para
>La funzione CODE() restituisce un codice numerico per il primo carattere in una stringa di testo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CODE(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Testo</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CODE("KDE") restituisce 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPARE">
<title
>COMPARE</title>
<para
>La funzione COMPARE() restituisce 0 se le due stringhe sono uguali; -1 se il primo è più piccolo del secondo; altrimenti 1.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COMPARE(stringa1; stringa2; true|false)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Prima stringa</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Stringa da confrontare con</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Confronto sensibile alle maiuscole (si/no)</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMPARE("Calligra"; "Calligra"; true) restituisce 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMPARE("calligra"; "Calligra"; true) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COMPARE("kspread"; "Calligra"; false) restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="EXACT"
>EXACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONCATENATE">
<title
>CONCATENATE</title>
<para
>La funzione CONCATENATE() restituisce una stringa che è la concatenazione delle stringhe passate come parametri.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CONCATENATE(valore;valore;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di valori</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa di valori</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa di valori</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa di valori</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem>
<seglistitem
><seg
>Stringa di valori</seg
><seg
>Un intervallo di stringhe</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CONCATENATE("Sheets";"Calligra";"KDE") restituisce "SheetsCalligraKDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLAR">
<title
>DOLLAR</title>
<para
>La funzione DOLLAR() converte un numero in testo utilizzando il formato valuta, con i decimali arrotondati al posto indicato. Anche se il nome è DOLLAR, questa funzione convertirà secondo le impostazioni correnti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DOLLAR(numero;decimali)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Decimali</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DOLLAR(1403,77) restituisce "€ 1,403,77"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DOLLAR(-0,123;4) restituisce "€ -0,1230"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXACT">
<title
>EXACT</title>
<para
>La funzione EXACT() restituisce True se le due stringhe specificate sono uguali. Altrimenti restituisce False.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>EXACT(stringa1;stringa2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Stringa</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EXACT("Calligra";"Calligra") restituisce True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>EXACT("KSpread";"Calligra") restituisce False</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COMPARE"
>COMPARE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIND">
<title
>FIND</title>
<para
>La funzione FIND() trova una stringa di testo (testo_cercato) all'interno di altro testo (in_testo) e restituisce il numero del punto iniziale di testo_cercato, dal carattere più a sinistra di in_testo.</para>
<para
>Il parametro num_avvio specifica il carattere dal quale iniziare la ricerca. Il primo della sequenza è il carattere 1. Se num_avvio è omesso, sarà utilizzato 1 in maniera predefinita.</para>
<para
>Puoi utilizzare la funzione SEARCH, ma FIND è indifferente allo stato (minuscolo/maiuscolo) e non permette caratteri wildcard.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FIND(testo_cercato;in_testo;num_avvio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il testo che vuoi trovare</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Il testo che dovrebbe contenere il testo cercato</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Specifica un indice per avviare la ricerca</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FIND("Cal";"Calligra") restituisce 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FIND("i";"Calligra") restituisce 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FIND("a";"Sheets in Calligra";4) restituisce 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINDB">
<title
>FINDB</title>
<para
>La funzione FINDB() trova una stringa di testo (testo_cercato) all'interno di altro testo (in_testo) e restituisce il numero del punto iniziale di testo_cercato, dal carattere più a sinistra di in_testo utilizzando le posizioni in byte.</para>
<para
>Il parametro PosizioneByte specifica il carattere dal quale iniziare la ricerca. Il primo carattere ha il numero 2. Se num_avvio è omesso, si assume che valga 2.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FINDB(testo_cercato;in_testo;PosizioneByte_avvio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il testo che vuoi trovare</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Il testo che dovrebbe contenere il testo cercato</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Specifica la posizione di un byte da cui avviare la ricerca</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIXED">
<title
>FIXED</title>
<para
>La funzione FIXED() arrotonda un numero ad un numero specifico di decimali, formatta il numero in una stringa di formato decimale e restituisce il risultato come testo. Se i decimali sono negativi, il numero è arrotondato a sinistra della virgola dei decimali. Se ometti decimali, è assunto in maniera predefinita 2. Se il parametro opzionale senza_punti è 'True', il separatore di migliaia non sarà mostrato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>FIXED(numero;decimali;senza_punti)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numero</seg
><seg
>Doppio</seg
></seglistitem>
<seglistitem
><seg
>Decimali</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Niente_virgola</seg
><seg
>Un valore di verità (TRUE o FALSE)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FIXED(1234,567;1) restituisce "1.234,6"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FIXED(1234,567;1;TRUE) restituisce "1234,6"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>FIXED(44,332) restituisce "44,33"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="JIS">
<title
>JIS</title>
<para
>La funzione JIS() raddoppia la dimensione dei caratteri di piccolo formato contenuti nell'argomento.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>JIS(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Caratteri a piccolo formato</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ASC"
>ASC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFT">
<title
>LEFT</title>
<para
>La funzione LEFT() restituisce una sottostringa della "lunghezza" richiesta che contiene i caratteri più a sinistra della stringa. Se "lunghezza" eccede la lunghezza della stringa, viene restituita l'intera stringa. Viene segnalato un errore se il numero dei caratteri è minore di zero.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LEFT(testo; lunghezza)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Numero di caratteri</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LEFT("ciao";2) restituisce "ci"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LEFT("KSpread";10) restituisce "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LEFT("KSpread") restituisce "K"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFTB">
<title
>LEFTB</title>
<para
>La funzione LEFTB() restituisce una sottostringa della "lunghezza" richiesta che contiene i caratteri più a sinistra della stringa utilizzando le posizioni dei byte. Se "lunghezza" eccede la lunghezza della stringa, viene restituita l'intera stringa. Viene segnalato un errore se il numero dei caratteri è minore di zero.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LEFTB(testo; LunghezzaByte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Lunghezza in byte</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEN">
<title
>LEN</title>
<para
>La funzione LEN() restituisce la lunghezza di una stringa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LEN(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LEN("ciao") restituisce 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LEN("KSpread") restituisce 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LENB"
>LENB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LENB">
<title
>LENB</title>
<para
>La funzione LENB() restituisce la lunghezza in byte di una stringa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LENB(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOWER">
<title
>LOWER</title>
<para
>La funzione LOWER() converte una stringa in minuscolo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>LOWER(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOWER("ciao") restituisce "ciao"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>LOWER("CIAO") restituisce "ciao"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MID">
<title
>MID</title>
<para
>La funzione MID() restituisce una sottostringa che contiene 'lunghezza' caratteri di una stringa, a partire dalla 'posizione' indicata.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MID(testo;posizione;lunghezza)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Posizione</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Lunghezza</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MID("Calligra";2;3) restituisce "all"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>MID("Calligra";2) restituisce "alligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIDB">
<title
>MIDB</title>
<para
>La funzione MIDB() restituisce una sottostringa che contiene 'lunghezza' caratteri di una stringa, a partire dalla 'posizione' indicata tramite il byte.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>MID(testo;PosizioneByte_avvio;LunghezzaByte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Posizione byte</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Lunghezza in byte</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PROPER">
<title
>PROPER</title>
<para
>La funzione PROPER() converte la prima lettera di ogni parola in maiuscolo e il resto delle lettere in minuscolo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PROPER(stringa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PROPER("questo è un titolo") restituisce "Questo È Un Titolo"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXP">
<title
>REGEXP</title>
<para
>Restituisce la parte della stringa individuata dall'espressione regolare. Se l'espressione regolare non è soddisfatta dalla stringa, verrà restituito il valore predefinito.</para>
<para
>Se è stato assegnato un riferimento all'indietro, ne viene restituito il valore.</para>
<para
>Se non viene assegnato un valore predefinito, viene restituita una stringa vuota. Se non è assegnato un riferimento all'indietro, viene posto uguale a 0 e viene restituita tutta la parte trovata.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>REGEXP(testo, espr-regolare, predef, rif-indietro)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Testo cercato</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Espressione regolare</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Valore predefinito (opzionale)</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Riferimento all'indietro (opzionale)</seg
><seg
>Numero</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>REGEXP("Il numero è 15.";"[0-9]+") = "15" </para
></listitem>

</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>REGEXP("15, 20, 26, 41";"([0-9]+), *[0-9]+$";"";1) = "26" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXPRE">
<title
>REGEXPRE</title>
<para
>Sostituisce tutte le stringhe che soddisfano un'espressione regolare con il nuovo testo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>REGEXPRE(testo; espr_regolare; nuovo_testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Testo cercato</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Espressione regolare</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Sostituzione</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>REGEXPRE("14 e 15 e 16" ; "[0-9]+" ; "num") restituisce "num e num e num"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACE">
<title
>REPLACE</title>
<para
>La funzione REPLACE() sostituisce parte di una stringa di testo con una differente stringa di testo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>REPLACE(testo;posizione;lunghezza;nuovo_testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Testo con il quale vuoi sostituire dei caratteri</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Posizione dei caratteri da sostituire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di caratteri da sostituire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Il testo che sostituirà i caratteri nel testo originale</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>REPLACE("abcdefghijk";6;5;"-") restituisce "abcde-k"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>REPLACE("2002";3;2;"03") restituisce "2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACEB">
<title
>REPLACEB</title>
<para
>La funzione REPLACEB() sostituisce parte di una stringa di testo con una differente stringa di testo utilizzando le posizione dei byte.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>REPLACEB(testo;PosizioneByte;LunghezzaByte;nuovo_testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Testo con il quale vuoi sostituire dei caratteri specificando la posizione dei loro byte</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Posizione dei byte dei caratteri da sostituire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Numero di byte occupati dai caratteri da sostituire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem>
<seglistitem
><seg
>Il testo che sostituirà i caratteri nel testo originale</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPT">
<title
>REPT</title>
<para
>La funzione REPT() ripete il primo parametro tante volte quante sono indicate dal secondo parametro. Questo non deve essere negativo. La funzione restituisce una stringa vuota se il secondo parametro è zero (o viene arrotondato a zero).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>REPT(testo;numero)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Numero di ripetizioni</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>REPT("KSpread";3) restituisce "KSpreadKSpreadKSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>REPT("KSpread";0) restituisce ""</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHT">
<title
>RIGHT</title>
<para
>La funzione RIGHT() restituisce una sottostringa della "lunghezza" richiesta che contiene i caratteri più a destra della stringa. Se "lunghezza" eccede la lunghezza della stringa, viene restituita l'intera stringa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RIGHT(testo; lunghezza)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Numero di caratteri</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RIGHT("ciao";2) restituisce "ao"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RIGHT("KSpread";10) restituisce "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RIGHT("KSpread") restituisce "d"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHTB">
<title
>RIGHTB</title>
<para
>La funzione RIGHTB() restituisce una sottostringa della "lunghezza" richiesta che contiene i caratteri più a destra della stringa utilizzando le posizioni dei byte. Se "lunghezza" eccede la lunghezza della stringa, viene restituita l'intera stringa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RIGHTB(testo; LunghezzaByte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Lunghezza in byte</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROT13">
<title
>ROT13</title>
<para
>La funzione ROT13() cifra il testo sostituendo ogni lettera con la lettera che la segue di 13 posizioni nell'ordine alfabetico. Se la 13-esima posizione va oltre la lettera Z, si ricomincia dalla lettera A (rotazione).</para>
<para
>Riapplicando la funzione di cifratura al testo risultante, puoi decifrare il testo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ROT13(Testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Testo</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROT13("KSpread") restituisce "XFcernq"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ROT13("XFcernq") restituisce "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCH">
<title
>SEARCH</title>
<para
>La funzione SEARCH() trova una stringa di testo (testo_cercato) all'interno di altro testo (in_testo) e restituisce il numero del punto iniziale di testo_cercato, dal carattere più a sinistra di in_testo.</para>
<para
>Puoi utilizzare caratteri jolly, il punto interrogativo (?) e un asterisco (*). Un punto interrogativo corrisponde ad un singolo carattere, un asterisco corrisponde ad ogni sequenza di caratteri.</para>
<para
>Il parametro num_avvio specifica il carattere dal quale partire con la ricerca. Il primo carattere è il numero 1. Se num_avvio è omesso, è assunto in maniera predefinita 1. SEARCH non fa distinzione tra lettere maiuscole e minuscole.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SEARCH(testo_cercato;in_testo;num_avvio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il testo che vuoi trovare</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Il testo che dovrebbe contenere il testo cercato</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Indice specificato per iniziare la ricerca</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SEARCH("e";"Statements";6) restituisce 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SEARCH("margin";"Profit Margin") restituisce 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCHB">
<title
>SEARCHB</title>
<para
>La funzione SEARCHB() trova una stringa di testo (cerca_testo) all'interno di altro testo (in_testo) e restituisce il numero del punto iniziale di testo_cercato, dal carattere più a sinistra di in_testo utilizzando le posizioni in byte.</para>
<para
>Puoi utilizzare caratteri jolly, il punto interrogativo (?) e un asterisco (*). Un punto interrogativo corrisponde ad un singolo carattere, un asterisco corrisponde ad ogni sequenza di caratteri.</para>
<para
>Il parametro PosizioneByte specifica il carattere dal quale avviare la ricerca. Il primo carattere è il numero 2. Se PosizioneByte è omesso, si assume che sia 1. SEARCHB non fa distinzione tra lettere maiuscole e minuscole.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SEARCHB(testo_cercato;in_testo;PosizioneByte_avvio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Il testo che vuoi trovare</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Il testo che dovrebbe contenere il testo cercato</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Posizione specificata del byte da cui avviare la ricerca</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLEEK">
<title
>SLEEK</title>
<para
>La funzione SLEEK() rimuove tutti gli spazi dalla stringa.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SLEEK(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SLEEK("Nel mezzo del cammin ") restituisce "Nelmezzodelcammin"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="TRIM"
>TRIM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBSTITUTE">
<title
>SUBSTITUTE</title>
<para
>La funzione SUBSTITUTE() sostituisce nuovo_testo a vecchio_testo in una stringa di testo. Se specifichi num_istanza, viene sostituita solo questa istanza del vecchio_testo. Altrimenti, ogni sua occorrenza viene sostituita con nuovo_testo. Utilizza SUBSTITUTE quando vuoi sostituire un testo specifico, utilizza REPLACE quando vuoi sostituire qualsiasi testo che appare in una precisa posizione.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SUBSTITUTE(testo; vecchio_testo; nuovo_testo; num_istanza)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Testo che vuoi sostituire</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Parte di testo che vuoi sostituire</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Nuovo testo che sarà sostituito</seg
><seg
>Testo</seg
></seglistitem>
<seglistitem
><seg
>Occorrenza da sostituire</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUBSTITUTE("Dati costi";"costi";"vendite") restituisce "Dati vendite"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUBSTITUTE("Qtr 1, 2001";"1";"3";1) restituisce "Qtr 3, 2001"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SUBSTITUTE("Qtr 1, 2001";"1";"3";4) restituisce "Qtr 3, 2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="T">
<title
>T</title>
<para
>La funzione T() restituisce il riferimento testo per valore. Se il valore è testo o fa semplicemente riferimento a questo, sarà restituito un valore. Se il valore non fa riferimento al testo allora T restituisce un testo vuoto.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>T(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>T("Calligra") restituisce "Calligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>T(1,2) restituisce "" (testo vuoto)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TEXT">
<title
>TEXT</title>
<para
>La funzione TEXT() converte un valore in testo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TEXT(valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valore</seg
><seg
>Qualsiasi tipo di valore</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TEXT(1234,56) restituisce "1234,56"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TEXT("KSpread") restituisce "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TOGGLE">
<title
>TOGGLE</title>
<para
>La funzione TOGGLE() cambia i caratteri minuscoli in caratteri maiuscoli e i caratteri maiuscoli in caratteri minuscoli.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TOGGLE(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TOGGLE("ciao") restituisce "CIAO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TOGGLE("CIAO") restituisce "ciao"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TOGGLE("CiAo") restituisce "cIaO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIM">
<title
>TRIM</title>
<para
>La funzione TRIM() restituisce testo con spazi singoli tra le parole.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TRIM(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TRIM(" ciao   KSpread ") restituisce "ciao KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICHAR">
<title
>UNICHAR</title>
<para
>La funzione UNICHAR() restituisce il carattere individuato da un codice unicode.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>UNICHAR(codice)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Codice carattere</seg
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>UNICHAR(65) restituisce "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="UNICODE"
>UNICODE</link
>&nbsp;</member>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICODE">
<title
>UNICODE</title>
<para
>La funzione UNICODE() restituisce un codice Unicode del primo carattere di una stringa di testo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un numero intero (come 1, 132, 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>UNICODE(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Testo</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>UNICODE("KDE") restituisce 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="UNICHAR"
>UNICHAR</link
>&nbsp;</member>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UPPER">
<title
>UPPER</title>
<para
>La funzione UPPER() converte una stringa in maiuscolo.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>UPPER(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Stringa di partenza</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>UPPER("ciao") restituisce "CIAO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>UPPER("CIAO") restituisce "CIAO"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VALUE">
<title
>VALUE</title>
<para
>Converte la stringa di testo che rappresenta un numero nel valore reale. </para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Doppio</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>

<listitem
><para
>VALUE(testo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Testo</seg
><seg
>Testo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>VALUE("14,03") restituisce 14,03</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Trigonometric">
<title
>Trigonometria</title>

<sect3 id="ACOS">
<title
>ACOS</title>
<para
>La funzione ACOS() restituisce l'arcoseno in radianti e il valore è matematicamente definito da 0 a PI (incluso).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ACOS(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ACOS(0,8) è uguale a 0,6435011</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ACOS(0) è uguale a 1,57079633</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOSH">
<title
>ACOSH</title>
<para
>La funzione ACOSH() calcola il coseno inverso iperbolico di x, cioè il numero il cui coseno iperbolico è x. Se x è minore di 1,0, ACOSH() restituisce NaN (non un numero) e imposta errno.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ACOSH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ACOSH(5) è uguale a 2,29243167</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ACOSH(0) è uguale a NaN</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COSH"
>COSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOT">
<title
>ACOT</title>
<para
>La funzione ACOT() restituisce l'arcocotangente di un numero.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ACOT(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ACOT(0) è uguale a 1,57079633</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASIN">
<title
>ASIN</title>
<para
>La funzione ASIN() restituisce l'arcoseno in radianti e il valore è matematicamente compreso tra -PI/2 e PI/2 (incluso).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ASIN(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ASIN(0,8) è uguale a 0,92729522</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ASIN(0) è uguale a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASINH">
<title
>ASINH</title>
<para
>La funzione ASINH() calcola il seno iperbolico inverso di x, cioè il numero il cui seno iperbolico è x.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ASINH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ASINH(0,8) è uguale a 0,73266826</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ASINH(0) è uguale a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SINH"
>SINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN">
<title
>ATAN</title>
<para
>La funzione ATAN() restituisce l'arcotangente in radianti e il valore è matematicamente definito da -PI/2 a PI/2 (incluso).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ATAN(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ATAN(0,8) è uguale a 0,67474094</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ATAN(0) è uguale a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="TAN"
>TAN</link
>&nbsp;</member>
<member
><link linkend="ATAN2"
>ATAN2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN2">
<title
>ATAN2</title>
<para
>Questa funzione calcola l'arcotangente delle due variabili x e y. Ciò è simile a calcolare l'arcotangente di y/x, tranne per il fatto che i segni di entrambi gli argomenti sono usati per determinare il quadrante del risultato.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ATAN2(valore;valore)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ATAN2(0,5;1,0) è uguale a 1,107149</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ATAN2(-0,5;2,0) è uguale a 1,815775</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATANH">
<title
>ATANH</title>
<para
>La funzione ATANH() calcola la tangente iperbolica inversa di x, cioè il numero la cui tangente iperbolica è x. Se il valore assoluto di x è più grande di 1,0, ATANH() restituisce NaN (non un numero).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>ATANH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ATANH(0,8) è uguale a 1,09861229</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>ATANH(0) è uguale a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="TANH"
>TANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COS">
<title
>COS</title>
<para
>La funzione COS() restituisce il coseno di x, dove x è espresso in radianti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COS(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COS(0) è uguale a 1,0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COS(PI()/2) è uguale a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
<member
><link linkend="ACOS"
>ACOS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COSH">
<title
>COSH</title>
<para
>La funzione COSH() restituisce il coseno iperbolico di x, che è definito matematicamente come (EXP(x) + EXP(-x)) / 2.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>COSH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COSH(0,8) è uguale a 1,33743495</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COSH(0) è uguale a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ACOSH"
>ACOSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSC">
<title
>CSC</title>
<para
>La funzione CSC() restituisce la cosecante di x, dove x è espresso in radianti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CSC(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>CSC(PI()/2) è uguale a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSCH">
<title
>CSCH</title>
<para
>La funzione CSCH() restituisce la cosecante iperbolica di x, dove x è espresso in radianti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>CSCH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>COSH(PI()/2) è uguale a 0,434537208...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEGREES">
<title
>DEGREES</title>
<para
>Questa funzione trasforma un angolo in radianti in un angolo in gradi.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>DEGREES(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEGREES(0,78) è uguale a 44,69</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>DEGREES(1) è uguale a 57,29</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="RADIANS"
>RADIANS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PI">
<title
>PI</title>
<para
>La funzione PI() restituisce il valore di pi greco.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>PI()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>PI() è uguale a 3,141592654...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RADIANS">
<title
>RADIANS</title>
<para
>Questa funzione trasforma un angolo in gradi in un angolo in radianti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>RADIANS(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (gradi)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RADIANS(75) è uguale a 1,308</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>RADIANS(90) è uguale a 1,5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="DEGREES"
>DEGREES</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEC">
<title
>SEC</title>
<para
>La funzione SEC() restituisce la secante di x, dove x è espresso in radianti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SEC(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SEC(0) è uguale a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECH">
<title
>SECH</title>
<para
>La funzione SECH() restituisce la secante iperbolica di x, dove x è espresso in radianti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SECH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SECH(0) è uguale a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIN">
<title
>SIN</title>
<para
>La funzione SIN() restituisce il seno di x, dove x è espresso in radianti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SIN(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SIN(0) è uguale a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SIN(PI()/2) è uguale a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
<member
><link linkend="ASIN"
>ASIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SINH">
<title
>SINH</title>
<para
>La funzione SINH() restituisce il seno iperbolico di x, che è definito matematicamente come (EXP(x) - EXP(-x)) / 2.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>SINH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SINH(0,8) è uguale a 0,88810598</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>SINH(0) è uguale a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ASINH"
>ASINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TAN">
<title
>TAN</title>
<para
>La funzione TAN() restituisce la tangente di x, dove x è espresso in radianti.</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TAN(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>

<listitem
><para
>TAN(0,7) è uguale a 0,84228838</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TAN(0) è uguale a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TANH">
<title
>TANH</title>
<para
>La funzione TANH() restituisce la tangente iperbolica di x, che è definita matematicamente come SINH()/COSH(x).</para>
<para
><segmentedlist
><segtitle
>Tipo restituito</segtitle>
<seglistitem
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintassi</term>
<listitem
><para
>TANH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parametri</term>
<listitem
><para
><segmentedlist
><segtitle
>Commento</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Angolo (radianti)</seg
><seg
>Un valore in virgola mobile (come 1,3 o 0,343 o 253)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TANH(0,8) è uguale a 0,66403677</para
></listitem>
</varlistentry>
<varlistentry
><term
>Esempi</term>
<listitem
><para
>TANH(0) è uguale 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funzioni collegate</term>
<listitem
><simplelist>
<member
><link linkend="ATANH"
>ATANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2>
</sect1>
</chapter>
 


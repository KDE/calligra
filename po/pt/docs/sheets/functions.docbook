<chapter id="functions">
<!--
*************************** DO NOT EDIT MANUALLY ************************

This file is autogenerated from *.xml files in calligra/tables/functions/
all changes will be overwritten on the next script run
-->
<title
>Funções</title>
<para
>O &sheets; tem uma enorme gama de funções matemáticas e diversas que podem ser usadas numa célula com fórmulas.</para>
<sect1 id="supported-functions">
<title
>Funções Suportadas</title>
<para
>Este capítulo mantém uma introdução breve de todas as funções suportadas nos seguintes grupos:</para>
<simplelist>
<member
><link linkend="Bit-Operations"
>Operações com 'Bits'</link
>&nbsp;</member>
<member
><link linkend="Conversion"
>Conversão</link
>&nbsp;</member>
<member
><link linkend="Database"
>Bases de dados</link
>&nbsp;</member>
<member
><link linkend="Date---Time"
>Datas &amp; Horas</link
>&nbsp;</member>
<member
><link linkend="Engineering"
>Engenharia</link
>&nbsp;</member>
<member
><link linkend="Financial"
>Financeiras</link
>&nbsp;</member>
<member
><link linkend="Information"
>Informação</link
>&nbsp;</member>
<member
><link linkend="Logical"
>Lógicas</link
>&nbsp;</member>
<member
><link linkend="Lookup---Reference"
>Pesquisa &amp; Referência</link
>&nbsp;</member>
<member
><link linkend="Math"
>Matemática</link
>&nbsp;</member>
<member
><link linkend="Statistical"
>Estatísticas</link
>&nbsp;</member>
<member
><link linkend="Text"
>Texto</link
>&nbsp;</member>
<member
><link linkend="Trigonometric"
>Trigonométricas</link
>&nbsp;</member>
</simplelist>
<!--
<para
>OpenFormula groups (small, medium, and large, more)? Which are supported by Sheets?</para>
<para
>Something about interoperablity / spread sheet exchange / known issues, incompabitilites, errors?</para>
-->
<sect2 id="Bit-Operations">
<title
>Operações com Bits</title>

<sect3 id="BITAND">
<title
>BITAND</title>
<para
>A função BITAND() efectua uma operação 'E' nos 'bits' dos dois parâmetros inteiros.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITAND(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BITAND(12;10) devolve 8 (porque o 12 em decimal é 1100 em binário, assim como o decimal 10 é 0100 em binário; finalmente, o 1100 "e" o 0110 dá 0100, o que corresponde ao número inteiro 8).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITLSHIFT">
<title
>BITLSHIFT</title>
<para
>A função BITLSHIFT() efectua um deslocamento de 'bits' à esquerda do primeiro parâmetro. O número de 'bits' a deslocar é indicado pelo segundo parâmetro. Repare que um número negativo de 'bits' no deslocamento à esquerda corresponde a um deslocamento à direita. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITLSHIFT(valor; número deslocamentos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de deslocamentos à esquerda</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITOR">
<title
>BITOR</title>
<para
>A função BITOR() realiza uma operação lógica OU para os dois parâmetros de números inteiros. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITOR(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BITOR(12;10) devolve 14 (porque o número decimal 12 é o binário 1100, assim como o decimal 10 é o binário 1010; finalmente, o 1100 "ou" o 1010 dá 1110, que é o número inteiro 14).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITXOR"
>BITXOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITRSHIFT">
<title
>BITRSHIFT</title>
<para
>A função BITRSHIFT() efectua um deslocamento de 'bits' à direita do primeiro parâmetro. O número de 'bits' a deslocar é indicado pelo segundo parâmetro. Repare que um número negativo de 'bits' no deslocamento à direita corresponde a um deslocamento à esquerda. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITRSHIFT(valor; número deslocamentos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de deslocamentos à direita</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITLSHIFT"
>BITLSHIFT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BITXOR">
<title
>BITXOR</title>
<para
>A função BITXOR() realiza uma operação lógica OU-exclusivo para os dois parâmetros de números inteiros. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BITXOR(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BITXOR(12;10) devolve 6 (12 em decimal é igual a 1100, e 10 em binário é igual a 1100; como tal, o "xor" de 1100 com 1010 dá 0110, que corresponde ao número inteiro 6).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BITAND"
>BITAND</link
>&nbsp;</member>
<member
><link linkend="BITOR"
>BITOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Conversion">
<title
>Conversão</title>

<sect3 id="ARABIC">
<title
>ARABIC</title>
<para
>A função ARABIC() converte um número em numeração romana num número árabe.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ARABIC(Número Romano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numeral</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ARABIC("IV") devolve 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ARABIC("XCIX") devolve 99</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROMAN"
>ROMAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASCIITOCHAR">
<title
>ASCIITOCHAR</title>
<para
>A função ASCIITOCHAR() devolve o carácter correspondente a cada um dos códigos ASCII, passados como parâmetro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ASCIITOCHAR(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Os valores em ASCII a converter</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ASCIITOCHAR(118) devolve "v"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ASCIITOCHAR(75; 68; 69) devolve "KDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2INT">
<title
>BOOL2INT</title>
<para
>A função BOOL2INT() devolve um valor inteiro para um dado valor booleano. Este método é pensado para ser usado nos métodos que esperam um inteiro ou um número de vírgula flutuante em vez de um booleano.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BOOL2INT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor booleano a converter</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BOOL2INT(True) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BOOL2INT(False) devolve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="INT2BOOL"
>INT2BOOL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BOOL2STRING">
<title
>BOOL2STRING</title>
<para
>A função BOOL2STRING() devolve um valor textual para um dado valor booleano. Este método é usado para usar um booleano nos métodos que necessitam de uma cadeia de caracteres</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BOOL2STRING(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor booleano a converter</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BOOL2STRING(True) devolve "True"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BOOL2STRING(False) devolve "False"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>upper(BOOL2STRING(find("nan";"banana"))) devolve TRUE</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARX">
<title
>CARX</title>
<para
>A função CARX() devolve a posição X correspondente à posição de um ponto, em coordenadas polares.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CARX(Raio;Ângulo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Raio</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CARX(12;1.5707) devolve 0,00115592</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CARX(12;0) devolve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CARY">
<title
>CARY</title>
<para
>A função CARY() devolve a posição em Y, correspondente à posição de um ponto em coordenadas polares.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CARY(Raio;Ângulo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Raio</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CARY(12;1,5707) devolve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CARY(12;0) devolve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHARTOASCII">
<title
>CHARTOASCII</title>
<para
>A função CHARTOASCII() devolve o código ASCII do carácter indicado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CHARTOASCII(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um carácter a converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CHARTOASCII("v") devolve 118</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CHARTOASCII(r) está errado. O carácter deve estar entre aspas.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DECSEX">
<title
>DECSEX</title>
<para
>A função DECSEX() devolve um valor de dupla precisão para uma hora.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DECSEX(precisão dupla)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DECSEX(1.6668) devolve 1:40 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DECSEX(7,8) devolve 7:47</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT2BOOL">
<title
>INT2BOOL</title>
<para
>A função INT2BOOL() devolve um valor booleano para um dado número inteiro. Este método pretende ser usado para usar um inteiro nos métodos que necessitam de um booleano. Só aceita 0 ou 1. Qualquer outro valor que seja indicado é assumido como falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INT2BOOL(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor inteiro a converter</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INT2BOOL(1) devolve verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INT2BOOL(0) devolve falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O OR(INT2BOOL(1), false) devolve verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BOOL2INT"
>BOOL2INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NUM2STRING">
<title
>NUM2STRING</title>
<para
>A função NUM2STRING() devolve um valor textual para um dado número. Lembre-se que o &sheets; pode converter automaticamente números para cadeias de caracteres; como tal, esta função deverá ser raramente necessária.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NUM2STRING(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número para converter em cadeia de caracteres</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NUM2STRING(10) devolve "10"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NUM2STRING(2.05) devolve "2.05"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O =find("101";NUM2STRING(A1)) (A1 = 2.010102) devolve True</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STRING"
>STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLA">
<title
>POLA</title>
<para
>A função POLA() devolve o ângulo (em radianos), correspondente à posição de um ponto em coordenadas cartesianas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POLA(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor em X</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor em Y</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POLA(12;12) devolve 0,78539816</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POLA(12;0) devolve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POLA(0;12) devolve 1,5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POLR"
>POLR</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POLR">
<title
>POLR</title>
<para
>A função POLR() devolve o raio, correspondente à posição de um ponto em coordenadas cartesianas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POLR(X;Y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor em X</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor em Y</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POLR(12;12) devolve 16,9705</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POLR(12;0) devolve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POLA"
>POLA</link
>&nbsp;</member>
<member
><link linkend="CARX"
>CARX</link
>&nbsp;</member>
<member
><link linkend="CARY"
>CARY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROMAN">
<title
>ROMAN</title>
<para
>A função ROMAN() devolve o número no formato Romano. O número deverá ser inteiro e positivo. O argumento opcional Formato define o nível com que o número fica conciso, sendo igual por omissão a 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROMAN(Número)</para
></listitem>

</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Formato</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROMAN(99) devolve "XCIX"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROMAN(-55) devolve "Err"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ARABIC"
>ARABIC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEXDEC">
<title
>SEXDEC</title>
<para
>A função SEXDEC() devolve um valor decimal. Também pode dar uma hora.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SEXDEC(valor de tempo) ou SEXDEC(horas;minutos;segundos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Horas</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minutos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SEXDEC(1;5;7) devolve 1.0852778 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DECSEX("8:05") devolve 8,08333333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STRING">
<title
>TEXTO</title>
<para
>A função STRING() devolve um valor textual para um dado número. É a mesma que a função NUM2STRING.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número para converter em cadeia de caracteres</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="NUM2STRING"
>NUM2STRING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Database">
<title
>Base de Dados</title>

<sect3 id="DAVERAGE">
<title
>DAVERAGE</title>
<para
>Calcula a média de uma coluna da base de dados, de acordo com um conjunto de condições, para os valores numéricos</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAVERAGE(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DAVERAGE(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNT">
<title
>DCOUNT</title>
<para
>Conta as células que têm valores numéricos, numa coluna de uma base de dados, de acordo com um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DCOUNT(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DCOUNT(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNTA"
>DCOUNTA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DCOUNTA">
<title
>DCOUNTA</title>
<para
>Conta as células que têm valores numéricos ou alfanuméricos, numa coluna de um base de dados, de acordo com um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DCOUNTA(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DCOUNTA(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DCOUNT"
>DCOUNT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DGET">
<title
>DGET</title>
<para
>Devolve um único valor, a partir de uma coluna de uma base de dados, de acordo com um conjunto de condições. Esta função devolve um erro, se não houver nenhum valor, ou se existir mais do que um.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DGET(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DGET(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMAX">
<title
>DMAX</title>
<para
>Devolve o maior valor de uma coluna de uma base de dados, definida por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DMAX(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DMAX(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DMIN"
>DMIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DMIN">
<title
>DMIN</title>
<para
>Devolve os menores valores de uma coluna de uma base de dados, indicada através de um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DMIN(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DMIN(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DMAX"
>DMAX</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DPRODUCT">
<title
>DPRODUCT</title>
<para
>Devolve o produto de todos os valores numéricos numa coluna da base de dados, indicada por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DPRODUCT(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DPRODUCT(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEV">
<title
>DSTDEV</title>
<para
>Devolve a estimativa do desvio-padrão de uma população, com base numa amostra com todos os valores numéricos de uma coluna de uma base de dados, definida através de um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DSTDEV(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DSTDEV(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEVP"
>DSTDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSTDEVP">
<title
>DSTDEVP</title>
<para
>Devolve o desvio-padrão de uma população, baseada em toda a população, usando todos os valores numéricos de uma coluna de uma base de dados, definida por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DSTDEVP(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DSTDEVP(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DSTDEV"
>DSTDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DSUM">
<title
>DSUM</title>
<para
>Soma os números de uma coluna da base de dados, de acordo com um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DSUM(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DSUM(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVAR">
<title
>DVAR</title>
<para
>Devolve a estimativa da variância de uma população, baseada numa amostra que usa todos os valores numéricos de uma coluna de uma base de dados, definida por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DVAR(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DVAR(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DVARP"
>DVARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DVARP">
<title
>DVARP</title>
<para
>Devolve a variância de uma população, baseada em toda a população, usando todos os valores numéricos de uma coluna de uma base de dados, definida por um conjunto de condições.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DVARP(Base de dados; "Cabeçalho"; Condições)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a base de dados</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>O texto que marca a coluna na base de dados</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O intervalo que marca as condições</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DVARP(A1:C5; "Salário"; A9:A11)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DVAR"
>DVAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GETPIVOTDATA">
<title
>GETPIVOTDATA</title>
<para
>Obtém os dados resumidos de uma tabela de 'pivot'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GETPIVOTDATA(BaseDeDados; "Vendas")</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O intervalo que marca a tabela de 'pivot'</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Nome do campo do qual quer os dados resumidos</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Date---Time">
<title
>Data &amp; Hora</title>

<sect3 id="CURRENTDATE">
<title
>CURRENTDATE</title>
<para
>A função CURRENTDATE() devolve a data actual. É equivalente à função TODAY.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CURRENTDATE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CURRENTDATE() devolve "Segunda 15 de Abril de 2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTDATETIME">
<title
>CURRENTDATETIME</title>
<para
>A função CURRENTDATETIME() devolve a data e hora actuais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CURRENTDATETIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CURRENTDATETIME() devolve "Segunda 15 de Abril de 2002 22:00:00"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CURRENTTIME">
<title
>CURRENTTIME</title>
<para
>A função CURRENTTIME() devolve a hora actual formatada, de acordo com os parâmetros locais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CURRENTTIME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CURRENTTIME() devolve "10:02:02"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE">
<title
>DATE</title>
<para
>A função DATE() devolve a data formatada, de acordo com os parâmetros locais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DATE(ano;mês;dia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mês</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Dia</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DATE(2000;5;5) devolve 'Sexta 05 de Maio de 2000'</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATE2UNIX">
<title
>DATE2UNIX</title>
<para
>A função DATE2UNIX() converte um valor de data e hora para uma hora Unix.</para>
<para
>Uma hora Unix é o número de segundos após a meia-noite de 1 de Janeiro de 1970.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DATE2UNIX(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DATE2UNIX("01/01/2000") devolve 946 684 800</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEDIF">
<title
>DATEDIF</title>
<para
>A função DATEDIF() devolve a diferença entre duas datas.</para>
<para
>O intervalo deverá ser um dos seguintes: "m": mês; "d": dias; "y": anos completo; "ym": mês, excluindo os anos; "yd": dias, excluindo os anos; "md": dias, excluindo os meses e anos</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DATEDIF(primeira data; segunda data; intervalo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeira data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segunda data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>intervalo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DATEDIF(A1;A2;"d"), com A1 igual a "1 de Janeiro de 1995" e A2 igual a "15 de Junho de 1999" devolve 1626 dias</para
></listitem>
</varlistentry>

<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DATEDIF(A1;A2;"m"), com o A1 igual a "1 de Janeiro de 1995" e A2 igual a "15 de Junho de 1999" devolve 53 meses</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DATEVALUE">
<title
>DATEVALUE</title>
<para
>A função DATEVALUE devolve um número que representa o dia, i.e., o número de dias passados, desde o 31 Dezembro de 1899.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DATEVALUE(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DATEVALUE("22/2/2002") devolve 37309</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TIMEVALUE"
>TIMEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAY">
<title
>DAY</title>
<para
>A função DAY devolve o dia de uma data. Se não for indicado nenhum parâmetro, é devolvido o dia actual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAY(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAY("22/2/2002") devolve 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAY(2323,1285) devolve 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYNAME">
<title
>DAYNAME</title>
<para
>A função DAYNAME() devolve o nome do dia da semana (1..7). Em alguns países, o primeiro dia da semana é a Segunda, enquanto que noutros é o Domingo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYNAME(dia da semana)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O número do dia na semana (1..7)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAYNAME(1) devolve Segunda (se a semana começar na Segunda)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="WEEKDAY"
>WEEKDAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYOFYEAR">
<title
>DIADOANO</title>
<para
>A função DAYOFYEAR() devolve o número do dia no ano (1...365).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYOFYEAR(ano;mês;dia)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mês</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Dia</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAYOFYEAR(2000;12;1) devolve 336</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAYOFYEAR(2000;2;29) devolve 60</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS">
<title
>DAYS</title>
<para
>A função DAYS() devolve a diferença entre as duas datas em dias.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYS(data2; data1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro (mais antigo) valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAYS("02/22/2002"; "02/26/2002") devolve 4</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYS360">
<title
>DAYS360</title>
<para
>A função DAYS360() devolve o número de dias da data1 até à data2, usando um calendário de 360 dias, no qual todos os meses se assumem como tendo 30 dias. Se o método for falso (por omissão), será usado o método dos EUA; caso contrário, será usado o europeu.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYS360(data1; data2; método)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data1</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Data2</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Método</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAYS360("22/2/2002"; "21/4/2002"; FALSE) devolve 59</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAYS"
>DAYS</link
>&nbsp;</member>
<member
><link linkend="MONTHS"
>MONTHS</link
>&nbsp;</member>
<member
><link linkend="WEEKS"
>WEEKS</link
>&nbsp;</member>
<member
><link linkend="YEARS"
>YEARS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINMONTH">
<title
>DAYSINMONTH</title>
<para
>A função DAYSINMONTH() devolve o número de dias no mês e ano indicados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYSINMONTH(ano;mês)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Mês</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAYSINMONTH(2000;2) devolve 29</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DAYSINYEAR">
<title
>DAYSINYEAR</title>
<para
>A função DAYSINYEAR() devolve o número de dias no ano indicado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DAYSINYEAR(ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DAYSINYEAR(2000) devolve 366</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EASTERSUNDAY">
<title
>EASTERSUNDAY</title>
<para
>A função EASTERSUNDAY() devolve a data correspondente ao Domingo de Páscoa, para o ano dado como parâmetro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EASTERSUNDAY(ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EASTERSUNDAY(2003) devolve "20 de Abril de 2003"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EDATE">
<title
>EDATE</title>
<para
>A função EDATE devolve a data, definida com base numa dada data e num número de meses, antes ou depois dessa data.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EDATE(data; meses)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Meses</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EDATE("22/2/2002"; 3) devolve "22/5/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EDATE("31/3/2002"; -1) devolve "28/2/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DATE"
>DATE</link
>&nbsp;</member>
<member
><link linkend="EOMONTH"
>EOMONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EOMONTH">
<title
>EOMONTH</title>
<para
>A função EOMONTH devolve o dia do mês, definido por uma dada data e o número de meses dessa data.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EOMONTH(data; meses)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Meses</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EOMONTH("22/2/2002"; 3) devolve "31/5/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EOMONTH("12/3/2002"; -1) devolve "28/2/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EOMONTH("12/3/2002"; 0) devolve "31/3/2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EDATE"
>EDATE</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOUR">
<title
>HOUR</title>
<para
>A função HOUR devolve a hora de uma dada hora. Se não for indicado nenhum parâmetro, é devolvida a hora actual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HOUR(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HOUR("22:10:12") devolve 22</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HOUR(0,1285) devolve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HOURS">
<title
>HOURS</title>
<para
>A função HOURS() devolve o número de horas numa expressão de horas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HOURS(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HOURS("10:5:2") devolve 10</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLEAPYEAR">
<title
>ISLEAPYEAR</title>
<para
>A função ISLEAPYEAR() devolve Verdadeiro se o ano indicado for bissexto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISLEAPYEAR(ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISLEAPYEAR(2000) devolve Verdadeiro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISOWEEKNUM">
<title
>ISOWEEKNUM</title>
<para
>A função ISOWEEKNUM() devolve o número da semana onde a data está incluída. Esta função funciona de acordo com a norma ISO8601: uma semana começa sempre na Segunda-Feira e acaba no Domingo; a primeira semana do ano é aquela que contém a primeira Quinta-Feira do ano.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISOWEEKNUM(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISOWEEKNUM(A1) devolve 51 quando o A1 é igual a "21 de Dez".</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="WEEKNUM"
>WEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTE">
<title
>MINUTE</title>
<para
>A função MINUTE devolve os minutos de uma dada hora. Se não for indicado nenhum parâmetro, são devolvidos os minutos actuais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MINUTE(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MINUTE("22:10:12") devolve 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MINUTE(0.1234) devolve 57</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="SECOND"
>SECOND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINUTES">
<title
>MINUTES</title>
<para
>A função MINUTES() devolve o valor dos minutos, numa expressão de uma hora.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MINUTES(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MINUTES("10:5:2") devolve 5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTH">
<title
>MES</title>
<para
>A função MONTH devolve o mês de uma data. Se não for indicado nenhum parâmetro é devolvido o mês actual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MONTH(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MONTH("22/2/2002") devolve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MONTH(2323,1285) devolve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="YEAR"
>YEAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHNAME">
<title
>MONTHNAME</title>
<para
>A função MONTHNAME() devolve o nome do mês (1...12).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MONTHNAME(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número do mês (1..12)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MONTHNAME(5) devolve Maio</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MONTHS">
<title
>MONTHS</title>
<para
>A função MONTHS() devolve a diferença entre duas datas em meses. O terceiro parâmetro indica o modo de cálculo: se o modo for 0, o WEEKS() devolve o maior número possível de meses entre esses dias. Se o modo for 1, só devolve o número de meses inteiros dentro do intervalo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MONTHS(data2; data1; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro (mais antigo) valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Modo de cálculo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MONTHS("2002-01-18"; "2002-02-26"; 0) devolve 1, porque existe 1 mês e 8 dias entre eles</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MONTHS("2002-01-19"; "2002-02-26"; 1) devolve 0, porque não existe um mês inteiro pelo meio, a começar no primeiro dia do mês</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NETWORKDAY">
<title
>NETWORKDAY</title>
<para
>A função NETWORKDAY() devolve o número de dias de trabalho entre a data inicial e a final.</para>
<para
>As férias deverão ser uma das seguintes: número = dias a adicionar, uma única data ou uma lista de datas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NETWORKDAY(data inicial; data final; férias)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data inicial</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Data final</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Férias</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NETWORKDAY("01/01/2001";"01/08/2001") devolve 5 dias de trabalho</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NETWORKDAY("01/01/2001";"01/08/2001";2) devolve 3 dias de trabalho</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOW">
<title
>NOW</title>
<para
>A função NOW() devolve a data e hora actuais. É idêntica ao CURRENTDATETIME e é fornecida por razões de compatibilidade com as outras aplicações.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NOW()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NOW() devolve "Segunda 15 de Abril de 2002 22:00:00"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="TODAY"
>TODAY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECOND">
<title
>SECOND</title>
<para
>A função SECOND devolve os segundos de uma dada hora. Se não for indicado nenhum parâmetro são devolvidos os segundos actuais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SECOND(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SECOND("22:10:12") devolve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SECOND(0,1234) devolve 42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="HOUR"
>HOUR</link
>&nbsp;</member>
<member
><link linkend="MINUTE"
>MINUTE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECONDS">
<title
>SECONDS</title>
<para
>A função SECONDS() devolve o número de segundos na expressão, numa expressão de uma hora.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SECONDS(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SECONDS("10:5:2") devolve 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIME">
<title
>TIME</title>
<para
>A função TIME() devolve a hora formatada, de acordo com os parâmetros locais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TIME(horas;minutos;segundos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Horas</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Minutos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TIME(10;2;2) devolve '10:02:02'</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TIME(10;70;0) devolve '11:10:0'</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TIME(10;-40;0) devolve '9:20:0'</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TIMEVALUE">
<title
>TIMEVALUE</title>
<para
>A função TIMEVALUE() devolve um número (entre 0 e 1) que representa a hora do dia.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TIMEVALUE(hora)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TIMEVALUE("10:05:02") devolve 0,42</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DATEVALUE"
>DATEVALUE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TODAY">
<title
>TODAY</title>
<para
>A função TODAY() devolve a data actual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TODAY()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TODAY() devolve "Segunda 15 de Abril de 2002"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CURRENTTIME"
>CURRENTTIME</link
>&nbsp;</member>
<member
><link linkend="NOW"
>NOW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNIX2DATE">
<title
>UNIX2DATE</title>
<para
>A função UNIX2DATE() converte uma hora Unix para um valor de data e hora.</para>
<para
>Uma hora Unix é o número de segundos após a meia-noite de 1 de Janeiro de 1970.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>UNIX2DATE(hora Unix)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Hora UNIX</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O UNIX2DATE(0) devolve '01-01-1970'</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKDAY">
<title
>DIASEMANA</title>
<para
>A função WEEKDAY() devolve o dia da semana da data indicada. Se o método for o 1 (por omissão), o WEEKDAY() devolve 1 para o Domingo, 2 para a Segunda...  Se o método for o 2, a Segunda é o 1, a Terça é o 2, ... e se o método for o 3, o WEEKDAY() devolve 0 para a Segunda, 1 para a Terça,...</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEEKDAY(data; método)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Método (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O WEEKDAY("22-02-2002"; 2) devolve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAYNAME"
>DAYNAME</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKNUM">
<title
>WEEKNUM</title>
<para
>A função WEEKNUM() devolve o número da semana não-ISO, no qual a data se encaixa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEEKNUM(data; método)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Método (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A função WEEKNUM(A1; 1) devolve 11 quando o A1 é "9 de Março de 2008". O número da semana no ano, com uma semana que começa a Domingo (1, este é o valor por omissão se for omitido o método.)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O WEEKNUM(A1; 2) devolve 10 quando o A1 é "9 de Março de 2008". O número da semana no ano, com uma semana a começar em Segunda-Feira (2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISOWEEKNUM"
>ISOWEEKNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKS">
<title
>WEEKS</title>
<para
>A função WEEKS() devolve a diferença entre duas datas em semanas. O terceiro parâmetro indica o modo de cálculo: se o modo for 0, o WEEKS() devolve o maior número possível de semanas entre esses dias. Se o modo for 1, só devolve o número de semanas inteiras dentro do intervalo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEEKS(data2; data1; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro (mais antigo) valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Modo de cálculo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O WEEKS("2002-02-18"; "2002-02-26"; 0) devolve 1, porque as datas estão separadas por 1 semana e 1 dia.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O WEEKS("2002-02-19"; "2002-02-19"; 1) devolve 0, porque não existe uma semana inteira entre essas datas, a começar no primeiro dia da semana (Segunda ou Domingo, dependendo da sua configuração local)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEEKSINYEAR">
<title
>WEEKSINYEAR</title>
<para
>A função WEEKSINYEAR() devolve o número de semanas no ano indicado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEEKSINYEAR(ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ano</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O WEEKSINYEAR(2000) devolve 52</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WORKDAY">
<title
>WORKDAY</title>
<para
>A função WORKDAY() devolve a data que é um dia de trabalho a começar na data inicial.</para>
<para
>As férias deverão ser uma das seguintes: número = dias a adicionar, uma única data ou uma lista de datas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Data</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WORKDAY(data inicial; dias; férias)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data inicial</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Dias de trabalho</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Férias</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>Com o B9 igual a "01/01/2001", D3 igual a "01/03/2001", D4 igual a "01/04/2003", devolve "Sex 5 de Jan de 2001"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEAR">
<title
>YEAR</title>
<para
>A função YEAR devolve o ano de uma data. Se não for indicado nenhum parâmetro, é devolvido o ano actual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YEAR(data)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O YEAR("22/2/2002") devolve 2002</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O YEAR(2323,1285) devolve 1906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DAY"
>DAY</link
>&nbsp;</member>
<member
><link linkend="MONTH"
>MONTH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARFRAC">
<title
>YEARFRAC</title>
<para
>A função YEARFRAC() devolve o número de dias completos entre a data inicial e a final, de acordo com a base.</para>
<para
>A base deverá ser um dos seguintes valores: 0 = 30/360 EUA, 1 = Actual/actual, 2 = Actual/360, 3 = Actual/365, 4 = Europeu 30/360</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YEARFRAC(data inicial; data final; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeira data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segunda data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>intervalo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YEARS">
<title
>YEARS</title>
<para
>A função YEARS() devolve a diferença entre duas datas em anos. O terceiro parâmetro indica o modo de cálculo: se o modo for 0, o YEARS() devolve o maior número possível de anos entre esses dias. Se o modo for 1, só devolve o número de anos inteiros dentro do intervalo, a começar no 1 de Janeiro e a terminar no 31 de Dezembro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YEARS(data2; data1; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro (mais antigo) valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Segundo valor de data</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Modo de cálculo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O YEARS("2001-02-19"; "2002-02-26"; 0) devolve 1, porque existe um ano e 7 dias de diferença</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O YEARS("2002-02-19"; "2002-02-26"; 1) devolve 0, porque não existe um ano inteiro pelo meio, a começar no primeiro dia do ano</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Engineering">
<title
>Engenharia</title>

<sect3 id="BASE">
<title
>BASE</title>
<para
>A função BASE() converte um número da base-10 para um valor textual numa base entre 2 e 36.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BASE(numero;base;prec)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Comprimento Mínimo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BASE(128;8) devolve "200"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELI">
<title
>BESSELI</title>
<para
>A função BESSELI() devolve a função Bessel modificada In(x).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BESSELI(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Onde a função é avaliada</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem da função</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BESSELI(0,7; 3) devolve 0,007367374</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELJ">
<title
>BESSELJ</title>
<para
>A função BESSELJ() devolve a função Bessel.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BESSELJ(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Onde a função é avaliada</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem da função</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BESSELJ(0,89;3) devolve 0,013974004</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELK">
<title
>BESSELK</title>
<para
>A função BESSELK() devolve a função Bessel modificada, que é equivalente à função Bessel, só que avaliada com argumentos puramente imaginários.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BESSELK(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Onde a função é avaliada</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem da função</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BESSELK(3;9) devolve 397,95880</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELY"
>BESSELY</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BESSELY">
<title
>BESSELY</title>
<para
>A função BESSELK() devolve a função Bessel, também chamada de função de Weber ou função de Neumann.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BESSELY(X;N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Onde a função é avaliada</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem da função</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BESSELY(4;2) é igual a 0,215903595</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="BESSELI"
>BESSELI</link
>&nbsp;</member>
<member
><link linkend="BESSELJ"
>BESSELJ</link
>&nbsp;</member>
<member
><link linkend="BESSELK"
>BESSELK</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="BIN2DEC">
<title
>BIN2DEC</title>
<para
>A função BIN2DEC() devolve o valor formatado como um número em decimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BIN2DEC(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BIN2DEC("1010") devolve 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BIN2DEC("11111") devolve 31 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2HEX">
<title
>BIN2HEX</title>
<para
>A função BIN2HEX() devolve o valor formatado como um número em hexadecimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BIN2HEX(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BIN2HEX("1010") devolve "a"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BIN2HEX("11111") devolve "1f"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BIN2OCT">
<title
>BIN2OCT</title>
<para
>A função BIN2OCT() devolve o valor formatado como um número em octal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BIN2OCT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BIN2OCT("1010") devolve "12" </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BIN2OCT("11111") devolve "37" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPLEX">
<title
>COMPLEX</title>
<para
>O COMPLEX(real;imag) devolve um número complexo na forma x+yi.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMPLEX(real;imag)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Coeficiente real</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Coeficiente imaginário</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMPLEX(1,2;3,4) devolve "1,2+3,4i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMPLEX(0;-1) devolve "-i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONVERT">
<title
>CONVERT</title>
<para
>A função CONVERT() devolve a conversão de um sistema de medidas para outro.</para>
<para
>Unidades de massa conhecidas: g (grama), sg (partes), lbm (libra), u (massa atómica), ozm (onça), stone, ton (tonelada), grain, pweight ('pennyweight'), hweight ('hundred weight'), bron (tonelada bruta).</para>
<para
>Unidades de distância conhecidas: m (metro), in (polegada), ft (pé), mi (milha), Nmi (milha náutica), ang (Angstrom), parsec, lightyear (ano-luz).</para>
<para
>Unidades de pressão conhecidas: Pa (Pascal), atm (atmosfera), mmHg (mm de Mercúrio), psi, Torr.</para>
<para
>Unidades de força conhecidas:  N (Newton), dyn, pound (libra).</para>
<para
>Unidades de energia conhecidas: J (Joule), e (erg), c (caloria termodinâmica), cal (caloria IT), eV(electrão-volt), HPh (Cavalo-potência/hora), Wh (Watt/hora), flb ('foot-pound'), BTU.</para>
<para
>Unidades de potência conhecidas: W (Watt), cv (cavalo-potência), PS (Pferdestrke).</para>
<para
>Unidades de magnetismo conhecidas: T (Tesla), ga (Gauss).</para>
<para
>Unidades de temperatura conhecidas: C (Celsius), F (Fahrenheit), K (Kelvin).</para>
<para
>Unidades de volume suportadas: l (litro), tsp (colher de chá), tbs (colher de sopa), oz (onça líquida), chávena, pt ('pint'), qt (quartilho), gal (galão), barril, m3 (metro cúbico), mi3 (milha cúbica), Nmi3 (milha náutica cúbica), in3 (polegada cúbica), ft3 (pé cúbico), yd3 (jarda cúbica), GRT ou regton (tonelada bruta).</para>
<para
>Unidades de área conhecidas: m2 (metro quadrado), mi2 (milha quadrada), Nmi2 (milha náutica quadrada), in2 (polegada quadrada), ft2 (pé quadrado), yd2 (jarda quadrada), acre, ha (hectare).</para>
<para
>Unidades de velocidade conhecidas: m/s (metros por segundo), m/h (metros por hora), mph (milhas por hora), kn (nó).</para>
<para
>Nas unidades métricas podem ser usados os seguintes prefixos: E (exa, 1E+18), P (peta, 1E+15), T (tera, 1E+12), G (giga, 1E+09), M (mega, 1E+06), k (quilo, 1E+03), h (hecto, 1E+02), e (deca, 1E+01), d (deci, 1E-01), c (centi, 1E-02), m (mili, 1E-03), u (micro, 1E-06), n (nano, 1E-09), p (pico, 1E-12), f (fento, 1E-15), a (ato, 1E-18).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CONVERT(Número; Unidade de Origem; Unidade de Destino)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Unidade de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Unidade de destino</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CONVERT(32;"C";"F") é igual a 89,6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CONVERT(3;"lbm";"kg") é igual a 1,3608</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CONVERT(7.9;"cal";"J") é igual a 33,0757</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2BIN">
<title
>DEC2BIN</title>
<para
>A função DEC2BIN() devolve o valor formatado como um número binário.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEC2BIN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DEC2BIN(12) devolve "1100"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DEC2BIN(55) devolve "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2HEX">
<title
>DEC2HEX</title>
<para
>A função DEC2HEX() devolve o valor formatado como um número hexadecimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEC2HEX(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DEC2HEX(12) devolve "c"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DEC2HEX(55) devolve "37"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEC2OCT">
<title
>DEC2OCT</title>
<para
>A função DEC2OCT() devolve o valor formatado como um número em octal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEC2OCT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DEC2OCT(12) devolve "14"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DEC2OCT(55) devolve "67"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DELTA">
<title
>DELTA</title>
<para
>A função DELTA() devolve 1, se o X for igual ao Y; caso contrário, devolve 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DELTA(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DELTA(1,2; 3,4) devolve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DELTA(3; 3) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DELTA(1; TRUE) devolve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERF">
<title
>ERF</title>
<para
>A função ERF() devolve a função do erro. Com um único argumento, o ERF() devolve a função de erro entre 0 e esse argumento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ERF(Limite inferior; Limite superior)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Limite inferior</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Limite superior</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ERF(0,4) é igual a 0,42839236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ERFC"
>ERFC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ERFC">
<title
>ERFC</title>
<para
>A função ERFC() devolve a função complementar de erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ERFC(Limite inferior; Limite superior)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Limite inferior</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Limite superior</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ERFC(0,4) é igual a 0,57160764</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ERF"
>ERF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GESTEP">
<title
>GESTEP</title>
<para
>A função GESTEP() devolve 1, se o X for maior ou igual a Y; caso contrário, devolve 0. O Y é, por omissão, igual a 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GESTEP(x; y)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GESTEP(1,2; 3,4) devolve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GESTEP(3; 3) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GESTEP(0,4; TRUE) devolve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GESTEP(4; 3) devolve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2BIN">
<title
>HEX2BIN</title>
<para
>A função HEX2BIN() devolve o valor formatado como um número em binário.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HEX2BIN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HEX2BIN("a") devolve "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HEX2BIN("37") devolve "110111"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2DEC">
<title
>HEX2DEC</title>
<para
>A função HEX2DEC() devolve o valor formatado como um número em decimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HEX2DEC(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HEX2DEC("a") devolve 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HEX2DEC("37") devolve 55 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HEX2OCT">
<title
>HEX2OCT</title>
<para
>A função HEX2OCT() devolve o valor formatado como um número em octal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HEX2OCT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HEX2OCT("a") devolve "12" </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HEX2OCT("37") devolve "67" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMABS">
<title
>IMABS</title>
<para
>O IMABS(número complexo) devolve a norma (módulo) de um número complexo, no formato 'x+yi'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMABS(número complexo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMABS("1,2+5i") devolve 5,1419</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMABS("-i") devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMABS("12") devolve 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMAGINARY">
<title
>IMAGINARY</title>
<para
>O IMAGINARY(texto) devolve o coeficiente imaginário de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMAGINARY(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMAGINARY("1,2+3,4i") devolve 3,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMAGINARY("1,2") devolve 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMARGUMENT">
<title
>IMARGUMENT</title>
<para
>O IMARGUMENT(número complexo) devolve o argumento de um número complexo, no formato 'x+yi'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMARGUMENT(número complexo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMARGUMENT("1,2+5i") devolve 0,6072</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMARGUMENT("-i") devolve -1,57079633 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMARGUMENT("12") devolve "#DIV/0"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCONJUGATE">
<title
>IMCONJUGATE</title>
<para
>O IMCONJUGATE(número complexo) devolve o conjugado de um número complexo, no formato 'x+yi'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCONJUGATE(número complexo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCONJUGATE("1,2+5i") devolve "1,2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCONJUGATE("-i") devolve "i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCONJUGATE("12") devolve "12"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOS">
<title
>IMCOS</title>
<para
>A função IMCOS(texto) devolve o coseno de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCOS(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCOS("1+i") devolve "0,83373-0,988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCOS("12i") devolve 81 377,4 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOSH">
<title
>IMCOSH</title>
<para
>A função IMCOSH(texto) devolve o coseno hiperbólico de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>

<listitem
><para
>IMCOSH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCOSH("1+i") devolve "0,83373+0,988898i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCOSH("12i") devolve 0,84358 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCOT">
<title
>IMCOT</title>
<para
>A função IMCOT(texto) devolve a co-tangente de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCOT(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCOT("1+i") devolve "0,21762-0,86801i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSC">
<title
>IMCSC</title>
<para
>A função IMCSC(texto) devolve a co-secante de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCSC(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCSC("1+i") devolve "0,62151-0,30393i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMCSCH">
<title
>IMCSCH</title>
<para
>A função IMCSCH(texto) devolve a co-secante hiperbólica de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMCSCH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMCSCH("1+i") devolve "0,30393-0,62151i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMDIV">
<title
>IMDIV</title>
<para
>O IMDIV() devolve a divisão de vários números complexos, no formato 'x+yi'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMDIV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMDIV(1,2;"3,4+5i") devolve "0,111597-0,164114i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMDIV("12+i";"12-i") devolve "0,986207+0,16551i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMEXP">
<title
>IMEXP</title>
<para
>A função IMEXP(texto) devolve a exponencial de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMEXP(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMEXP("2-i") devolve "3,99232-6,21768i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMEXP("12i") devolve "0,843854-0,536573i" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLN">
<title
>IMLN</title>
<para
>A função IMLN(texto) devolve o logaritmo natural de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMLN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMLN("3-i") devolve "1,15129-0,321751i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMLN("12") devolve 2,48491 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG10">
<title
>IMLOG10</title>
<para
>O IMLOG10(texto) devolve o logaritmo de base 10 de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMLOG10(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMLOG10("3+4i") devolve "0,69897+0,402719i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMLOG2">
<title
>IMLOG2</title>
<para
>O IMLOG2(texto) devolve o logaritmo de base 2 de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMLOG2(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMLOG2("3+4i") devolve "2,321928+1,337804i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPOWER">
<title
>IMPOWER</title>
<para
>O IMPOWER(string) devolve um número complexo, elevado a um dado expoente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMPOWER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Potência</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMPOWER("4-i";2) devolve "15-8i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMPOWER("1,2";2) devolve 1,44 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMPRODUCT">
<title
>IMPRODUCT</title>
<para
>O IMPRODUCT() devolve o produto de vários números complexos, no formato 'x+yi'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMPRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMPRODUCT(1,2;"3,4+5i") devolve "4,08+6i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMPRODUCT(1,2;"1i") devolve "+1,2i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMREAL">
<title
>IMREAL</title>
<para
>O IMREAL(texto) devolve o coeficiente real de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMREAL(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMREAL("1,2+3,4i") devolve 1,2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMREAL("1,2i") devolve 0 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSEC">
<title
>IMSEC</title>
<para
>A função IMSEC(texto) devolve a secante de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSEC(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSEC("1+i") devolve "0,49833+0,59108i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSECH">
<title
>IMSECH</title>
<para
>A função IMSECH(texto) devolve a secante hiperbólica de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSECH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSECH("1+i") devolve "0,49833-0,59108i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSIN">
<title
>IMSIN</title>
<para
>A função IMSIN(texto) devolve o seno de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSIN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSIN("1+i") devolve "1,29846+0,634964i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSIN("1,2") devolve -0,536573 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSINH">
<title
>IMSINH</title>
<para
>A função IMSINH(texto) devolve o seno hiperbólico de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSINH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSINH("1+i") devolve "0,63496+1,29846i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSINH("1,2") devolve 1,50946 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSQRT">
<title
>IMSQRT</title>
<para
>A função IMSQRT(texto) devolve a raiz quadrada de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSQRT(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSQRT("1+i") devolve "1,09868+0,45509+i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSQRT("1.2i") devolve "0,774597+0,774597i" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUB">
<title
>IMSUB</title>
<para
>O IMSUB() devolve a diferença de vários números complexos, no formato 'x+yi'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSUB(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSUB(1,2;"3,4+5i") devolve "-2,2-5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSUB(1,2;"1i") devolve "1,2-i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMSUM">
<title
>IMSUM</title>
<para
>O IMSUM() devolve a soma de vários números complexos, no formato 'x+yi'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMSUM(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Número complexo</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSUM(1,2;"3,4+5i") devolve "4,6+5i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMSUM(1,2;"1i") devolve "1,2+i"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTAN">
<title
>IMTAN</title>
<para
>A função IMTAN(texto) devolve a tangente de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMTAN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMTAN("1+i") devolve "0,27175+1,08392i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMTAN("1,2") devolve 2,57215</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IMTANH">
<title
>IMTANH</title>
<para
>A função IMTANH(texto) devolve a tangente hiperbólica de um número complexo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IMTANH(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número complexo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMTANH("1+i") devolve "1,08392+0,27175i"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IMTANH("1,2") devolve 0,83365</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2BIN">
<title
>OCT2BIN</title>
<para
>A função OCT2BIN() devolve o valor formatado como um número em binário.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OCT2BIN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O OCT2BIN("12") devolve "1010"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O OCT2BIN("55") devolve "101101"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2DEC">
<title
>OCT2DEC</title>
<para
>A função OCT2DEC() devolve o valor formatado como um número em decimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OCT2DEC(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O OCT2DEC("12") devolve 10 </para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O OCT2DEC("55") devolve 45 </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OCT2HEX">
<title
>OCT2HEX</title>
<para
>A função OCT2HEX() devolve o valor formatado como um número em hexadecimal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>

<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OCT2HEX(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor a converter</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O comprimento mínimo do resultado</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O OCT2HEX("12") devolve "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O OCT2HEX("55") devolve "2D"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Financial">
<title
>Financeiro</title>

<sect3 id="ACCRINT">
<title
>ACCRINT</title>
<para
>A função ACCRINT devolve o juro acumulado para algo que paga um juro periódico. As frequências permitidas são 1 - anual, 2 - semi-anual ou 4 - trimestral. A base é o tipo de contagem de dias que pretende usar: 0: EUA 30/360 (por omissão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europa 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACCRINT(emissão; primeiro juro; acordo; taxa; par; frequência; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data do acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Primeiro juro</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa anual do seguro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor do par</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de pagamentos por ano</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem dos dias</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ACCRINT("28/2/2001"; "31/8/2001"; "1/5/2001"; 0,1; 1000; 2; 0) devolve 16,944</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINTM"
>ACCRINTM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACCRINTM">
<title
>ACCRINTM</title>
<para
>A função ACCRINT devolve o juro acumulado para algo que paga os juros numa determinada data de maturidade. As frequências permitidas são 1 - anual, 2 - semi-anual ou 4 - trimestral. A base é o tipo de contagem de dias que pretende usar: 0: EUA 30/360 (por omissão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europa 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACCRINTM(emissão; acordo; taxa; par; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Data do acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa anual do seguro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor do par</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem dos dias</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ACCRINTM("28/2/2001"; "31/8/2001"; 0,1; 100) devolve 5,0278</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ACCRINT"
>ACCRINT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORDEGRC">
<title
>AMORDEGRC</title>
<para
>A função AMORDEGRC calcula o valor de amortização para o sistema de contabilidade Francês, usando uma desvalorização decrescente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AMORDEGRC( Custo; dataCompra; data fim primeiro período; salvado; período; taxa; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vp</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vf</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O AMORDEGRC( 1000; "2006-02-01"; "2006-12-31"; 10; 0; 0,1; 1 ) devolve 228</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="AMORLINC"
>AMORLINC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AMORLINC">
<title
>AMORLINC</title>
<para
>A função AMORLINC calcula o valor da amortização para o sistema contabilístico Francês, usando uma desvalorização linear.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AMORLINC( Custo; data compra; data fim primeiro período; salvado; período; taxa; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Vp</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vf</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O AMORLINC( 1000; "2004-02-01"; "2004-12-31"; 10; 0; 0,1; 1 ) devolve 91,256831</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="AMORDEGRC"
>AMORDEGRC</link
>&nbsp;</member>
<member
><link linkend="DB"
>DB</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPOUND">
<title
>COMPOUND</title>
<para
>A função COMPOUND() devolve o valor de um investimento, dado o valor, a taxa de juro nominal, a frequência de composição e o tempo. Por exemplo: 5 000€, a uma taxa composta de 12% trimestral em 5 anos, tornar-se-ão compound(5000;0,12;4;5) ou 9030,56 €.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMPOUND(inicial;taxa;períodos;períodos_por_ano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Principal</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos por ano</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Anos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMPOUND(5000;0,12;4;5) é igual a 9030,56</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONTINUOUS">
<title
>CONTINUOUS</title>
<para
>A função CONTINUOUS() calcula o retorno da taxa contínua composta, dado o valor principal, a taxa nominal e o tempo em anos. Por exemplo: 1000 €, a render 10% em 1 ano, tornar-se-ão CONTINUOUS(1000;0,1;1), ou seja, 1105,17 €.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CONTINUOUS(principal;taxa;anos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Principal</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Anos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CONTINUOUS(1000;0,1;1) é igual a 1105,17</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUPNUM">
<title
>COUPNUM</title>
<para
>A função COUPNUM devolve o número de promissórias a pagar entre o acordo e a maturidade. A base é o tipo de contagem de dias que pretende usar: 0: EUA 30/360 (por omissão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europa 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUPNUM(acordo; maturidade; frequência; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem dos dias</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COUPNUM("28/2/2001"; "31/8/2001"; 2; 0) devolve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMIPMT">
<title
>CUMIPMT</title>
<para
>Calcula o pagamento de empréstimo acumulado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CUMIPMT(taxa, períodos, valor, início, fim, tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>valor</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>início</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>fim</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CUMIPMT( 0,06/12; 5*12; 100000; 5; 12; 0 ) é igual a -3562,187023</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="CUMPRINC"
>CUMPRINC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUMPRINC">
<title
>CUMPRINC</title>
<para
>Calcula o pagamento principal acumulado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CUMPRINC(taxa, períodos, valor, início, fim, tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>valor</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>início</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>fim</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CUMPRINC( 0,06/12; 5*12; 100000; 5; 12; 0 ) é igual a -11904,054201</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="CUMIPMT"
>CUMIPMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DB">
<title
>DB</title>
<para
>A função DB() irá calcular a desvalorização de um bem por um dado período usando o método de balanceamento fixo descendente. O mês é opcional e, se for omitido, assume-se como igual a 12.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DB(custo; valor de salvação; vida; período [;mês])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor de salvação</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Mês</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DB(8000;400;6;3) é igual a 1158,40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DB(8000;400;6;3;2) é igual a 1783,41</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DDB">
<title
>DDB</title>
<para
>A função DDB() irá calcular a desvalorização de um bem por um dado período, usando o método de declínio aritmético. O factor é opcional e, se for omitido, assume-se como igual a 2. Todos os parâmetros devem ser maiores que zero.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DDB(custo; valor de salvação; vida; período [;factor])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor de salvação</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Factor</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DDB(75000;1;60;12;2) devolve 1721,81</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DISC">
<title
>DISC</title>
<para
>A função DISC devolve a taxa de desconto. A base é o tipo de contagem de dias que pretende usar: 0: EUA 30/360 (por omissão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europa 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DISC(acordo; maturidade; par; retenção [; base ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Preço pelo valor de face de 100€</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Redenção</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem dos dias</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DISC("28/2/2001"; "31/8/2001"; 12; 14) devolve 0,2841</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="YEARFRAC"
>YEARFRAC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARDE">
<title
>DOLLARDE</title>
<para
>A função DOLLARDE() devolve um preço expresso como um número decimal. O preço é o número a ser convertido e a fracção é o denominador da fracção propriamente dita.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DOLLARDE(preço; fracção)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Preço Fraccionário</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Fracção</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DOLLARDE(1,02; 16) - igual a 1 e 2/16 - devolve 1,125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARFR"
>DOLLARFR</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLARFR">
<title
>DOLLARFR</title>
<para
>A função DOLLARFR() devolve um preço expresso como uma fracção. O preço é o número a ser convertido e a fracção é o denominador da fracção em si</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DOLLARFR(preço fraccionário; fracção)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Preço Decimal</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Fracção</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DOLLARFR(1,125; 16) devolve 1,02. (1 + 2/16)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DOLLARDE"
>DOLLARDE</link
>&nbsp;</member>
<member
><link linkend="TRUNC"
>TRUNC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION">
<title
>DURATION</title>
<para
>Devolve o número de períodos necessários por um investimento para reter um valor pretendido.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DURATION(taxa; vp; vf)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor actual (PV)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (FV)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DURATION(0,1; 1000; 2000) devolve 7,27</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DURATION_ADD">
<title
>DURATION_ADD</title>
<para
>Devolve a duração de Macauley de um seguro de prémio fixo em anos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DURATION_ADD(Acordo; Maturidade; Cupão; Receita; Frequência; Base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Cupão</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Receita</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DURATION_ADD( "1998-01-01"; "2006-01-01"; 0,08; 0,09; 2; 1 ) devolve 5,9937749555</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MDURATION"
>MDURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EFFECT">
<title
>EFFECT</title>
<para
>A função EFFECT() calcula a taxa efectiva para uma dada taxa de juro (taxa anual ou APR). Por exemplo: 8% de juros, compostos mensalmente, dão uma taxa efectiva de EFFECT(0,08;12) ou 8,3%.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EFFECT(nominal;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa de juro nominal</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EFFECT(0,08;12) é igual a 0,083</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EFFECTIVE"
>EFFECTIVE</link
>&nbsp;</member>
<member
><link linkend="NOMINAL"
>NOMINAL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="EFFECTIVE">
<title
>EFFECTIVE</title>
<para
>A função EFFECTIVE() calcula a taxa efectiva para uma dada taxa de juro (taxa anual ou APR). É a mesma função que a EFFECT.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EFFECTIVE(nominal;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa de juro nominal</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EURO">
<title
>EURO</title>
<para
>A função EURO() converte um Euro para a moeda nacional de um determinado país da união monetária Europeia. A moeda é uma das seguintes: ATS (Áustria), BEF (Bélgica), DEM (Alemanha), ESP (Espanha), EUR (Euro), FIM (Finlândia), FRF (França), GRD (Grécia), IEP (Irlanda), ITL (Itália), LUF (Luxemburgo), NLG (Holanda) ou PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EURO(moeda)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Monetário</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>EURO("PTE") é igual a 200,482</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EUROCONVERT"
>EUROCONVERT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EUROCONVERT">
<title
>EUROCONVERT</title>
<para
>A função EUROCONVERT() converte um número de uma moeda nacional para outra moeda da União Europeia, usando o Euro como intermediário. A moeda é uma das seguintes: ATS (Áustria), BEF (Bélgica), DEM (Alemanha), ESP (Espanha), EUR (Euro), FIM (Finlândia), FRF (França), GRD (Grécia), IEP (Irlanda), ITL (Itália), LUF (Luxemburgo), NLG (Holanda) ou PTE (Portugal).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EUROCONVERT(número; moeda origem; moeda destino)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Moeda de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Moeda de destino</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EUROCONVERT(1; "EUR"; "DEM") é igual a 1,95583</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EURO"
>EURO</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV">
<title
>FV</title>
<para
>A função FV() devolve o valor futuro de um investimento, dada a taxa de juro e o tempo passado. Se tem 1 000 € numa conta a render 8% de taxa, ao fim de dois anos terá FV(1000;0,08;2) ou 1 166,40 €.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FV(valor actual;taxa;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor actual</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FV(1000;0,08;2) é igual a 1166,40</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FV_ANNUITY">
<title
>FV_ANNUITY</title>
<para
>A função FV_ANNUITY() devolve o valor futuro de uma sequência de pagamentos, dado o valor do pagamento, a taxa de juro e o número de períodos. Por exemplo, se você receber 500 contos por ano, em 20 anos, e o investir a 8%, o total ao fim de 20 anos será FV_annuity (500;0,08;20), ou seja, 22 880,98 contos. Esta função assume que os pagamentos são feitos ao fim de cada período.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FV_ANNUITY(quantia;taxa;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Pagamento por período</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FV_ANNUITY(1000;0,05;5) é igual a 5525,63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTRATE">
<title
>INTRATE</title>
<para
>A função INTRATE devolve a taxa de juro para algo que é investido por inteiro. A base é o tipo de contagem de dias que pretende usar: 0: EUA 30/360 (por omissão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europa 30/365.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INTRATE(acordo; maturidade; investimento; redenção; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Investimento</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Redenção</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base de contagem dos dias</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INTRATE("28/2/2001"; "31/8/2001"; 1000000; 2000000;1) devolve 1,98</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IPMT">
<title
>IPMT</title>
<para
>O IPMT calcula o valor de um pagamento de uma anuidade para os juros.</para>
<para
>A taxa corresponde à taxa de juro periódica.</para>
<para
>O período é o período de amortização. É igual a 1 para o primeiro e NPER para o último período.</para>
<para
>O NPER é o número total de períodos durante os quais a anuidade é paga.</para>
<para
>O PV é o valor actual na sequência de pagamentos.</para>
<para
>O FV (opcional) é o valor futuro (desejado). Por omissão: 0.</para>
<para
>O tipo (opcional) define a data de pagamento. É igual a 1, para o início do período, e a 0 (por omissão), para o pagamento no fim de um período.</para>
<para
>O exemplo demonstra o juro a pagar no último ano de um empréstimo de três anos. A taxa de juro é igual a 10 por cento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IPMT(Taxa; Período; NPer; VP; VF; Tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores presentes</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (opcional)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IPMT(0,1;3;3;8000) é igual a -292,45</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IRR">
<title
>IRR</title>
<para
>A função IRR calcula a taxa interna de retorno para uma série não-periódica de fluxos monetários.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IRR( Valores[; Adivinhar = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Adivinhar</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="XIRR"
>XIRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISPMT">
<title
>ISPMT</title>
<para
>Calcula o juro pago num dado período de investimento.</para>
<para
>A taxa corresponde à taxa de juro periódica.</para>
<para
>O período corresponde ao período de amortização. É igual a 1 para o primeiro e a NPer para o último período.</para>
<para
>O NPer é o número total de períodos durante os quais a anuidade é paga.</para>
<para
>O PV é o valor actual na sequência de pagamentos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISPMT(Taxa; Período; NPer; VP)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valores presentes (PV)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISPMT(0,1; 1; 3; 8000000) é igual a -533333</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEVEL_COUPON">
<title
>LEVEL_COUPON</title>
<para
>A função LEVEL_COUPON() calcula o valor duma promissória 'level-coupon'. Por exemplo: se a taxa de juro é 10%, uma promissória de 1000 €, com cupões semi-anuais, a uma taxa de 13% que dure 4 anos, vale LEVEL_COUPON(1000;0,13;2;4;0,1) ou 1096,95 €.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEVEL_COUPON(valor de face;taxa do cupão;cupões por ano;anos;taxa de mercado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de face</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa da promissória</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Promissórias por ano</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Anos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juro do mercado</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LEVEL_COUPON(1000;0,13;2;4;0,1) é igual a 1096,95</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDURATION">
<title
>MDURATION</title>
<para
>A função MDURATION() irá calcular a duração de Macauley modificada para um seguro de prémio fixo em anos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MDURATION( Acordo; Maturidade; Cupão; Receita; Frequência; [ Base=0 ])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Cupão</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Receita</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MDURATION("2004-02-01"; "2004-05-31"; 0,08; 0,09; 2; 0) devolve 0,316321106</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DURATION"
>DURATION</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIRR">
<title
>MIRR</title>
<para
>A função MIRR() irá calcular a taxa interna modificada de retorno (IRR) de uma série de investimentos periódicos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MIRR(valores; investimento; reinvestimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Investimento</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Reinvestimento</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MIRR({100;200;-50;300;-200}, 5%, 6%) é igual a 34,2823387842%</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOMINAL">
<title
>NOMINAL</title>
<para
>A função NOMINAL() calcula a taxa de juro nominal, para uma taxa de juro efectiva, composta em certos intervalos. Por exemplo: para ganhar 8% numa conta composta mensalmente, é necessário um retorno de NOMINAL(0,08;12) ou 7,72%.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NOMINAL(efectivo;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa de juro efectiva</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NOMINAL(0,08;12) é igual a 0,0772</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EFFECT"
>EFFECT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPER">
<title
>NPER</title>
<para
>Devolve o número de períodos num investimento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NPER(taxa;pagamento;vp;vf;tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Pagamento</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor actual (PV)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (FV - opcional)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NPER(0,1; -100; 1000) é igual a 11</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NPER(0,06; 0; -10000; 20000 ;0) devolve 11,906</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NPV">
<title
>NPV</title>
<para
>O valor presente líquido (NPV) para uma série de fluxos monetários periódicos.</para>
<para
>Calcula o valor líquido actual para um fluxo periódico de receita com a taxa de desconto. Os valores deverão ser positivos se forem recebidos como receitas e negativos se forem despesa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NPV(Taxa; Valores)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NPV(100%;4;5;7) = 4,125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLPRICE">
<title
>ODDLPRICE</title>
<para
>A função ODDLPRICE calcula o valor do seguro por cada 100 unidades monetárias do valor de face. O seguro tem uma última data de juro irregular.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ODDLPRICE( Acordo; Maturidade; Último; Taxa; Receita Anual; Retenção; Frequência [; Base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Último</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Receita Anual</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Redenção</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ODDLPRICE(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;5%;100;2) devolve 90,991042345</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODDLYIELD">
<title
>ODDLYIELD</title>
<para
>A função ODDLYIELD calcula a receita do seguro que tem uma última data de juro irregular.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ODDLYIELD( Acordo; Maturidade; Último; Taxa; Preço; Retenção; Frequência [; Base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Último</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Preço</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Redenção</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Frequência</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ODDLYIELD(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);3%;91;100;2) devolve 4,997775351</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ODDLPRICE"
>ODDLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PMT">
<title
>PMT</title>
<para
>O PMT devolve o valor do pagamento de um empréstimo, baseado numa taxa de juro constante e pagamentos constantes (cada pagamento tem o mesmo valor).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PMT(taxa; períodos ; vp [; vf = 0 [; tipo = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos (NPer)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor actual (PV)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (FV - opcional)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PMT(0,1; 4; 10000) é igual a -3154,71</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PPMT"
>PPMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PPMT">
<title
>PPMT</title>
<para
>O PPMT calcula o valor de um pagamento de uma anuidade para o principal.</para>
<para
>A taxa corresponde à taxa de juro periódica.</para>
<para
>O período é o período de amortização. É igual a 1 para o primeiro e NPER para o último período.</para>
<para
>O NPER é o número total de períodos durante os quais a anuidade é paga.</para>
<para
>O PV é o valor actual na sequência de pagamentos.</para>
<para
>O FV (opcional) é o valor futuro (desejado). Por omissão: 0.</para>
<para
>O tipo (opcional) define a data de pagamento. É igual a 1, para o início do período, e a 0 (por omissão), para o pagamento no fim de um período.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PPMT(Taxa; Período; Núm Períodos; VP [; VF = 9 [; Tipo = 0 ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor actual</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro (opcional)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PPMT(0,0875;1;36;5000;8000;1) é igual a -18,48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IPMT"
>IPMT</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRICEMAT">
<title
>PRICEMAT</title>
<para
>O PRICEMAT calcula o preço por cada 100 unidades monetárias do valor de face do seguro que paga o juro na data de maturidade.</para>
<para
>Método de cálculo da base</para>
<para
>0 = Método EUA, 12 meses, com 30 dias em cada mês</para>
<para
>1 = Número real de dias no ano, número real de dias nos meses </para>
<para
>2 = 360 dias num ano, cálculo real dos dias nos meses</para>
<para
>4 = 365 dias num ano, número real de dias nos meses</para>
<para
>5 Método Europeu, 12 meses, com 30 dias em cada mês</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PRICEMAT(acordo final; maturidade; acordo; taxa; receita [; base = 0 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Receita</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PRICEMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990;1;1);6%;5%) devolve 103,819218241</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV">
<title
>PV</title>
<para
>A função PV() devolve o valor actual ou presente dum investimento -- o valor actual de uma soma de dinheiro no futuro, dada a taxa de juro ou inflação. Por exemplo, se precisar de 1166,40 € para algo, e quiser comprá-lo em dois anos, enquanto ganha 8% de juros, precisa de começar com PV(1166,4;0,08;2), ou seja, 1000 €.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PV(valor futuro;taxa;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor futuro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PV(1166,4;0,08;2) é igual a 1000</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PV_ANNUITY">
<title
>PV_ANNUITY</title>
<para
>A função PV_ANNUITY() devolve o valor actual de uma anuidade ou sequência de pagamentos. Por exemplo, um bilhete de lotaria de "um milhão de contos" que paga 50 000 contos por 20 anos, com uma taxa de juro de 5%, vale na realidade PV_ANNUITY(50000;0,05;20), ou seja, 623 111 contos. Esta função assume que os pagamentos são feitos no fim de cada período.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PV_ANNUITY(quantidade;taxa;períodos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Pagamento por período</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Períodos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PV_ANNUITY(1000;0,05;5) é igual a 4329,48</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RATE">
<title
>RATE</title>
<para
>A função RATE() calcula a taxa de juro fixa por período de um investimento com pagamentos regulares.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RATE(nper;pagamento;vp;vf;tipo;adivinhar)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Período do pagamento</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Pagamentos regulares</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor actual</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor futuro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tipo</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Adivinhar</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RATE(4*12;-200;8000) devolve 0,007701472</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RECEIVED">
<title
>RECEIVED</title>
<para
>A função RECEIVED devolve a quantidade recebida, até à data de maturidade, para o seguro de um investimento. A base é o tipo de contagem de dias que quer usar: 0: EUA 30/360 (por omissão), 1: dias reais, 2: dias reais/360, 3: dias reais/365 ou 4: Europa 30/365. A data de acordo deve ser anterior à data de maturidade.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RECEIVED(acordo; maturidade; investimento; desconto; base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Investimento</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RECEIVED("28/2/2001"; "31/8/2001"; 1000; 0,05; 0) devolve 1 025,787</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RRI">
<title
>RRI</title>
<para
>A função RRI calcula a taxa de juro resultante do lucro (retorno) de um investimento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RRI( P; VP; VF)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>P</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Vp</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vf</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RRI(1;100;200) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FV"
>FV</link
>&nbsp;</member>
<member
><link linkend="NPER"
>NPER</link
>&nbsp;</member>
<member
><link linkend="PMT"
>PMT</link
>&nbsp;</member>
<member
><link linkend="PV"
>PV</link
>&nbsp;</member>
<member
><link linkend="RATE"
>RATE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLN">
<title
>SLN</title>
<para
>A função SLN() irá determinar a desvalorização linear de um bem, ao longo de um único período. O custo é o valor que você paga por esse bem. O valor de salvação é o valor do bem ao fim do período. A vida é o número de períodos, ao longo dos quais o bem se vai desvalorizando. O SLN divide o custo igualmente pela vida do bem.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLN(custo; valor de salvação; vida)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor de salvação</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SLN(10000;700;10) é igual a 930</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SYD"
>SYD</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SYD">
<title
>SYD</title>
<para
>A função SYD() irá calcular a desvalorização da soma-dos-anos, para um dado bem, baseando-se no seu custo, valor de salvação, vida antecipada e um período em particular. Este método acelera a taxa da desvalorização, de modo a que ocorram mais despesas da desvalorização nos primeiros períodos do que nos últimos. O custo da desvalorização é o custo actual menos o valor de salvação. A vida útil é o número de períodos (normalmente em anos), ao longo dos quais o bem se vai desvalorizando.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SYD(custo; valor de salvação; vida; período)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Custo</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor de salvação</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Vida</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Período</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SYD(5000; 200; 5; 2) é igual a 1280</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SLN"
>SLN</link
>&nbsp;</member>
<member
><link linkend="DDB"
>DDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLEQ">
<title
>TBILLEQ</title>
<para
>A função TBILLEQ devolve a promissória para um título do tesouro. A data de maturidade deve ser posterior à data de acordo, dentro de uma intervalo de 365 dias.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TBILLEQ(acordo; maturidade; desconto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TBILLEQ("28/2/2001"; "31/8/2001"; 0,1) devolve 0,1068</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLPRICE">
<title
>TBILLPRICE</title>
<para
>A função TBILLPRICE devolve o preço, por cada valor de 100€, para um título do tesouro. A data de maturidade deve ser posterior à data do acordo, dentro de um intervalo de 365 dias. A taxa de desconto deverá ser positiva.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TBILLPRICE(acordo; maturidade; desconto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TBILLPRICE("28/2/2001"; "31/8/2001"; 0,05) devolve 97,4444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLYIELD"
>TBILLYIELD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TBILLYIELD">
<title
>TBILLYIELD</title>
<para
>A função TBILLYIELD devolve a receita de um título do tesouro. A data de maturidade deve ser posterior à data do acordo, dentro de um intervalo de 365 dias. O preço deverá ser positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TBILLYIELD(acordo; maturidade; preço)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Preço pelo valor de face de 100€</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TBILLYIELD("28/2/2001"; "31/8/2001"; 600) devolve -1,63</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TBILLEQ"
>TBILLEQ</link
>&nbsp;</member>
<member
><link linkend="TBILLPRICE"
>TBILLPRICE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VDB">
<title
>VDB</title>
<para
>O VDB calcula a permissão de desvalorização de um bem com um determinado valor inicial, um tempo de vida útil esperado e um valor final de salvação para um dado período, usando o método de balanço em declinação com taxa variável.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VDB(custo; salvado; vida; período-início; período-fim; [; factor-desvalorização = 2 [; mudar = falso ]] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Preço</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Redenção</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VDB(10000;600;10;0;0,875;1,5) devolve 1312,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XIRR">
<title
>XIRR</title>
<para
>A função XIRR calcula a taxa interna de retorno para uma série não-periódica de fluxos monetários.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>XIRR( Valores; Data[; Adivinhar = 0.1 ] )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Datas</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Adivinhar</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O XIRR(B1:B4;C1:C4) Supondo que B1:B4 contém -20000, 4000, 12000, 8000 enquanto C1:C4 contém "=DATE(2000;1;1)", "=DATE(2000;6;1)", "=DATE(2000;12;30)", "=DATE(2001;3;1)" devolve 0.2115964</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IRR"
>IRR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XNPV">
<title
>XNPV</title>
<para
>A função XNPV calcula o valor presente líquido para uma série de fluxos monetários.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>XNPV( Taxa; Valores; Datas )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Taxa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Datas</seg
><seg
>Data</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O XNPV(5%;B1:B4;C1:C4), supondo que B1:B4 contém -20000, 4000, 12000, 8000 enquanto C1:C4 contém "=DATE(2000;1;1)", "=DATE(2000;6;1)", "=DATE(2000;12;30)", "=DATE(2001;3;1)", devolve 2907,83187</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="NPV"
>NPV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDDISC">
<title
>YIELDDISC</title>
<para
>O YIELDDISC calcula a receita de um seguro descontado por cada 100 unidades monetárias do valor de face.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YIELDDISC(acordo; maturidade; preço, retenção, base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Preço</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Redenção</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O YIELDDISC(DATE(1990;6;1);DATE(1990;12;31);941,66667;1000) devolve 0,106194684</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="YIELDMAT">
<title
>YIELDMAT</title>
<para
>A função YIELDMAT calcula a receita do seguro que paga os juros na data de maturidade.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>YIELDMAT( Acordo Actual; Maturidade; Acordo; Taxa; Preço; Base )</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Maturidade</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Acordo</seg
><seg
>Data</seg
></seglistitem>
<seglistitem
><seg
>Taxa de desconto</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Preço</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O YIELDMAT(DATE(1990;6;1);DATE(1995;12;31);DATE(1990; 1; 1); 6%;103,819218241) devolve 0,050000000</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="YIELDDISC"
>YIELDDISC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZERO_COUPON">
<title
>ZERO_COUPON</title>
<para
>A função ZERO_COUPON() calcula o valor duma promissória 'zero-coupon' (desconto puro). Por exemplo: se a taxa de juro é 10%, uma promissória de 1000 €, que dure 20 anos, vale ZERO_COUPON(1000,0,1;20) ou 148,64 €.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ZERO_COUPON(valor de face;taxa;anos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de face</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Taxa de juro</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Anos</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ZERO_COUPON(1000;0,1;20) é igual a 148,64</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2
><sect2 id="Information">
<title
>Informação</title>

<sect3 id="ERRORTYPE">
<title
>ERRORTYPE</title>
<para
>A função ERRORTYPE() converte um erro para um número. Se o valor não for um erro, é devolvido um erro. Caso contrário, é devolvido um código numérico. Os códigos de erro estão modelados no Excel.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ERRORTYPE(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Erro</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ERRORTYPE(NA()) devolve 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ERRORTYPE(0) devolve um erro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FILENAME">
<title
>FILENAME</title>
<para
>Devolve o nome do ficheiro actual. Se o documento actual não estiver gravado, é devolvida uma cadeia de caracteres vazia.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FILENAME()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FORMULA">
<title
>FORMULA</title>
<para
>A função FORMULA() devolve a fórmula de uma célula como texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FORMULA(A1) devolve "=SUM(1+2)" se a célula A1 tiver uma fórmula como essa.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INFO">
<title
>INFO</title>
<para
>O INFO() devolve informações sobre o ambiente de operação actual. O parâmetro do tipo define o tipo de informação que deseja devolver. Pode ser um dos seguintes: o "directory" devolve a localização da pasta actual, o "numfile" devolve o número de documentos activos e o "release" devolve a versão do &sheets; em texto, o "recalc" devolve o modo de novo cálculo actual: "Automatic" ou "Manual", o "system" devolve o nome do ambiente de operação e o "osversion" devolve o sistema operativo actual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INFO(tipo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo de informação</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISBLANK">
<title
>ISBLANK</title>
<para
>A função ISBLANK() devolve Verdadeiro, se o parâmetro estiver em branco. Caso contrário, devolve um valor falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISBLANK(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISBLANK(A1) devolve Verdadeiro se a célula A1 estiver vazia</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISBLANK(A1) devolve Verdadeiro se a célula A1 tiver um valor</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISDATE">
<title
>ISDATE</title>
<para
>A função ISDATE() devolve Verdadeiro, se o parâmetro for uma data; caso contrário, devolve Falso</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISDATE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISDATE("2000-2-2") devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISDATE("hello") devolve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERR">
<title
>ISERR</title>
<para
>A função ISERR() devolve Verdadeiro, se o parâmetro for um erro que não o N/D; caso contrário, devolve Falso. Use o ISERROR() se quiser incluir também o erro N/D.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISERR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISERROR">
<title
>ISERROR</title>
<para
>A função ISERROR() devolve Verdadeiro se o parâmetro é um erro de qualquer tipo. Caso contrário, devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISERROR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISEVEN">
<title
>ISEVEN</title>
<para
>A função ISEVEN() devolve Verdadeiro, se o número for par; caso contrário, devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISEVEN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISEVEN(12) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISEVEN(-7) devolve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISFORMULA">
<title
>ISFORMULA</title>
<para
>A função ISFORMULA() devolve Verdadeiro, se a célula referenciada tiver uma fórmula. Caso contrário, devolve um valor falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISFORMULA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISLOGICAL">
<title
>ISLOGICAL</title>
<para
>A função ISLOGICAL() devolve Verdadeiro, se o parâmetro for um valor booleano. Caso contrário, devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISLOGICAL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISLOGICAL(A1
>A2) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISLOGICAL(12) devolve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNA">
<title
>ISNA</title>
<para
>A função ISNA() devolve Verdadeiro se o parâmetro for um erro N/D. Caso contrário, devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNA(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNONTEXT">
<title
>ISNONTEXT</title>
<para
>A função ISNONTEXT() devolve Verdadeiro, se o parâmetro não for uma sequência de texto. Caso contrário, devolve Falso. É a mesma que o ISNOTTEXT.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNONTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNONTEXT(12) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNONTEXT("hello") devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNOTTEXT"
>ISNOTTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNOTTEXT">
<title
>ISNOTTEXT</title>
<para
>A função ISNOTTEXT() devolve Verdadeiro, se o parâmetro não for uma sequência de texto. Caso contrário, devolve Falso. É a mesma função que a ISNONTEXT.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNOTTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNOTTEXT(12) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNOTTEXT("hello") devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNONTEXT"
>ISNONTEXT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUM">
<title
>ISNUM</title>
<para
>A função ISNUM() devolve Verdadeiro, se o parâmetro for um valor numérico; caso contrário, devolve Falso. É a mesma que a ISNUMBER.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNUM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNUM(12) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNUM(hello) devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNUMBER"
>ISNUMBER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISNUMBER">
<title
>ISNUMBER</title>
<para
>A função ISNUMBER() devolve Verdadeiro, se o parâmetro é um valor numérico; caso contrário, devolve Falso. É a mesma função que a ISNUM.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISNUMBER(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNUMBER(12) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISNUMBER(hello) devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNUM"
>ISNUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISODD">
<title
>ISODD</title>
<para
>A função ISODD() devolve Verdadeiro, se o número for ímpar; caso contrário, devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISODD(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISODD(12) devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISODD(-7) devolve Verdadeiro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISREF">
<title
>ISREF</title>
<para
>A função ISREF() devolve Verdadeiro, se o parâmetro for uma referência; caso contrário, devolve Falso</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISREF(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISREF(A12) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISREF("hello") devolve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTEXT">
<title
>ISTEXT</title>
<para
>A função ISTEXT() devolve Verdadeiro, se o parâmetro for uma sequência de texto; caso contrário, devolve Falso</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISTEXT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISTEXT(12) devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISTEXT("hello") devolve Verdadeiro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ISTIME">
<title
>ISTIME</title>
<para
>A função ISTIME() devolve Verdadeiro, se o parâmetro é um valor de uma hora; caso contrário, devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ISTIME(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISTIME("12:05") devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ISTIME("hello") devolve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="N">
<title
>N</title>
<para
>A função N() converte um valor para um número. Se o valor é ou refere-se a um número, esta função devolve o número. Se o valor for verdadeiro, esta função devolve 1. Se o valor for uma data, esta função devolve o número de série dessa data. Tudo o resto fará a função devolver 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>N(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O N(3,14) devolve 3,14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O N("7") devolve 0 (porque o "7" é texto)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NA">
<title
>NA</title>
<para
>A função NA() devolve o valor do erro de constante, N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Erro</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NA()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ISNA"
>ISNA</link
>&nbsp;</member>
<member
><link linkend="ISERR"
>ISERR</link
>&nbsp;</member>
<member
><link linkend="ISERROR"
>ISERROR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TYPE">
<title
>TYPE</title>
<para
>A função TYPE() devolve 1 se o valor é um número, 2 se for texto, 4 se o valor for lógico, 16 se for um valor de erro ou 64 se o valor for um vector. Se a célula que o valor representa tiver uma fórmula, o utilizador irá obter o valor do seu resultado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>

<listitem
><para
>TYPE(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TYPE(A1) devolve 2, se a célula A1 contiver "Texto"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TYPE(-7) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TYPE (A2) devolve 1, se a célula A2 contiver "=CURRENTDATE()"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Logical">
<title
>Lógico</title>

<sect3 id="AND">
<title
>AND</title>
<para
>A função AND() devolve Verdadeiro se todos os valores forem também verdadeiros. Caso contrário, devolve Falso (a menos que qualquer dos valores sejam errados - nesse caso, devolve um erro).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AND(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O AND(verdadeiro;verdadeiro;verdadeiro) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O AND(verdadeiro;falso) devolve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FALSE">
<title
>FALSE</title>
<para
>A função FALSE() devolve o valor booleano FALSO.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FALSE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FALSE() devolve FALSE</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IF">
<title
>IF</title>
<para
>A função IF() é uma função condicional. Esta função devolve o segundo parâmetro se a condição for Verdadeira. Caso contrário, devolve o terceiro parâmetro (que é falso, por omissão).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IF(condição;se_verdadeiro;se_falso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Condição</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Se verdadeiro</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem>
<seglistitem
><seg
>Se falso</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A1=4;A2=6; o IF(A1
>A2;5;3) devolve 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFERROR">
<title
>IFERROR</title>
<para
>Devolve X a menos que seja um erro; nesse caso, devolve um valor alternativo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IFERROR(Qualquer X;Qualquer Alternativa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer X</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem>
<seglistitem
><seg
>Qualquer Alternativa</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IFERROR(A1;A2) devolve o conteúdo de A1, caso esse conteúdo não seja inválido; caso contrário, devolverá o conteúdo de A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="IFNA">
<title
>IFNA</title>
<para
>Devolve X a menos que seja um N/D; nesse caso, devolve um valor alternativo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>IFNA(Qualquer X;Qualquer Alternativa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Qualquer X</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem>
<seglistitem
><seg
>Qualquer Alternativa</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O IFNA(A1;A2) devolve o conteúdo de A1, caso esse conteúdo não seja um valor de erro #N/D; caso contrário, é devolvido o conteúdo de A2.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NAND">
<title
>NAND</title>
<para
>A função NAND() devolve Verdadeiro, se pelo menos um valor não for verdadeiro; caso contrário, devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NAND(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NAND(verdadeiro;falso;falso) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NAND(verdadeiro;verdadeiro) devolve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOR">
<title
>NOR</title>
<para
>A função NOR() devolve Verdadeiro, se todos os valores dados forem lógicos e falsos; caso contrário, devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NOR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NOR(verdadeiro;falso;falso) devolve falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NOR(falso;falso) devolve Verdadeiro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NOT">
<title
>NOT</title>
<para
>A função NOT() devolve Verdadeiro se o valor for Falso e devolve Falso se o valor for Verdadeiro. Devolve um erro no caso de a entrada ser um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NOT(booleano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor Booleano</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NOT(falso) devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NOT(verdadeiro) devolve Falso</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OR">
<title
>OR</title>
<para
>A função OR() devolve Verdadeiro se pelo menos um dos valores for verdadeiro. Caso contrário, devolve um valor Falso (a menos que qualquer dos valores seja um erro, onde então devolve um erro).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O OR(falso;falso;falso) devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O OR(verdadeiro;falso) devolve Verdadeiro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUE">
<title
>TRUE</title>
<para
>A função TRUE() devolve o valor booleano verdadeiro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRUE()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TRUE() devolve TRUE</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="XOR">
<title
>XOR</title>
<para
>A função XOR() devolve Falso se o número de valores Verdadeiros for par. Caso contrário, devolve Verdadeiro. Devolve um erro se algum dos argumentos for um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>XOR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Valores booleanos</seg
><seg
>Uma gama de valores lógicos (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O XOR(falso;falso;falso) devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O XOR(verdadeiro;falso) devolve Verdadeiro</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Lookup---Reference">
<title
>Pesquisa &amp; Referência</title>

<sect3 id="ADDRESS">
<title
>ADDRESS</title>
<para
>O ADDRESS cria um endereço de uma célula. O parâmetro Linha é o número da linha e o Coluna é a identificação da coluna.</para>
<para
>Um número absoluto que define o tipo de referência: 1 ou omitido = Absoluta; 2 = Linha absoluta, coluna relativa; 3 = Linha relativa, coluna absoluta e 4 = Relativa.</para>
<para
>O Estilo A1 define o tipo de endereço a devolver. Se o A1 for igual a TRUE (por omissão), o endereço é devolvido no estilo A1, caso contrário será devolvido no estilo R1C1.</para>
<para
>O nome da folha é o texto que indica o nome da folha.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ADDRESS(linha; coluna; absoluto; estilo; nome da folha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de linha</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de coluna</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número absoluto (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Estilo do A1 (opcional)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem>
<seglistitem
><seg
>Nome da folha</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ADDRESS(6; 4) devolve $D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ADDRESS(6; 4; 2) devolve D$6</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ADDRESS(6; 4; 2; FALSE; "Folha1") devolve Folha1!R6C[4]</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ADDRESS(6; 4; 1; FALSE; "Folha1") devolve Folha1!R6C4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ADDRESS(6; 4; 4; TRUE; "Folha1") devolve Folha1!D6</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AREAS">
<title
>AREAS</title>
<para
>Devolve o número de áreas no texto de referência. Uma área pode ser uma única célula ou um conjunto de células.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AREAS(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O AREAS(A1) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O AREAS((A1; A2:A4)) devolve 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CELL">
<title
>CELL</title>
<para
>Devolve informações sobre a posição, a formatação ou o conteúdo de uma referência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CELL(tipo; referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Tipo</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CELL("COL", C7) devolve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CELL("ROW", C7) devolve 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CELL("ADDRESS", C7) devolve $C$7</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHOOSE">
<title
>CHOOSE</title>
<para
>Devolve o parâmetro indicado pelo índice.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CHOOSE(índice, parâmetro1, parâmetro2,...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Índice</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Argumentos</seg
><seg
></seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CHOOSE(1; "1o"; "2o") devolve o "1o"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CHOOSE(2; 3; 2; 4) devolve 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMN">
<title
>COLUMN</title>
<para
>A função COLUMN devolve a coluna da referência de célula indicada. Se não for definido nenhum parâmetro, é devolvida a coluna da célula actual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COLUMN(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COLUMN(A1) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COLUMN(D2) devolve 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COLUMNS">
<title
>COLUMNS</title>
<para
>A função COLUMNS devolve o número de colunas de uma referência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COLUMNS(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COLUMNS(A1:C3) devolve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COLUMNS(D2) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HLOOKUP">
<title
>HLOOKUP</title>
<para
>Procura por um valor correspondente na primeira linha da tabela indicada, devolvendo o valor da linha indicada.</para>
<para
>Procura o 'valor de pesquisa' na primeira linha da 'fonte de dados'. Se existir um valor correspondente, o valor na 'linha' e a coluna onde o valor foi encontrado, são então devolvidos. Se o 'ordenado' for verdadeiro (por omissão), assume-se que a primeira linha está ordenada. A pesquisa irá terminar se o 'valor de pesquisa' for inferior ao valor comparado no momento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto/Numérico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HLOOKUP(Valor de pesquisa; fonte de dados; Linha; Ordenado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor da procura</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Fonte de dados</seg
><seg
>Vector</seg
></seglistitem>
<seglistitem
><seg
>Linha</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Ordenado (opcional)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDEX">
<title
>INDEX</title>
<para
>Se for indicado um intervalo, devolve o valor guardado numa dada linha/coluna. Se for indicada uma célula que contenha uma lista, então será devolvido um elemento da lista.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INDEX(célula, linha, coluna)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Linha</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Coluna</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INDEX(A1:C3;2;2) devolve o conteúdo do B2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INDEX(A1;2;2), se o A1 for o resultado do cálculo de uma lista, devolve o seu elemento (2,2).</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INDIRECT">
<title
>INDIRECT</title>
<para
>Devolve o conteúdo do célula indicada pelo texto de referência. O segundo parâmetro é opcional.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INDIRECT(textoReferencia, estilo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Estilo do A1 (opcional)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INDIRECT(A1), o A1 contém "B1", e o B1 1 =
> devolve 1</para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INDIRECT("A1") devolve o conteúdo do A1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOOKUP">
<title
>LOOKUP</title>
<para
>A função LOOKUP procura pelo primeiro parâmetro do vector de procura. Ela devolve um valor no vector de resultado com o mesmo índice que o valor correspondente no vector de procura. Se o valor não estiver no vector de procura, irá obter o menor a seguir. Se não corresponder a nenhum valor no vector de procura, é devolvido um erro. O vector de procura deverá estar por ordem ascendente e os vectores de procura e do resultado deverão ter o mesmo tamanho. Os valores numéricos, de texto e booleanos são reconhecidos. A comparação entre cadeias de caracteres não faz distinção entre maiúsculas e minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOOKUP(valor; vector de procura; vector de resultado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor da procura</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Vector de procura</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Vector de resultado</seg
><seg
>Texto/Numérico</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOOKUP(1.232; A1:A6; B1:B6) para A1 = 1, A2 = 2 devolve o valor de B1.</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MATCH">
<title
>MATCH</title>
<para
>Procura um valor de pesquisa dentro de uma dada região, devolvendo a sua posição (a começar em 1). O tipo de correspondência poderá ser -1, 0 ou 1, definindo como será pesquisado o valor. Se o tipo for 0, é devolvido o índice do primeiro valor que corresponda ao texto procurado. Se o tipo for igual a 1 (ou omitido), é devolvido o índice do primeiro valor que seja menor ou igual ao valor a pesquisa, sendo os valores na região de pesquisa ordenados de forma ascendente. Se o tipo de ocorrência for -1, é procurado o valor menor que seja maior ou igual ao valor a procurar, tendo a região de pesquisa de estar ordenada de forma descendente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MATCH(Valor a pesquisar; Região da pesquisa; Tipo de correspondência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor a procurar</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Região da pesquisa</seg
><seg
>Referência/Lista</seg
></seglistitem>
<seglistitem
><seg
>Tipo de correspondência (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLE.OPERATIONS">
<title
>MULTIPLE.OPERATIONS</title>
<para
>O MULTIPLE.OPERATIONS executa a expressão da fórmula indicada pela Célula da Fórmula e todas as expressões de que ela depende, substituindo todas as referências à Célula da Linha por referências à Substituição da linha, fazendo o mesmo para a coluna. A função pode ser usada para criar facilmente tabelas de expressões que dependam de dois parâmetros de entrada.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto/Numérico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MULTIPLE.OPERATIONS(Célula da fórmula; Célula da linha; Substituição da linha; Célula da coluna; Substituição da coluna)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Célula da fórmula</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Célula da linha</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Substituição da linha</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Célula da coluna (opcional)</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Substituição da coluna (opcional)</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="OFFSET">
<title
>OFFSET</title>
<para
>Modifica a posição e dimensão de uma referência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>OFFSET(Reference referência; Integer posicaoLinha; Integer posicaoColuna; Integer novaAltura; Integer novaLargura)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência ou intervalo</seg
><seg
>Referência</seg
></seglistitem>
<seglistitem
><seg
>Número de linhas do deslocamento</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de colunas do deslocamento</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Altura do intervalo de deslocamento (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Largura do intervalo de deslocamento (opcional)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROW">
<title
>ROW</title>
<para
>A função ROW devolve a linha da referência da célula indicada. Se não for indicado nenhum parâmetro, é devolvida a linha da célula actual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROW(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROW(A1) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROW(D2) devolve 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROWS"
>ROWS</link
>&nbsp;</member>
<member
><link linkend="COLUMN"
>COLUMN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROWS">
<title
>ROWS</title>
<para
>A função ROWS devolve o número de linhas de uma referência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROWS(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROWS(A1:C3) devolve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROWS(D2) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROW"
>ROW</link
>&nbsp;</member>
<member
><link linkend="COLUMNS"
>COLUMNS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEET">
<title
>SHEET</title>
<para
>Devolve o número da folha da referência ou do texto que representa um nome de folha.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SHEET(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SHEET(Folha1!C7) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SHEET(Folha2!C7) devolve 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SHEETS">
<title
>SHEETS</title>
<para
>Devolve o número de folhas numa referência ou no documento actual.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SHEETS(referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Referência</seg
><seg
>Referência</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VLOOKUP">
<title
>VLOOKUP</title>
<para
>Procura por um valor correspondente na primeira coluna da tabela indicada, devolvendo o valor da coluna indicada.</para>
<para
>Procura o 'valor de pesquisa' na primeira coluna da 'fonte de dados'. Se existir um valor correspondente, o valor na 'coluna' e a linha onde o valor foi encontrado, são então devolvidos. Se o 'ordenado' for verdadeiro (por omissão), assume-se que a primeira coluna está ordenada. A pesquisa irá terminar se o 'valor de pesquisa' for inferior ao valor comparado no momento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto/Numérico</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HLOOKUP(Valor de pesquisa; fonte de dados; Coluna; Ordenado)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor da procura</seg
><seg
>Texto/Numérico</seg
></seglistitem>
<seglistitem
><seg
>Fonte de dados</seg
><seg
>Vector</seg
></seglistitem>
<seglistitem
><seg
>Coluna</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Ordenado (opcional)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Math">
<title
>Matemático</title>

<sect3 id="ABS">
<title
>ABS</title>
<para
>A função ABS() devolve o módulo do número de vírgula flutuante x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ABS(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ABS(12.5) é igual a 12.5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ABS(-12,5) é igual a 12,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEIL">
<title
>CEIL</title>
<para
>A função CEIL() arredonda o valor de x por excesso ao número inteiro mais próximo, devolvendo esse valor com dupla precisão.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CEIL(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CEIL(12,5) é igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CEIL(-12,5) é igual a -12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CEILING">
<title
>CEILING</title>
<para
>A função CEILING() arredonda o 'x' para cima (para longe do zero) para o múltiplo mais próximo de Grau Significativo. O valor predefinido do Grau Significativo é 1 (ou -1 se o número for negativo), o que significa um arredondamento para o inteiro mais próximo. Se o parâmetro do Modo for diferente de zero, a função arredonda para longe do zero em vez de se dirigir ao infinito positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CEILING(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Casas decimais (opcional)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Modo (opcional)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CEILING(12,5) é igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CEILING(6,44;4) é igual a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CEILING(-6,43; -4; 1) é igual a -8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CEILING(-6,43; -4; 0) é igual a -4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNT">
<title
>COUNT</title>
<para
>Esta função devolve o número de parâmetros inteiros ou de virgula flutuante. Você poderá contar, utilizando um intervalo - COUNT(A1:B5) -, ou uma lista de valores como: COUNT(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUNT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COUNT(-5;"kspread";2) devolve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COUNT(5) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTA">
<title
>COUNTA</title>
<para
>Esta função devolve o número de parâmetros não vazios passados. Pode contar utilizando um intervalo - COUNTA(A1:B5) -, ou uma lista de valores como: COUNTA(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUNTA(valor;valor;valor...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COUNTA(-5;"kspread";2) devolve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COUNTA(5) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTBLANK">
<title
>COUNTBLANK</title>
<para
>Esta função devolve o número de células vazias dentro do intervalo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUNTBLANK(intervalo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de células</seg
><seg
>Intervalo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COUNTBLANK(A1:B5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COUNTIF">
<title
>COUNTIF</title>
<para
>A função COUNTIF() devolve o número de células, no intervalo indicado, que obedecem ao critério indicado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COUNTIF(intervalo;critério)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Critério</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COUNTIF(A2:A3;"14") devolve 1 se o A1 for -4 e o A2 for 14</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CUR">
<title
>CUR</title>
<para
>A função CUR() devolve a raiz cúbica não-negativa de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CUR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CUR(27) é igual a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DIV">
<title
>DIV</title>
<para
>A função DIV() divide o primeiro valor pelos outros valores respectivos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DIV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DIV(20;2;2) devolve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DIV(25;2,5) devolve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="MOD"
>MOD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EPS">
<title
>EPS</title>
<para
>O EPS() devolve o epsilon da máquina; esta é a diferença entre 1 e o próximo maior número de vírgula flutuante. Como os computadores têm um número finito de dígitos, os erros de arredondamento são inerentes (mas são normalmente insignificantes) em todos os cálculos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EPS()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>Na maioria dos sistemas, isto devolve 2^-52=2.2204460492503131e-16</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O 0.5*EPS() devolve o "arredondamento às unidades"; este valor é interessante, porque é o maior número 'x', onde (1+x)-1=0 (devido a erros de arredondamento).</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EPS() é tão pequeno que o &sheets; mostra o '1+eps()' como 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>Escolhe um número x entre 0 e EPS(). Repare que o '1+x' arredonda o 'x', quer para 0 quer para EPS(), usando a equação (1+x)-1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EVEN">
<title
>EVEN</title>
<para
>A função EVEN() devolve o número arredondado ao número inteiro par mais próximo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EVEN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>

<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EVEN(1,2) devolve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EVEN(2) devolve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ODD"
>ODD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXP">
<title
>EXP</title>
<para
>A função EXP() devolve o valor de 'e' (a base dos logaritmos naturais), elevado à potência de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EXP(9) é igual a 8103,08392758</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EXP(-9) é igual a 0,00012341</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACT">
<title
>FACT</title>
<para
>A função FACT() calcula o factorial do parâmetro. A expressão matemática é (valor)!.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FACT(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FACT(10) devolve 3 628 800</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FACT(0) devolve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FACTDOUBLE">
<title
>FACTDOUBLE</title>
<para
>A função FACTDOUBLE() calcula o factorial duplo de um número, i.e., o x!!.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FACTDOUBLE(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FACTDOUBLE(6) devolve 48</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FACTDOUBLE(7) devolve 105</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIB">
<title
>FIB</title>
<para
>A função FIB calcula o N-ésimo termo de uma sequência de Fibonacci (1, 1, 2, 3, 5, 8, 13, 21...), na qual cada número, a seguir aos dois primeiros, é a soma dos dois números precedentes. O FIB(0) está definido como 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FIB(n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>N-ésimo termo</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FIB(9) devolve 34</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FIB(26) devolve 121393</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FLOOR">
<title
>FLOOR</title>
<para
>Arredonda um número 'x' para o múltiplo mais próximo do segundo parâmetro, o Grau Significativo.</para>
<para
>A função FLOOR() arredonda por defeito o 'x' (em direcção ao zero) para o múltiplo mais próximo do Grau Significativo. O valor por omissão para o grau é 1, se o 'x' for positivo, e -1 se for negativo, o que significa arredondar para cima para o inteiro mais próximo. Se o modo for indicado e não for igual a zero, o valor de 'x' é arredondado para zero com base num múltiplo do grau significativo e com a aplicação do sinal. Caso contrário, é arredondado para o infinito negativo. Se algum dos dois parâmetros 'x' ou Grau Significativo for zero, o resultado será igual a zero.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FLOOR(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Casas decimais (opcional)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Modo (opcional)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FLOOR(12,5) é igual a 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FLOOR(-12,5) é igual a -13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FLOOR(5; 2) é igual a 4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FLOOR(5; 2,2) é igual a 4,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CEIL"
>CEIL</link
>&nbsp;</member>
<member
><link linkend="CEILING"
>CEILING</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMA">
<title
>GAMMA</title>
<para
>A função GAMMA() devolve o valor da função 'gama'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAMMA(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GAMMA(1) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FACT"
>FACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GCD">
<title
>GCD</title>
<para
>A função GCD() devolve o máximo divisor comum, para dois ou mais valores inteiros.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GCD(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>Uma gama de números inteiros (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>Uma gama de números inteiros (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Terceiro número</seg
><seg
>Uma gama de números inteiros (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GCD(6;4) devolve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GCD(10;20) devolve 10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GCD(20;15;10) devolve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LCM"
>LCM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="G_PRODUCT">
<title
>G_PRODUCT</title>
<para
>A função G_PRODUCT() é a mesma que o KPRODUCT. É oferecida por razões de compatibilidade com o Gnumeric.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>G_PRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INT">
<title
>INT</title>
<para
>A função INT() devolve a parte inteira do valor.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INT(12,55) é igual a 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INT(15) é igual a 15</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FLOOR"
>FLOOR</link
>&nbsp;</member>
<member
><link linkend="QUOTIENT"
>QUOTIENT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INV">
<title
>INV</title>
<para
>Esta função multiplica cada valor por -1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INV(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INV(-5) é igual a 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INV(5) é igual a -5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>INV(0) é igual a 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KPRODUCT">
<title
>KPRODUCT</title>
<para
>A função KPRODUCT() calcula o produto de todos os valores dados como parâmetros. Pode calcular o produto de um intervalo: KPRODUCT(A1:B5) ou de uma lista de valores como KPRODUCT(12;5;12,5). Se não forem dados valores numéricos, a função devolve 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>KPRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O KPRODUCT(3;5;7) é igual a 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O KPRODUCT(12,5;2) é igual a 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="G_PRODUCT"
>G_PRODUCT</link
>&nbsp;</member>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LCM">
<title
>LCM</title>
<para
>A função LCM() devolve o mínimo múltiplo comum, para dois ou mais valores de vírgula flutuante</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LCM(valor; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro número</seg
><seg
>FLOAT</seg
></seglistitem>
<seglistitem
><seg
>Segundo número</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LCM(6;4) devolve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LCM(1,5;2,25) devolve 4,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LCM(2;3;4) devolve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="GCD"
>GCD</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LN">
<title
>LN</title>
<para
>A função LN() devolve o logaritmo natural de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LN(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LN(0,8) é igual a -0,22314355</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LN(0) é igual a -inf</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG">
<title
>LOG</title>
<para
>A função LOG() devolve o logaritmo de base 10 de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOG(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante, maior que zero</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOG(0,8) é igual a -0,09691001</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOG(0) é um erro.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG10">
<title
>LOG10</title>
<para
>A função LOG10() devolve o logaritmo de base 10 do argumento.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOG10(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor positivo de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOG10(10) é igual a 1.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOG10(0) é um erro.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOG2">
<title
>LOG2</title>
<para
>A função LOG2() devolve o logaritmo de base 2 de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOG2(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOG2(0,8) é igual a -0,32192809</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOG2(0) é igual a -inf.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOGN"
>LOGN</link
>&nbsp;</member>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGN">
<title
>LOGN</title>
<para
>A função LOGn() devolve o logaritmo de base n de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOGn(valor;base)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Base</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOGn(12;10) é igual a 1,07918125</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOGn(12;2) é igual a 3,5849625</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LOG"
>LOG</link
>&nbsp;</member>
<member
><link linkend="LN"
>LN</link
>&nbsp;</member>
<member
><link linkend="LOG10"
>LOG10</link
>&nbsp;</member>
<member
><link linkend="LOG2"
>LOG2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAX">
<title
>MAX</title>
<para
>A função MAX() calcula o maior número dado nos parâmetros. Os valores textuais e lógicos são ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MAX(valor;valor;...)</para
></listitem>
</varlistentry>

<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAX(12;5;7) devolve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAX(12,5;2) devolve 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAX(0,5; 0,4;TRUE;  0,2) devolve 0,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MAXA">
<title
>MAXA</title>
<para
>A função MAXA() calcula o maior número dado nos parâmetros. O TRUE é avaliado como 1, enquanto o FALSE é visto como 0. Os valores textuais são ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MAXA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAXA(12;5;7) devolve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAXA(12,5;2) devolve 12,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MAXA(0,5; 0,4;TRUE;  0,2) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MDETERM">
<title
>MDETERM</title>
<para
>A função MDETERM devolve o determinante de uma dada matriz. A matriz terá de ser do tipo 'n x n'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MDETERM(matriz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MDETERM(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MMULT"
>MMULT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIN">
<title
>MIN</title>
<para
>A função MIN() devolve o menor valor dado nos parâmetros. Os valores textuais e lógicos são ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MIN(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MIN(12; 5; 7) devolve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MIN(12,5; 2) devolve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MIN(0,4; 2; FALSE; 0,7) devolve 0,4</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MINA"
>MINA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINA">
<title
>MINA</title>
<para
>A função MINA() devolve o menor valor dado nos parâmetros. O TRUE é avaliado como 1, enquanto o FALSE é como 0. Os valores textuais são ignorados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MINA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MINA(12; 5; 7) devolve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MINA(12,5; 2) devolve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MINA(0,4; 2; FALSE; 0,7) devolve 0.</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MAXA"
>MAXA</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MINVERSE">
<title
>MINVERSE</title>
<para
>Calcula a inversa da matriz.</para>
<para
>A matriz multiplicada pela sua inversa resulta na matriz de identidade da mesma dimensão.</para>
<para
>As matrizes invertíveis têm um determinante não-nulo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MINVERSE(matriz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Matriz</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MINVERSE(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
<member
><link linkend="MUNIT"
>MUNIT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MMULT">
<title
>MMULT</title>
<para
>A função MMULT multiplica duas matrizes. O número de colunas da primeira matriz deverá ser o mesmo que o número de linhas da segunda. O resultado é uma matriz.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MMULT(matriz1;matriz2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeira matriz</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Segunda matriz</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MMULT(A1:C3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MDETERM"
>MDETERM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MOD">
<title
>MOD</title>
<para
>A função MOD() devolve o resto da divisão; se o segundo parâmetro for nulo, a função devolve #DIV/0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MOD(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MOD(12;5) devolve 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>MOD(5;5) devolve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MROUND">
<title
>MROUND</title>
<para
>A função MROUND devolve o valor arredondado ao múltiplo indicado. O valor e o múltiplo devem ter o mesmo sinal</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MROUND(valor; múltiplo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Múltiplo</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MROUND(1,252; 0,5) é igual a 1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MROUND(-1,252; -0,5) é igual a -1,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTINOMIAL">
<title
>MULTINOMIAL</title>
<para
>A função MULTINOMIAL() devolve o multinómio de cada número dos parâmetros. Ele usa esta fórmula para o MULTINOMIAL(a,b,c):</para>
<para
>(a+b+c)! / a!b!c!</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MULTINOMIAL(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MULTINOMIAL(3;4;5) é igual a 27720</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MULTIPLY">
<title
>MULTIPLY</title>
<para
>A função MULTIPLY() multiplica todos os valores dados nos parâmetros. Pode multiplicar os valores dados por um intervalo (MULTIPLY(A1:B5)) ou por uma lista de valores MULTIPLY(12;5;12,5). É equivalente ao PRODUCT.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MULTIPLY(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MULTIPLY(12;5;7) é igual a 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MULTIPLY(12.5;2) é igual a 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DIV"
>DIV</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MUNIT">
<title
>MUNIT</title>
<para
>Cria a matriz de identidade da dimensão indicada.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MUNIT(dimensão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Dimensão</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MUNIT(3) cria uma matriz de identidade 3x3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MINVERSE"
>MINVERSE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ODD">
<title
>ODD</title>
<para
>A função ODD() devolve o número arredondado por excesso (ou defeito, no caso dos valores negativos) para o inteiro ímpar mais próximo. Por definição, o ODD(0) é igual a 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ODD(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ODD(1,2) devolve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ODD(2) devolve 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>ODD(-2) devolve -3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EVEN"
>EVEN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POW">
<title
>POW</title>
<para
>A função POW(x;y) devolve o valor de 'x' elevado a 'y'. É a mesma função que a POWER.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POW(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POW(1,2;3,4) é igual a 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POW(2;3) é igual a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POWER"
>POWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POWER">
<title
>POWER</title>
<para
>A função POWER(x;y) devolve o valor de 'x' elevado a 'y'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POWER(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POWER(1,2;3,4) é igual a 1,8572</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POWER(2;3) é igual a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="POW"
>POW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PRODUCT">
<title
>PRODUCT</title>
<para
>A função PRODUCT() calcula o produto de todos os valores dados como parâmetros. Pode calcular o produto de um intervalo (PRODUCT(A1:B5)) ou duma lista de valores como PRODUCT(12;5;12,5). Se não forem passados valores numéricos, a função devolve 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PRODUCT(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PRODUCT(3;5;7) é igual a 105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PRODUCT(12,5;2) é igual a 25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MULTIPLY"
>MULTIPLY</link
>&nbsp;</member>
<member
><link linkend="KPRODUCT"
>KPRODUCT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="QUOTIENT">
<title
>QUOTIENT</title>
<para
>A função QUOTIENT devolve a parte inteira do numerador/denominador.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>QUOTIENT(numerador;denominador)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Numerador</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Denominador</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O QUOTIENT(21;4) devolve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="INT"
>INT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RAND">
<title
>RAND</title>
<para
>A função RAND() devolve um número pseudo-aleatório entre 0 e 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RAND()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RAND() pode ser, por exemplo, igual a 0,78309922...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RANDBETWEEN"
>RANDBETWEEN</link
>&nbsp;</member>
<member
><link linkend="RANDEXP"
>RANDEXP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBERNOULLI">
<title
>RANDBERNOULLI</title>
<para
>A função RANDBERNOULLI() devolve um número pseudo-aleatório com distribuição de Bernoulli.</para>

<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDBERNOULLI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (entre 0 e 1)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDBERNOULLI(0,45)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBETWEEN">
<title
>RANDBETWEEN</title>
<para
>A função RANDBETWEEN() devolve um número pseudo-aleatório entre o valor mínimo e o valor máximo. Se o 'mínimo 
> máximo', esta função devolve um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDBETWEEN(mínimo;máximo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor mínimo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valor máximo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDBETWEEN(12;78) pode ser, por exemplo, igual a 61,0811...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDBINOM">
<title
>RANDBINOM</title>
<para
>A função RANDBINOM() devolve um número pseudo-aleatório com distribuição binomial.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (entre 0 e 1)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tentativas (maior que 0)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDNEGBINOM"
>RANDNEGBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDEXP">
<title
>RANDEXP</title>
<para
>A função RANDEXP() devolve um número pseudo-aleatório com uma distribuição exponencial.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDEXP(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (maior que 0)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDEXP(0,88)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNEGBINOM">
<title
>RANDNEGBINOM</title>
<para
>A função RANDNEGBINOM() devolve um número pseudo-aleatório com uma distribuição binomial negativa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDNEGBINOM(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (entre 0 e 1)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Falhas (maior que 0)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDNEGBINOM(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
<member
><link linkend="RANDBINOM"
>RANDBINOM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDNORM">
<title
>RANDNORM</title>
<para
>A função RANDNORM() devolve um número pseudo-aleatório com uma distribuição normal (Gaussiana).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDNORM(mu; sigma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor médio da distribuição normal</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dispersão da distribuição normal</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDNORM(0; 1)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANDPOISSON">
<title
>RANDPOISSON</title>
<para
>A função RANDPOISSON() devolve um número pseudo-aleatório com uma distribuição de Poisson.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RANDPOISSON(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (maior que 0)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>RANDPOISSON(4)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RAND"
>RAND</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROOTN">
<title
>ROOTN</title>
<para
>A função ROOTn() devolve a n-ésima raiz não-negativa de x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROOTN(x;n)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROOTn(9;2) é igual a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SQRT"
>SQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUND">
<title
>ROUND</title>
<para
>A função ROUND(valor;[dígitos]) devolve o arredondamento por excesso do 'valor'. O 'dígitos' é o número de algarismos aos quais quer arredondar esse número. Se o 'dígitos' é zero, o valor é arredondado ao inteiro mais próximo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROUND(valor;[dígitos])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dígitos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUND(-1,252;2) é igual a -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUND(-1,252;2) é igual a -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUND(1,258;2) é igual a 1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUND(-12,25;-1) é igual a -10</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUND(-1,252;0) é igual a -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MROUND"
>MROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDDOWN">
<title
>ROUNDDOWN</title>
<para
>A função ROUNDDOWN(valor;[dígitos]) devolve o arredondamento por defeito do 'valor'. O 'dígitos' é o número de algarismos aos quais quer arredondar esse número. Se o 'dígitos' é zero ou não é dado, o valor é arredondado ao inteiro mais próximo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROUNDDOWN(valor;[dígitos])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dígitos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUNDDOWN(1,252) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUNDDOWN(1,252;2) é igual a 1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUNDDOWN(-1,252;2) é igual a -1,25</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUNDDOWN(-1,252) é igual a -1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROUNDUP">
<title
>ROUNDUP</title>
<para
>A função ROUNDUP(valor;[dígitos]) devolve o arredondamento por excesso do 'valor'. O 'dígitos' é o número de algarismos aos quais quer arredondar esse número. Se o 'dígitos' é zero ou não é dado, o valor é arredondado ao inteiro mais próximo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROUNDUP(valor;[dígitos])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dígitos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUNDUP(1,252) é igual a 2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUNDUP(1,252;2) é igual a 1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUNDUP(-1,252;2) é igual a -1,26</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROUNDUP(-1,252) é igual a -2</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SERIESSUM">
<title
>SERIESSUM</title>
<para
>A função SERIESSUM() devolve a soma de uma série de potência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SERIESSUM( X; N; M; Coeficientes)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>X a variável independente da série de potências</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>N o expoente inicial a que o X será elevado</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>M o incremento pelo qual o N será aumentado para cada termo da série</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Coeficientes um conjunto de coeficientes pelos quais cada potência sucessiva da variável X será multiplicada</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SERIESSUM(2;0;2;{1;2}) devolve 9</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIGN">
<title
>SIGN</title>
<para
>Esta função devolve -1 se o número for negativo, 0 se o número for nulo e 1 se o número for positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SIGN(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SIGN(15) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SIGN(0) é igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SIGN(5) é igual a -1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRT">
<title
>SQRT</title>
<para
>A função SQRT() devolve a raiz quadrada não-negativa do argumento. É um erro se o argumento for negativo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SQRT(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SQRT(9) é igual a 3</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SQRT(-9) é um erro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="IMSQRT"
>IMSQRT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SQRTPI">
<title
>SQRTPI</title>
<para
>A função SQRTPI() devolve a raiz quadrada não-negativa de x * PI. É um erro se o argumento for negativo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SQRTPI(x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SQRTPI(2) é igual a 2.506628</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBTOTAL">
<title
>SUBTOTAL</title>
<para
>A função SUBTOTAL() devolve o sub-total de uma determinada lista de argumentos, ignorando os outros resultados de sub-totais existentes. A função pode ser um dos seguintes números: 1 - Average, 2 - Count, 3 - CountA, 4 - Max, 5 - Min, 6 - Product, 7 - StDev, 8 - StDevP, 9 - Sum, 10 - Var, 11 - VarP.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUBTOTAL(função; valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Função</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>Se, em A1:A5, estiver 7, 24, 23, 56 e 9:</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUBTOTAL(1; A1:A5) devolve 23,8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUBTOTAL(4; A1:A5) devolve 56</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUBTOTAL(9; A1:A5) devolve 119</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUBTOTAL(11; A1:A5) devolve 307,76</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="AVERAGE"
>AVERAGE</link
>&nbsp;</member>
<member
><link linkend="COUNT"
>COUNT</link
>&nbsp;</member>
<member
><link linkend="COUNTA"
>COUNTA</link
>&nbsp;</member>
<member
><link linkend="MAX"
>MAX</link
>&nbsp;</member>
<member
><link linkend="MIN"
>MIN</link
>&nbsp;</member>
<member
><link linkend="PRODUCT"
>PRODUCT</link
>&nbsp;</member>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM">
<title
>SUM</title>
<para
>A função SUM() calcula a soma de todos os valores dados como parâmetros. Pode calcular a soma de um intervalo (SUM(A1:B5)), ou de uma lista de valores como SUM(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUM(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUM(12;5;7) é igual a 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUM(12,5;2) é igual a 14,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUMA"
>SUMA</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
<member
><link linkend="SUMIF"
>SUMIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMA">
<title
>SUMA</title>
<para
>A função SUMA() calcula a soma de todos os valores dados como parâmetros. Pode calcular a soma dum intervalo (SUMA(A1:B5)) ou duma lista de valores como SUM(12;5;12,5). Se um parâmetro contiver texto ou o valor booleano falso irá contar como 0, se for avaliado como verdadeiro contará como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUM(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUMA(12;5; 7) é igual a 24</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUMA(12,5; 2; TRUE) é igual a 15.5</para
></listitem>
</varlistentry>

<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="SUMSQ"
>SUMSQ</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMIF">
<title
>SUMIF</title>
<para
>A função SUMIF() calcula a soma de todos os valores dados como parâmetro que condizem com o critério. O intervalo de soma é opcional. Se não for dado, são assumidos os valores no intervalo de verificação. O tamanho do intervalo de verificação deve ser igual ou menor do que o tamanho do intervalo de soma.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMIF(intervalo_de_verificação;critério,intervalo_de_soma)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Verificar o intervalo</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Critério</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Somar o intervalo</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUMIF(A1:A4;"
>1") soma todos os valores no intervalo A1:A4 que obedecem a 
>1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUMIF(A1:A4;"=0";B1:B4) soma todos os valores no intervalo B1:B4 para os quais o valor correspondente em A1:A4 obedeça a =0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
<member
><link linkend="COUNTIF"
>COUNTIF</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMSQ">
<title
>SUMSQ</title>
<para
>A função SUMSQ() calcula a soma de todos os quadrados dos valores dados como parâmetros. Pode calcular a soma dum intervalo (SUMSQ(A1:B5)) ou duma lista de valores como SUMSQ(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMSQ(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores</seg
><seg
>FLOAT</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMSQ(12;5;7) é igual a 218</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>SUMSQ(12,5;2) é igual a 173</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SUM"
>SUM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRANSPOSE">
<title
>TRANSPOSE</title>
<para
>Devolve a transposta de uma matriz, i.e., as linhas e colunas da matriz são trocadas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRANSPOSE(matriz)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Matriz</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>TRANSPOSE(A1:C3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRUNC">
<title
>TRUNC</title>
<para
>A função TRUNC() arredonda por defeito um valor numérico a uma dada precisão. Se a precisão for omitida, assume-se igual a 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRUNC(valor; precisão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de vírgula flutuante</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Precisão</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TRUNC(1,2) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TRUNC(213,232; 2) devolve 213,23</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ROUND"
>ROUND</link
>&nbsp;</member>
<member
><link linkend="ROUNDDOWN"
>ROUNDDOWN</link
>&nbsp;</member>
<member
><link linkend="ROUNDUP"
>ROUNDUP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Statistical">
<title
>Estatística</title>

<sect3 id="AVEDEV">
<title
>AVEDEV</title>
<para
>A função AVEDEV() calcula a média dos desvios absolutos do conjunto de dados da sua média.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AVEDEV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O AVEDEV(11,4;17,3;21,3;25,9;40,1) devolve 7,84</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>AVEDEV(A1:A5) ...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGE">
<title
>AVERAGE</title>
<para
>A função AVERAGE() calcula a média de todos os valores dados como parâmetros. Pode calcular a média de um intervalo (AVERAGE(A1:B5)) ou de uma lista de valores (AVERAGE(12;5;12,5).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AVERAGE(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O AVERAGE(12;5;7) é igual a 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A AVERAGE(12,5;2) é igual a 7,25</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="AVERAGEA">
<title
>AVERAGEA</title>
<para
>A função AVERAGEA() calcula a média dos argumentos dados. Os números, texto e valores lógicos estão também incluídos no cálculo. Se a célula contiver texto, ou se o argumento for avaliado como falso, é interpretado como um valor igual a zero (0). Se o argumento for avaliado como verdadeiro, conta como um (1). As células vazias não são tidas em conta.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>AVERAGEA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O AVERAGEA(11,4;17,3;"algum-texto";25,9;40,1) devolve 18,94</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETADIST">
<title
>BETADIST</title>
<para
>A função BETADIST() devolve a função de densidade probabilística acumulativa beta.</para>
<para
>O terceiro e quarto parâmetros são opcionais. Estes definem os limites inferior e superior, caso contrário assumem-se os valores 0,0 e 1,0 respectivamente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BETADIST(número;alfa;beta;início;fim[;acumulativo=Verdadeiro])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro alfa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro beta</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Início</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Fim</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Acumulada</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BETADIST(0,2859;0,2606;0,8105) é igual a 0,675444</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BETADIST(0,2859;0,2606;0,8105;0,2;0,9) é igual a 0,537856</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BETAINV">
<title
>BETAINV</title>
<para
>A função BETAINV() devolve a inversa da BETADIST(x;alfa;beta;a;b;TRUE()).</para>
<para
>Os parâmetros de início e fim são opcionais. Estes definem os limites inferior e superior, caso contrário assumem-se os valores 0,0 e 1,0 respectivamente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BETAINV(número;alfa;beta [; início=0 [; fim=1]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro alfa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro beta</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Início</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Fim</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BETADIST(BETAINV(0,1;3;4);3;4) é igual a 0,1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BETADIST(BETAINV(0,3;3;4);3;4) é igual a 0,3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BINO">
<title
>BINO</title>
<para
>A função BINO() devolve a distribuição binomial.</para>
<para
>O primeiro parâmetro é o número de tentativas, o segundo parâmetro é o número de sucessos, e o terceiro é a probabilidade de sucesso. O número de tentativas deve ser maior que o número de sucessos e a probabilidade deve ser menor ou igual a 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BINO(tentativas;sucessos;probabilidade_de_sucesso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de tentativas</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de tentativas com sucesso</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilidade de sucesso</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>BINO(12;9;0,8) devolve 0,236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHIDIST">
<title
>CHIDIST</title>
<para
>A função CHIDIST() devolve o valor da probabilidade do Chi-quadrado indicado, para o qual se confirma uma hipótese.</para>
<para
>CHIDIST calcula o valor do Chi quadrado a ser dado para uma amostra aleatória, a qual é calculada a partir da soma do (valor observado-valor esperado)^2/valor esperado, para todos os valores com a distribuição Chi-quadrado teórica, determinando a partir desta a probabilidade de erro da hipótese a testar.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CHIDIST(número;graus_liberdade)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Graus de liberdade</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CHIDIST(13,27;5) devolve 0,021</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBIN">
<title
>COMBIN</title>
<para
>A função COMBIN() calcula o número de combinações possíveis. O primeiro parâmetro é o número total de elementos. O segundo parâmetro é o número de elementos a escolher. Estes dois parâmetros devem ser positivos; caso contrário, a função devolve um erro. O primeiro parâmetro deve ser maior que o segundo; caso contrário, a função também devolve um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMBIN(total;escolhidos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a escolher</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMBIN(12;5) devolve 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMBIN(5;5) devolve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMBINA">
<title
>COMBINA</title>
<para
>A função COMBINA() calcula o número de combinações possíveis. O primeiro parâmetro é o número total de elementos. O segundo parâmetro é a quantidade total de elementos. O segundo parâmetro é o número de elementos a escolher. Ambos os parâmetros deverão ser positivos e o primeiro parâmetro não deverá ser inferior ao segundo. Caso contrário, a função devolve um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMBIN(total;escolhidos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a escolher</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMBIN(12;5) devolve 792</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMBIN(5;5) devolve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONFIDENCE">
<title
>CONFIDENCE</title>
<para
>A função CONFIDENCE() devolve o intervalo de confiança para a média da população.</para>
<para
>O parâmetro alfa deve ser entre 0 e 1 (exclusive), o desvio-padrão deve ser positivo e o tamanho deve ser maior ou igual a 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CONFIDENCE(alfa;desviopadrão;tamanho)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo do nível de confiança</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio-padrão para a população total</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Tamanho da população total</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CONFIDENCE(0,05;1,5;100) é igual a 0,294059</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CORREL">
<title
>CORREL</title>
<para
>A função CORREL() calcula o coeficiente de correlação de dois intervalos de células.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CORREL(intervalo1; intervalo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores da célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Segundo intervalo de valores da célula</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>CORREL(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="PEARSON"
>PEARSON</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COVAR">
<title
>COVAR</title>
<para
>A função COVAR() calcula a co-variância de dois intervalos de células.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COVAR(intervalo1; intervalo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores da célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Segundo intervalo de valores da célula</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>COVAR(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEVSQ">
<title
>DEVSQ</title>
<para
>A função DEVSQ() calcula a soma dos quadrados dos desvios.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEVSQ(valor; valor; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>DEVSQ(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DEVSQ(21; 33; 54; 23) devolve 684,75</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXPONDIST">
<title
>EXPONDIST</title>
<para
>A função EXPONDIST() devolve a distribuição exponencial.</para>
<para
>O parâmetro lambda deve ser positivo.</para>
<para
>Com acumular = 0, calcula a função de densidade; com acumular = 1, calcula a distribuição.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EXPONDIST(número;lambda;acumular)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro lambda</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>0 = densidade, 1 = distribuição</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EXPONDIST(3;0.5;0) é igual a 0.111565</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EXPONDIST(3;0.5;1) é igual a 0,776870</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FDIST">
<title
>FDIST</title>
<para
>A função FDIST() devolve a distribuição f.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FDIST(número;graus_liberdade_1;graus_liberdade_2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Graus de liberdade 1</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Graus de liberdade 2</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FDIST(0,8;8;12) é igual a 0,61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINV">
<title
>FINV</title>
<para
>A função FINV() devolve o número único não-negativo 'x' tal que FDIST(x;r1;r2) = p.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FINV(número; r1; r2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Número r1</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número r2</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FDIST(FINV(0,1;3;4);3;4) é igual a 0,1</para
></listitem>
</varlistentry>

</variablelist>
</sect3>

<sect3 id="FISHER">
<title
>FISHER</title>
<para
>A função FISHER() devolve a transformada de Fisher para x, e cria uma função aproximada à distribuição normal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FISHER(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FISHER(0,2859) é igual a 0,294096</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FISHER(0,8105) é igual a 1,128485</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FISHERINV">
<title
>FISHERINV</title>
<para
>A função FISHERINV() devolve a inversa da transformação de Fisher para x, e cria uma função aproximada à distribuição normal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FISHERINV(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FISHERINV(0,2859) é igual a 0,278357</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>FISHERINV(0,8105) é igual a 0,669866</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FREQUENCY">
<title
>FREQUENCY</title>
<para
>Conta o número de valores para cada intervalo, indicado pelos valores-fronteira no segundo parâmetro.</para>
<para
>Os valores no segundo parâmetro determinam os limites superiores dos intervalos. Os intervalos incluem os limites superiores. A lista devolvida é um vector de colunas e tem mais um elemento que o segundo parâmetro; o último elemento representa o número de elementos maiores que o último valor no segundo parâmetro. Se o segundo parâmetro for vazio, todos os valores no primeiro parâmetro serão tidos em conta.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FREQUENCY(Dados do intervalo; Grupos do intervalo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante, os quais deverão ser contados.</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante, que representam os limites superiores dos intervalos.</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMADIST">
<title
>GAMMADIST</title>
<para
>A função GAMMADIST() devolve a distribuição Gama.</para>
<para
>Se o último parâmetro (acumulado) for 0, calcula a função de densidade; se for 1, é devolvida a distribuição.</para>
<para
>Os três primeiros parâmetros devem ser positivos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAMMADIST(número;alfa;beta;acumular)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro alfa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro beta</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Modo de acumulação</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GAMMADIST(0,758;0,1;0,35;1) é igual a 0,995450</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GAMMADIST(0,758;0,1;0,35;0) é igual a 0,017179</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMAINV">
<title
>GAMMAINV</title>
<para
>A função GAMMAINV() devolve o número único x 
>= 0 tal que GAMMAINV(x;alfa;beta;TRUE()) = p.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAMMAINV(número;alfa;beta)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro alfa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro beta</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GAMMADIST(GAMMAINV(0,1;3;4);3;4) é igual a 0,1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GAMMADIST(GAMMAINV(0,3;3;4);3;4) é igual a 0,3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAMMALN">
<title
>GAMMALN</title>
<para
>A função GAMMALN() devolve o logaritmo natural da função Gamma: G(x). O parâmetro número deve ser positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAMMALN(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GAMMALN(2) é igual a 0</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GAUSS">
<title
>GAUSS</title>
<para
>A função GAUSS() devolve os valores do integral da distribuição normal acumulativa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GAUSS(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O número para o qual será calculado o integral da distribuição normal padrão.</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GAUSS(0,25) é igual a 0,098706</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="GEOMEAN">
<title
>GEOMEAN</title>
<para
>A função GEOMEAN() devolve a média geométrica dos argumentos indicados. Este valor é igual à raiz N-ésima do produto dos termos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>GEOMEAN(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>GEOMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O GEOMEAN(21; 33; 54; 23) devolve 30,45886</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="HARMEAN"
>HARMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HARMEAN">
<title
>HARMEAN</title>
<para
>A função HARMEAN() devolve a média harmónica dos N pontos de dados (N divididos pela soma dos inversos dos pontos de dados).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HARMEAN(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>HARMEAN(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HARMEAN(21; 33; 54; 23) devolve 28,588</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="GEOMEAN"
>GEOMEAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="HYPGEOMDIST">
<title
>HYPGEOMDIST</title>
<para
>A função HYPGEOMDIST() devolve a distribuição hipergeométrica.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>HYPGEOMDIST(x; n; M; N)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de tentativas com sucesso na amostra</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de tentativas</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de tentativas com sucesso</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Tamanho da população</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O HYPGEOMDIST(2; 5; 6; 20) devolve 0,3522</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INTERCEPT">
<title
>INTERCEPT</title>
<para
>A função INTERCEPT() calcula a intersecção da linha da regressão linear com o eixo dos Y.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INTERCEPT(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>valores em Y (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>valores em X (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="INVBINO">
<title
>INVBINO</title>
<para
>A função INVBINO() devolve a distribuição binomial negativa. O primeiro parâmetro é o número de tentativas, o segundo é o número de falhas e o terceiro é a probabilidade de falha. O número de tentativas deve ser maior que o número de falhas e a probabilidade deve ser menor ou igual a 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>INVBINO(tentativas;falhas;probabilidade_de_falha)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de tentativas</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de falhas</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilidade de falha</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O INVBINO(12;3;0,2) devolve 0,236223201</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURT">
<title
>KURT</title>
<para
>A função KURT() calcula uma estimativa nominal do 'kurtosis' de um conjunto de dados. Tem de fornecer pelo menos 4 valores; caso contrário, será devolvido um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>KURT(valor; valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>KURT(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O KURT(21; 33; 54; 23) devolve 1,344239</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="KURTP"
>KURTP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="KURTP">
<title
>KURTP</title>
<para
>A função KURTP() calcula o 'kurtosis' da população de um conjunto de dados. Tem de fornecer pelo menos 4 valores; caso contrário, será devolvido um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>KURTP(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>KURTP(A1:A5)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O KURTP(21; 33; 54; 23) devolve -1,021</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="KURT"
>KURT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LARGE">
<title
>GRANDE</title>
<para
>A função LARGE() devolve o k-ésimo maior valor do conjunto de dados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LARGE(intervalo; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores da célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Posição (da maior)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> o LARGE(A1:A3; 2) devolve 3</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEGACYFDIST">
<title
>LEGACYFDIST</title>
<para
>A função LEGACYFDIST() devolve a distribuição-f.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEGACYFDIST(número;graus-liberdade-1;graus-liberdade-2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Graus de liberdade 1</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Graus de liberdade 2</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LEGACYFDIST(0,8;8;12) devolve 0,61</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGINV">
<title
>LOGINV</title>
<para
>A função LOGINV() calcula o inverso da distribuição normal logarítmica acumulativa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOGINV(p; media; desvio_padrão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Probabilidade</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor médio da distribuição logarítmica padrão</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio-padrão da distribuição logarítmica padrão</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOGINV(0,1;0;1) é igual a 0,2776</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOGNORMDIST">
<title
>LOGNORMDIST</title>
<para
>A função LOGNORMDIST() devolve a distribuição lognormal acumulativa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOGNORMDIST(número;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor de probabilidade para o qual é calculada a distribuição logarítmica</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor médio da distribuição logarítmica padrão</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio-padrão da distribuição logarítmica padrão</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOGNORMDIST(0,1;0;1) é igual a 0,01</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MEDIAN">
<title
>MEDIAN</title>
<para
>A função MEDIAN() calcula a mediana de todos os valores dados como parâmetros. Pode calcular a mediana dum intervalo, utilizando MEDIAN(A1:B5), ou de uma lista de valores, utilizando MEDIAN(12;5;12,5). As células em branco serão consideradas como zero, e as células com texto serão ignoradas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MEDIAN(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor de vírgula flutuante ou gama de valores</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante ou gama de valores</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante ou gama de valores</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante ou gama de valores</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante ou gama de valores</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MEDIAN(12; 5; 5,5) é igual a 5,5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MEDIAN(12; 7; 8;2) é igual a 7,5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MODE">
<title
>MODE</title>
<para
>A função MODE() devolve a moda dos dados, isto é, o valor que ocorre com maior frequência.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MODE(número; número2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MODE(12; 14; 12; 15) devolve 12</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NEGBINOMDIST">
<title
>NEGBINOMDIST</title>
<para
>A função NEGBINOMDIST() devolve a distribuição binomial negativa.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NEGBINOMDIST(tentativas;sucessos;probabilidade_de_sucesso)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número de falhas</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de tentativas com sucesso</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Probabilidade de sucesso</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NEGBINOMDIST(2;5;0,55) devolve 0,152872629</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMDIST">
<title
>NORMDIST</title>

<para
>A função NORMDIST() devolve a distribuição normal acumulativa.</para>
<para
>O Número é o valor da distribuição, baseado no qual será calculada a distribuição normal.</para>
<para
>MV é o centro linear da distribuição.</para>
<para
>STD é o desvio-padrão da distribuição.</para>
<para
>O K = 0 calcula a função de densidade; o K = 1 calcula a distribuição.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NORMDIST(número;MV;STD;K)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Centro linear da distribuição</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio-padrão da distribuição</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>0 = densidade, 1 = distribuição</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NORMDIST(0,859;0,6;0,258;0) é igual a 0,934236</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NORMDIST(0,859;0,6;0,258;1) é igual a 0,842281</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMINV">
<title
>NORMINV</title>
<para
>A função NORMINV() devolve a inversa da distribuição normal acumulativa. O número deve ser entre 0 e 1 (exclusive) e o STD deve ser positivo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NORMINV(número;MV;STD)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor de probabilidade para o qual é calculada a distribuição logarítmica</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valor central da distribuição normal</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Desvio-padrão da distribuição normal</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>NORMINV(0,9;63;5) é igual a 69,41</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSDIST">
<title
>NORMSDIST</title>
<para
>A função NORMSDIST() devolve a distribuição normal padrão.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NORMSDIST(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O valor para o qual é calculada a distribuição normal padrão</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NORMSDIST(1) é igual a 0,84</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="NORMSINV">
<title
>NORMSINV</title>
<para
>A função NORMINV() devolve a inversa da distribuição normal acumulativa. O número deve ser entre 0 e 1 (exclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>NORMSINV(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O NORMSINV(0,908789) é igual a 1,3333</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PEARSON">
<title
>PEARSON</title>
<para
>A função PEARSON() calcula o coeficiente de correlação de dois intervalos de células. É a mesma função que a CORREL.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PEARSON(intervalo1; intervalo2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores da célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Segundo intervalo de valores da célula</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PEARSON(A1:A3; B1:B3)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CORREL"
>CORREL</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERCENTILE">
<title
>PERCENTILE</title>
<para
>A função PERCENTILE() devolve o percentil dos valores de dados da x-ésima amostra dos dados. Um percentil devolve o valor de escala para uma série de dados que vai do valor menor (alfa=0) para o maior (alfa=1) de uma série de dados. Para um alfa = 25%, o percentil corresponde ao primeiro quartil; alfa = 50% é a mediana. As células em branco correspondem a zero e as células com texto serão ignoradas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PERCENTILE(dados;alfa)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>O valor do percentil entre 0 e 1, inclusive.</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="MEDIAN"
>MEDIAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUT">
<title
>PERMUT</title>
<para
>A função PERMUT() devolve o número de arranjos. O primeiro parâmetro é o número de elementos e o segundo parâmetro é o número de elementos usados no arranjo.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PERMUT(total;arranjados)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a arranjar</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PERMUT(8;5) é igual a 6720</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PERMUT(1;1) é igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PERMUTATIONA">
<title
>PERMUTATIONA</title>
<para
>A função PERMUTATIONA() devolve o número de arranjos ordenados. O primeiro parâmetro é o número de elementos e o segundo parâmetro é o número de elementos a escolher. Ambos os números deverão ser positivos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PERMUTATIONA(total;escolhidos)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número total de elementos</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de elementos a escolher</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PERMUTATIONA(2; 3) devolve 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PERMUTATIONA(0; 0) devolve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PHI">
<title
>PHI</title>
<para
>A função PHI() devolve o valor da função de distribuição para a distribuição padrão normal.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PHI(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O número para o qual a distribuição normal padrão será calculada.</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PHI(0,25) é igual a 0,386668</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="POISSON">
<title
>POISSON</title>
<para
>A função POISSON() devolve a distribuição de Poisson.</para>
<para
>Os valores lambda e número devem ser positivos.</para>
<para
>Com acumular = 0, calcula a função de densidade; com acumular = 1, calcula a distribuição.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>POISSON(número;lambda;acumular)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro lambda (o valor médio)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>0 = densidade, 1 = distribuição</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POISSON(60;50;0) é igual a 0,020105</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O POISSON(60;50;1) é igual a 0,927840</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RANK">
<title
>RANK</title>
<para
>A função RANK() devolve a classificação de um número numa lista de números.</para>
<para
>A ordem define como classificar os números:</para>
<para
>Se for 0 ou omitido, os Dados classificam-se por ordem descendente.</para>
<para
>Se não for 0, os Dados classificam-se por ordem ascendente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RSQ(Valor; Dados; Ordem)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Dados (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ordem</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RANK (2;{1;2;3}) é igual a 2</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RSQ">
<title
>RSQ</title>
<para
>A função RSQ() devolve o quadrado do coeficiente de correcção do momento do produto de Pearson, através dos pontos de dados em x_conhecido's e y_conhecido's.</para>
<para
>Se a "listaY" e a "listaX" estiverem vazias ou tiverem uma quantidade diferente de pontos de dados, é devolvido o valor #N/A.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RSQ(Y conhecido; X conhecido)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Y conhecido (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>X conhecido (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEW">
<title
>SKEW</title>
<para
>A função SKEW() devolve uma estimativa da inclinação de uma distribuição</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SKEW(número; número2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SKEW(11,4; 17,3; 21,3; 25,9; 40,1) devolve 0,9768</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SKEWP"
>SKEWP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SKEWP">
<title
>SKEWP</title>
<para
>A função SKEWP() devolve a inclinação da população de uma distribuição</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SKEWP(número; número2; ...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Real</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SKEWP(11,4; 17,3; 21,3; 25,9; 40,1) devolve 0,6552</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SKEW"
>SKEW</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLOPE">
<title
>SLOPE</title>
<para
>A função SLOPE() calcula a inclinação da linha de regressão linear.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>valores em Y (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>valores em X (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SMALL">
<title
>SMALL</title>
<para
>A função SMALL() devolve o k-ésimo menor valor do conjunto de dados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SMALL(intervalo; k)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Intervalo de valores da célula</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Posição (a partir da menor)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A1: 3, A2: 1, A3: 5 =
> o SMALL(A1:A3; 1) devolve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STANDARDIZE">
<title
>STANDARDIZE</title>
<para
>A função STANDARDIZE() calcula um valor normalizado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STANDARDIZE(x; média, desvio_padrão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número a normalizar</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Média da distribuição</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Desvio-padrão</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O STANDARDIZE(4; 3; 7) devolve 0,1429</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEV">
<title
>STDEV</title>
<para
>A função STDEV() estima o desvio-padrão com base numa amostra. O desvio-padrão é uma medida de como os valores se encontram dispersos do valor da média.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STDEV(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O STDEV(6;7;8) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVA">
<title
>STDEVA</title>
<para
>A função STDEVA() estima o desvio-padrão com base numa amostra. O desvio-padrão é uma medida de como os valores se encontram dispersos do valor da média. Se uma dada célula contiver texto ou o valor booleano Falso, conta como 0. Se contiver o valor booleano Verdadeiro, conta como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STDEVA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O STDEVA(6; 7; A1; 8) é igual a 1, se A1 for vazio</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O STDEVA(6; 7; A1; 8) é igual a 3,109, se o A1 for TRUE</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVP">
<title
>STDEVP</title>
<para
>A função STDEVP() calcula o desvio-padrão, com base numa população inteira.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STDEVP(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O STDEVP(6;7;8) é igual a 0,816497...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STDEVPA">
<title
>STDEVPA</title>
<para
>A função STDEVPA() calcula o desvio-padrão com base numa população inteira. Se uma célula referenciada contiver texto ou o valor booleano Falso, conta como 0. Se for o valor booleano Verdadeiro, conta como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>STDEVPA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O STDEVPA(6;7;8) é igual a 0,816497..., se o A1 estiver vazio</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O STDEVPA(6; 7; A1; 8) é igual a 2,69..., se o A1 for TRUE</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O STDEVPA(6; 7; A1; 8) é igual a 3,11..., se o A1 for FALSE</para
></listitem>
</varlistentry>

<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="STDEV"
>STDEV</link
>&nbsp;</member>
<member
><link linkend="STDEVP"
>STDEVP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="STEYX">
<title
>STEYX</title>
<para
>A função STEYX() calcula o erro-padrão do valor previsto em Y para cada X na regressão.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>valores em Y (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>valores em X (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUM2XMY">
<title
>SUM2XMY</title>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLOPE(y;x)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMPRODUCT">
<title
>SUMPRODUCT</title>
<para
>A função SUMPRODUCT() (SUM(X*Y)) devolve a soma do produto destes valores. O número de valores deve ser igual entre as duas listas. Caso contrário esta função devolve Err.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMPRODUCT(lista1;lista2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (lista)</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor (lista)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUMPRODUCT(A1:A2;B1:B2) com A1=2, A2=5, B1=3 e B2=5 devolve 31</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2MY2">
<title
>SUMX2MY2</title>
<para
>A função SUMX2MY2() (SUM(X^2-Y^2)) devolve a diferença dos quadrados destes valores. O número de valores deve ser igual entre as duas listas. Caso contrário esta função devolve Err.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMX2MY2(lista1;lista2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (lista)</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor (lista)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUMX2MY2(A1:A2;B1:B2) com A1=2, A2=5, B1=3 e B2=5 devolve -5</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMX2PY2">
<title
>SUMX2PY2</title>
<para
>A função SUMX2PY2() (SUM(X^2+Y^2)) devolve a soma dos quadrados destes valores. O número de valores deve ser igual entre as duas listas. Caso contrário esta função devolve Err.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMX2PY2(lista1;lista2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (lista)</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor (lista)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUMX2PY2(A1:A2;B1:B2) com A1=2, A2=5, B1=3 e B2=5 devolve 63</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUMXMY2">
<title
>SUMXMY2</title>
<para
>A função SUMXMY2() (SUM((X-Y)^2)) devolve o quadrado das diferenças entre estes valores. O número de valores nas duas listas deverá ser igual. Caso contrário, esta função devolve um erro.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUMXMY2(lista-1;lista-2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor (lista)</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Valor (lista)</seg
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUMXMY2(A1:A2;B1:B2), com A1=2, A2=5, B1=3 e B2=5, devolve 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TDIST">
<title
>TDIST</title>
<para
>A função TDIST() devolve a distribuição t.</para>
<para
>O modo = 1 devolve o teste de um extremo e o modo = 2 devolve o teste com dois extremos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TDIST(número;graus_liberdade;modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Graus de liberdade da distribuição t</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Modo (1 ou 2)</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TDIST(12;5;1) é igual a 0,000035</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TREND">
<title
>TREND</title>
<para
>A função TREND() calcula uma sequência de valores com base numa regressão linear de pares de valores conhecidos.</para>
<para
>Restrições: COUNT(yConhecido) = COUNT(xConhecido).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TREND(yConhecido[;xConhecido[;novoX[;permitirDeslocamento = TRUE]]])</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>yConhecido</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>xConhecido</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Sequência-Números novoX</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>permitirDeslocamento</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIMMEAN">
<title
>TRIMMEAN</title>
<para
>A função TRIMMEAN() calcula a média de uma fracção de um conjunto de dados.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRIMMEAN(conjuntoDados; fraccaoCorte)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>conjuntoDados</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>fraccaoCorte</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TTEST">
<title
>TTEST</title>
<para
>A função TTEST() calcula a probabilidade de um teste 't'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TTEST(x; y; tipo; modo)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>X (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Y (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>tipo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>modo</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VAR">
<title
>VAR</title>
<para
>A função VAR() calcula a estimativa da variância baseada numa amostra.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VAR(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VAR(12;5;7) é igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A VAR(15;80;3) é igual a 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>A VAR(6;7;8) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VARIANCE"
>VARIANCE</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARA">
<title
>VARA</title>
<para
>A função VARA() calcula a variância baseada numa amostra.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VARA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARA(12;5;7) é igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARA(15;80;3) é igual a 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARA(6;7;8) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARIANCE">
<title
>VARIANCE</title>
<para
>A função VARIANCE() calcula a estimativa da variância baseada numa amostra. É a mesma função que a VAR.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VARIANCE(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARIANCE(12;5;7) é igual a 13</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARIANCE(15;80;3) é igual a 1716,333...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARIANCE(6;7;8) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARP">
<title
>VARP</title>
<para
>A função VARP() calcula a variância com base numa população inteira.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VARP(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARP(12;5;7) é igual a 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARP(15;80;3) é igual a 1144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARP(6;7;8) é igual a 0,6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARPA"
>VARPA</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VARPA">
<title
>VARPA</title>
<para
>A função VARPA() calcula a variância com base numa população inteira. Os valores de texto e booleanos, que sejam avaliados como falsos, contam como 0, enquanto os avaliados como verdadeiros contam como 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>VARPA(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Valores de vírgula flutuante</seg
><seg
>Uma gama de valores de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARPA(12;5;7) é igual a 8,666...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARPA(15;80;3) é igual a 1144,22...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VARPA(6;7;8) é igual a 0,6666667...</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="VAR"
>VAR</link
>&nbsp;</member>
<member
><link linkend="VARA"
>VARA</link
>&nbsp;</member>
<member
><link linkend="VARP"
>VARP</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="WEIBULL">
<title
>WEIBULL</title>
<para
>A função WEIBULL() devolve a distribuição Weibull.</para>
<para
>Os parâmetros alfa e beta devem ser positivos, e o número (primeiro parâmetro) não poderá ser negativo.</para>
<para
>Com acumular = 0, calcula a função de densidade; com acumular = 1, calcula a distribuição.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>WEIBULL(número;alfa;beta;acumular)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro alfa</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Parâmetro beta</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>0 = densidade, 1 = distribuição</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O WEIBULL(2;1;1;0) é igual a 0,135335</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O WEIBULL(2;1;1;1) é igual a 0,864665</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ZTEST">
<title
>ZTEST</title>
<para
>A função ZTEST() calcula a probabilidade de dois extremos de um teste 'z' com a distribuição normal.</para>
<para
>Efectua um teste da hipótese nula, onde a amostra é uma amostra de uma variável aleatória com distribuição normal e com um dado 'sigma' como desvio-padrão. Um valor igual a 1 indica que a hipótese nula é rejeitada, i.e., a amostra não é uma amostra aleatória da distribuição normal. Se o 'sigma' for omitido, estima-se a partir da amostra, usando o STDEV. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ZTEST(x; média; desvioPadrão)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>X (lista)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>média</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>desvioPadrão</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Text">
<title
>Texto</title>

<sect3 id="ASC">
<title
>ASC</title>
<para
>A função ASC() devolve os caracteres de meia-largura, comparados ao argumento largura-completa'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ASC(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Caracteres de largura completa</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="JIS"
>JIS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="BAHTTEXT">
<title
>BAHTTEXT</title>
<para
>A função BAHTTEXT() converte um número para um texto em caracteres Thai (Baht).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>BAHTTEXT(número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O BAHTTEXT(23) devolve "ยสบสามบาทถวน"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CHAR">
<title
>CHAR</title>
<para
>A função CHAR() devolve o carácter definido por um número.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CHAR(código)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Código do carácter</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CHAR(65) devolve "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="CLEAN">
<title
>CLEAN</title>
<para
>A função CLEAN() remove todos os caracteres não-imprimíveis do texto</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CLEAN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CLEAN(ASCIITOCHAR(7) + "OLA") devolve "OLA"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CODE">
<title
>CODE</title>
<para
>A função CODE() devolve um código numérico para o primeiro carácter de uma cadeia de caracteres.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CODE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CODE("KDE") devolve 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COMPARE">
<title
>COMPARE</title>
<para
>A função COMPARE() devolve 0, se as duas sequências de texto forem iguais, -1 se a primeira for menor em valor que a segunda; caso contrário, devolve 1.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COMPARE(texto1; texto2; booleano)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Primeiro texto</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Texto com o qual comparar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Comparar com distinção de maiúsculas (verdadeiro/falso)</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMPARE("Calligra"; "Calligra"; true) devolve 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMPARE("calligra"; "Calligra"; true) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COMPARE("kspread"; "Calligra"; false) devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="EXACT"
>EXACT</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CONCATENATE">
<title
>CONCATENATE</title>
<para
>A função CONCATENATE() devolve uma sequência que é a concatenação das cadeias de caracteres que são os parâmetros.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CONCATENATE(valor;valor;...)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valores de texto</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Valores de texto</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Valores de texto</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Valores de texto</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem>
<seglistitem
><seg
>Valores de texto</seg
><seg
>Uma gama de cadeias de caracteres</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CONCATENATE("Sheets";"Calligra";"KDE") devolve "SheetsCalligraKDE"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DOLLAR">
<title
>DOLLAR</title>
<para
>A função DOLLAR() converte um número para texto, usando o formato monetário, com a parte fraccionária arredondada ao número de algarismos indicado. Ainda que o nome seja DOLLAR, esta função fará a conversão de acordo com o formato regional.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DOLLAR(número,casas decimais)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Casas decimais</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DOLLAR(1403,77) devolve "1403,77 EUR"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DOLLAR(-0,123;4) devolve "-0,1230 EUR"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="EXACT">
<title
>EXACT</title>
<para
>A função EXACT() devolve Verdadeiro, se as duas sequências de texto forem iguais; caso contrário, devolve Falso.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>EXACT(texto1;texto2)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadeia de Caracteres</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Cadeia de Caracteres</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EXACT("Calligra";"Calligra") devolve Verdadeiro</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O EXACT("kspread";"Calligra") devolve Falso</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COMPARE"
>COMPARE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIND">
<title
>FIND</title>
<para
>A função FIND() procura uma sequência de texto (texto_a_procurar), dentro de outra cadeia de caracteres (dentro_texto), e devolve o número do ponto inicial de texto_a_procurar, a partir do carácter mais à esquerda de dentro_texto.</para>
<para
>O parâmetro num_inicio define o carácter onde começar a pesquisa. Se o num_inicio for omitido, o primeiro carácter corresponde ao número 1.</para>
<para
>Também pode usar a função SEARCH mas, ao contrário da SEARCH, a FIND distingue as maiúsculas das minúsculas e não permite os caracteres especiais.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FIND(texto_a_procurar;dentro_texto;num_inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O texto que quer procurar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O texto que contem o texto_a_procurar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Define o índice onde iniciar a pesquisa</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FIND("Cal";"Calligra") devolve 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FIND("i";"Calligra") devolve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FIND("C";"Sheets no Calligra";4) devolve 12</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FINDB">
<title
>FINDB</title>
<para
>A função FINDB() procura uma sequência de texto (texto_a_procurar), dentro de outra cadeia de caracteres (dentro_texto), e devolve o número do ponto inicial de texto_a_procurar, a partir do carácter mais à esquerda de dentro_texto. Esta função assume posições em 'bytes'.</para>
<para
>O parâmetro num_inicio define o carácter onde começar a pesquisa. O primeiro carácter corresponde ao número 2. Se o num_inicio for omitido, o primeiro carácter corresponde ao número 2.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FINDB(texto_a_procurar;dentro_texto;num_inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O texto que quer procurar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O texto que contem o texto_a_procurar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Define a posição em 'bytes' onde iniciar a pesquisa</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="FIXED">
<title
>FIXED</title>
<para
>A função FIXED() arredonda um número ao número de casas decimais indicado, formata o número numa cadeia de caracteres no formato decimal, e devolve o resultado como texto. Se o número de casas for negativo, o número é arredondado à esquerda da vírgula. Se omitir o número de casas decimais, assume-se como 2. Se o parâmetro opcional 'sem_espaços' for verdadeiro, os separadores de milhares não aparecerão.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>FIXED(número,casas_decimais,sem_espaços)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Número</seg
><seg
>Duplo</seg
></seglistitem>
<seglistitem
><seg
>Casas decimais</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Sem_espaços</seg
><seg
>Um valor lógico (VERDADEIRO ou FALSO)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FIXED(1234,567;1) devolve "1 234,6"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FIXED(1234,567;1;FALSE) devolve "1234,6"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O FIXED(44,332) devolve "44,33"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="JIS">
<title
>JIS</title>
<para
>A função JIS() devolve os caracteres de largura completa que correspondem ao argumento de meia-largura.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>JIS(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Caracteres de meio-tamanho</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ASC"
>ASC</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFT">
<title
>LEFT</title>
<para
>A função LEFT() devolve uma sub-sequência de texto que contém os 'tamanho' caracteres mais à esquerda do texto. O texto inteiro será devolvido se o 'tamanho' ultrapassar o tamanho real do texto. É um erro se o número de caracteres for menor que 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEFT(texto;comprimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Número de caracteres</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LEFT("hello";2) devolve "he"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LEFT("KSpread";10) devolve "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LEFT("KSpread") devolve "K"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEFTB">
<title
>LEFTB</title>
<para
>A função LEFTB() devolve uma sub-sequência de texto que contém os 'tamanho' caracteres mais à esquerda do texto, usando posições em 'bytes'. O texto inteiro será devolvido se o 'tamanho' ultrapassar o tamanho real do texto. É um erro se o número de caracteres for menor que 0.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEFTB(texto;comprimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Comprimento em 'Bytes'</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LEN">
<title
>LEN</title>
<para
>A função LEN() devolve o comprimento ou tamanho da sequência de texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LEN(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadeia de Caracteres</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LEN("hello") devolve 5</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LEN("KSpread") devolve 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LENB"
>LENB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LENB">
<title
>LENB</title>
<para
>A função LENB() devolve o comprimento ou tamanho da sequência de texto em 'bytes'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LENB(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadeia de Caracteres</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="LOWER">
<title
>LOWER</title>
<para
>A função LOWER() converte uma sequência de texto para minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>LOWER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOWER("ola") devolve "ola"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O LOWER("OLA") devolve "ola"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MID">
<title
>MID</title>
<para
>A função MID() devolve uma sub-sequência que contém os 'tamanho' caracteres desta sequência de texto, a começar na posição 'posição'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MID(texto;posição;tamanho)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posição</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Tamanho</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MID("Calligra";2;3) devolve "all"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O MID("Calligra"; 2) devolve "alligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="MIDB">
<title
>MIDB</title>
<para
>A função MIDB() devolve uma sub-sequência que contém os 'tamanho' caracteres desta sequência de texto, a começar na posição 'posição', usando posições em 'bytes'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>MIDB(texto;posição;tamanho)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posição em 'Bytes'</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Comprimento em 'Bytes'</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="RIGHT"
>RIGHT</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="RIGHTB"
>RIGHTB</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PROPER">
<title
>PROPER</title>
<para
>A função PROPER() converte a primeira letra de cada palavra para maiúsculas, enquanto converte o resto para minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PROPER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadeia de Caracteres</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>PROPER("isto é um título") devolve "Isto É Um Título"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXP">
<title
>REGEXP</title>
<para
>Devolve a parte de um texto que condiz com uma expressão regular. Se o texto não condizer com a expressão regular indicada, é devolvido o valor indicado como predefinido.</para>
<para
>Se for indicada uma referência, então é devolvido o valor desta.</para>
<para
>Se não for dado um valor predefinido, assume-se um texto vazio. Se não for dada uma referência, 0 é assumido (de forma a que todo o texto condizente é devolvido).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REGEXP(texto; expressão_regular; predefinição; referência)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto procurado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Expressão regular</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Valor predefinido (opcional)</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Referência (opcional)</seg
><seg
>Número</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O REGEXP("O número é 15.";"[0-9]+") é igual a "15" </para
></listitem>

</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>REGEXP("15, 20, 26, 41";"([0-9]+), *[0-9]+$";"";1) = "26" </para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REGEXPRE">
<title
>REGEXPRE</title>
<para
>Substitui todas as ocorrências de uma expressão regular pelo texto de substituição</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REGEXPRE(texto; expressão_regular; substituição)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto procurado</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Expressão regular</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Substituição</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O REGEXPRE("14 e 15 e 16";"[0-9]+";"num") devolve "num e num e num"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACE">
<title
>REPLACE</title>
<para
>A função REPLACE() substitui parte de uma sequência de caracteres por outra diferente.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REPLACE(texto;posição;comprimento;novo_texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto ao qual deseja substituir alguns caracteres</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posição dos caracteres a substituir</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>Número de ficheiros a substituir</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>O texto que irá substituir os caracteres no texto antigo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O REPLACE("abcdefghijk";6;5;"-") devolve "abcde-k"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O REPLACE("2002";3;2;"03") devolve "2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPLACEB">
<title
>REPLACEB</title>
<para
>A função REPLACEB() substitui parte de uma sequência de caracteres por outra diferente, usando posições em 'bytes'.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REPLACEB(texto;posição;comprimento;novo_texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto ao qual deseja substituir alguns caracteres, usando posições em 'bytes'</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Posição em 'bytes' dos caracteres a substituir</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>O tamanho em 'bytes' dos caracteres a substituir</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem>
<seglistitem
><seg
>O texto que irá substituir os caracteres no texto antigo</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="REPT">
<title
>REPT</title>
<para
>A função REPT() repete o primeiro parâmetro tantas vezes quantas indicadas pelo segundo parâmetro. O segundo parâmetro não deverá ser negativo, sendo que esta função irá devolver um texto em branco se o segundo parâmetro for zero (ou seja arredondado para zero).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>REPT(texto;número)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Número de repetições</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O REPT("kspread";3) devolve "kspreadkspreadkspread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O REPT("KSpread";0) devolve ""</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHT">
<title
>RIGHT</title>
<para
>A função RIGHT() devolve uma sub-sequência de texto que contém os 'tamanho' caracteres mais à direita do texto. A sequência completa é devolvida se 'tamanho' exceder o tamanho do texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RIGHT(texto;comprimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Número de caracteres</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RIGHT("hello";2) devolve "lo"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RIGHT("KSpread";10) devolve "KSpread"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RIGHT("KSpread") devolve "d"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RIGHTB">
<title
>RIGHTB</title>
<para
>A função RIGHTB() devolve uma sub-sequência de texto que contém os 'tamanho' caracteres mais à direita do texto, usando posições em 'bytes'. A sequência completa é devolvida se 'tamanho' exceder o tamanho do texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RIGHTB(texto;comprimento)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Comprimento em 'Bytes'</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LEFT"
>LEFT</link
>&nbsp;</member>
<member
><link linkend="MID"
>MID</link
>&nbsp;</member>
<member
><link linkend="LEFTB"
>LEFTB</link
>&nbsp;</member>
<member
><link linkend="MIDB"
>MIDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ROT13">
<title
>ROT13</title>
<para
>A função ROT13() encripta um texto, movendo cada um dos seus caracteres 13 posições no alfabeto. Se a 13ª posição passar para além da letra Z, o alfabeto começa novamente no A (rotação).</para>
<para
>Ao aplicar novamente a função de encriptação ao texto resultante, decifra-o.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ROT13(Texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROT13("KSpread") devolve "XFcernq"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ROT13("XFcernq") devolve "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCH">
<title
>SEARCH</title>
<para
>A função SEARCH() procura uma sequência de texto (texto_a_procurar), dentro de uma cadeia de caracteres (dentro_texto), e devolve o número do ponto inicial de texto_a_procurar, a contar do carácter mais à esquerda de dentro_texto.</para>
<para
>Pode usar os caracteres especiais ponto de interrogação (?) e asterisco (*). Um ponto de interrogação corresponde a um carácter único, enquanto um asterisco corresponde a uma sequência arbitrária de caracteres.</para>
<para
>O parâmetro num_inicio indica o carácter onde iniciar a procura. O primeiro carácter corresponde ao número 1. Se o num_inicio for omitido, assume-se como sendo 1. O SEARCH não distingue entre maiúsculas e minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SEARCH(texto_a_procurar,dentro_texto,num_inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O texto que quer procurar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O texto que contem o texto_a_procurar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Índice específico onde iniciar a pesquisa</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SEARCH("e";"Statements";6) devolve 7</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SEARCH("margin";"Profit Margin") devolve 8</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="SEARCHB"
>SEARCHB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEARCHB">
<title
>SEARCHB</title>
<para
>A função SEARCHB() procura uma sequência de texto (texto_a_procurar), dentro de uma cadeia de caracteres (dentro_texto), e devolve o número do ponto inicial de texto_a_procurar, a contar do carácter mais à esquerda de dentro_texto. Esta função assume posições em 'bytes'.</para>
<para
>Pode usar os caracteres especiais ponto de interrogação (?) e asterisco (*). Um ponto de interrogação corresponde a um carácter único, enquanto um asterisco corresponde a uma sequência arbitrária de caracteres.</para>
<para
>O parâmetro num_inicio indica o carácter onde iniciar a procura. O primeiro carácter corresponde ao número 2. Se o num_inicio for omitido, assume-se como sendo 2. O SEARCHB não distingue entre maiúsculas e minúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SEARCHB(texto_a_procurar,dentro_texto,num_inicio)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O texto que quer procurar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O texto que contem o texto_a_procurar</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Índice de 'bytes' específico onde iniciar a pesquisa</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="SEARCH"
>SEARCH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SLEEK">
<title
>SLEEK</title>
<para
>A função SLEEK() remove todos os espaços do texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SLEEK(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SLEEK("Isto é um texto ") devolve "istoéumtexto"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TRIM"
>TRIM</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SUBSTITUTE">
<title
>SUBSTITUTE</title>
<para
>O SUBSTITUTE() substitui o novo_texto por texto_antigo numa sequência de texto. Se o num_instância for indicado, só essa instância de texto_antigo é substituída. Caso contrário, todas as ocorrências de texto_antigo serão substituídas pelo novo_texto. Utilize o SUBSTITUTE quando quiser substituir texto específico, e o REPLACE quando quer substituir todo o texto que ocorra numa dada localização.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SUBSTITUTE(texto; texto_antigo; novo_texto; num_instância)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>O texto que deseja substituir</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>A parte de texto que deseja substituir</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>O novo texto de substituição</seg
><seg
>Texto</seg
></seglistitem>
<seglistitem
><seg
>Qual a ocorrência a substituir</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUBSTITUTE("Dados de Custo";"Custo";"Vendas") devolve "Dados de Vendas"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUBSTITUTE("Qtr 1, 2001";"1";"3";1) devolve "Qtr 3, 2001"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SUBSTITUTE("Qtr 1, 2001";"1";"3";4) Devolve "Qtr 3, 2003"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="REPLACE"
>REPLACE</link
>&nbsp;</member>
<member
><link linkend="REPLACEB"
>REPLACEB</link
>&nbsp;</member>
<member
><link linkend="FIND"
>FIND</link
>&nbsp;</member>
<member
><link linkend="FINDB"
>FINDB</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="T">
<title
>T</title>
<para
>O T() devolve o texto referente por valor. Se o valor for igual ou referenciar o texto, o T devolve o valor. Se o valor não corresponder a texto, o T devolve um texto em branco.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>T(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O T("Calligra") devolve "Calligra"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O T(1,2) devolve "" (texto em branco)</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TEXT">
<title
>TEXT</title>
<para
>A função TEXT() converte um valor para texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TEXT(valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Valor</seg
><seg
>Qualquer tipo de valor</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TEXT(1234.56) devolve "1234.56"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TEXT("KSpread") devolve "KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TOGGLE">
<title
>TOGGLE</title>
<para
>A função TOGGLE() converte os caracteres minúsculos para maiúsculos e os maiúsculos para minúsculos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TOGGLE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TOGGLE("ola") devolve "OLA"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TOGGLE("OLA") devolve "ola"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TOGGLE("oLa") devolve "OlA"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UPPER"
>UPPER</link
>&nbsp;</member>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TRIM">
<title
>TRIM</title>
<para
>A função TRIM() devolve o texto com espaços únicos entre palavras.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TRIM(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Cadeia de Caracteres</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TRIM(" olá KSpread ") devolve "olá KSpread"</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICHAR">
<title
>UNICHAR</title>
<para
>A função UNICHAR() devolve o carácter indicado com um ponto de código Unicode.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>UNICHAR(código)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Código do carácter</seg
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O UNICHAR(65) devolve "A"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UNICODE"
>UNICODE</link
>&nbsp;</member>
<member
><link linkend="CHAR"
>CHAR</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UNICODE">
<title
>UNICODE</title>
<para
>A função UNICODE() devolve um ponto de código Unicode para o primeiro carácter de uma cadeia de texto.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor inteiro (como 1; 132; 2344)</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>UNICODE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O UNICODE("KDE") devolve 75</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="UNICHAR"
>UNICHAR</link
>&nbsp;</member>
<member
><link linkend="CODE"
>CODE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="UPPER">
<title
>UPPER</title>
<para
>A função UPPER() devolve uma sequência de texto para maiúsculas.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>UPPER(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto de origem</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O UPPER("ola") devolve "OLA"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O UPPER("OLA") devolve "OLA"</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="LOWER"
>LOWER</link
>&nbsp;</member>
<member
><link linkend="TOGGLE"
>TOGGLE</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="VALUE">
<title
>VALUE</title>
<para
>Converte uma sequência de texto que representa um valor para o valor real. </para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Duplo</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>

<listitem
><para
>VALUE(texto)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Texto</seg
><seg
>Texto</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O VALUE("14,03") devolve 14,03</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2
><sect2 id="Trigonometric">
<title
>Trigonométrico</title>

<sect3 id="ACOS">
<title
>ACOS</title>
<para
>A função ACOS() devolve o arco-coseno em radianos e o valor está definido matematicamente entre 0 e PI (inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACOS(Vírgula Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ACOS(0,8) é igual a 0,6435011</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ACOS(0) é igual a 1,57079633</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOSH">
<title
>ACOSH</title>
<para
>A função ACOSH() calcula o coseno hiperbólico inverso de x, isto é, o valor cujo coseno hiperbólico é x. Se o x for menor que 1.0, o acosh() devolve um erro Não-é-um-Número (NaN) e o 'errno' é alterado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACOSH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ACOSH(5) é igual a 2,29243167</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ACOSH(0) é igual a NaN</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COSH"
>COSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ACOT">
<title
>ACOT</title>
<para
>A função ACOT() devolve a co-tangente inversa um número.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ACOT(Vírgula Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ACOT(0) é igual a 1,57079633</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASIN">
<title
>ASIN</title>
<para
>A função ASIN() devolve o arco-seno em radianos, estando o valor definido matematicamente entre -PI/2 e PI/2 (inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ASIN(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ASIN(0,8) é igual a 0,92729522</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ASIN(0) é igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ASINH">
<title
>ASINH</title>
<para
>A função ASINH() calcula o seno hiperbólico inverso de x, que é o valor cujo seno hiperbólico é x.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ASINH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ASINH(0,8) é igual a 0,73266826</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ASINH(0) é igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SINH"
>SINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN">
<title
>ATAN</title>
<para
>A função ATAN() devolve a arco-tangente em radianos, estando o valor definido matematicamente entre -PI/2 e PI/2 (inclusive).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ATAN(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ATAN(0,8) é igual a 0,67474094</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ATAN(0) é igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TAN"
>TAN</link
>&nbsp;</member>
<member
><link linkend="ATAN2"
>ATAN2</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATAN2">
<title
>ATAN2</title>
<para
>Esta função calcula a arco-tangente das duas variáveis x e y. É semelhante a calcular a arco-tangente de y/x, excepto que os sinais de ambos os argumentos são usados para determinar o quadrante do resultado.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ATAN2(valor;valor)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ATAN2(0,5;1,0) é igual a 1,107149</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ATAN2(-0,5;2,0) é igual a 1,815775</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="ATANH">
<title
>ATANH</title>
<para
>A função ATANH() calcula a tangente hiperbólica inversa de x, que é o valor cuja tangente hiperbólica é x. Se o valor absoluto de x é maior que 1,0, a ATANH() devolve não-é-um-número (NaN).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>ATANH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ATANH(0,8) é igual a 1,09861229</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O ATANH(0) é igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="TANH"
>TANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COS">
<title
>COS</title>
<para
>A função COS() devolve o coseno de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COS(Vírgula flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COS(0) é igual a 1,0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COS(PI()/2) é igual a 0,0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="SIN"
>SIN</link
>&nbsp;</member>
<member
><link linkend="ACOS"
>ACOS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="COSH">
<title
>COSH</title>
<para
>A função COSH() devolve o coseno hiperbólico de x, que está definido matematicamente como (EXP(x) + EXP(-x)) / 2.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>COSH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COSH(0,8) é igual a 1,33743495</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O COSH(0) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ACOSH"
>ACOSH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSC">
<title
>CSC</title>
<para
>A função CSC() devolve a co-secante de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CSC(Vírgula flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CSC(PI()/2) é igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="CSCH">
<title
>CSCH</title>
<para
>A função CSCH() devolve a co-secante hiperbólica de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>CSCH(Vírgula flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O CSCH(PI()/2) é igual a 0,434537208...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="DEGREES">
<title
>DEGREES</title>
<para
>Esta função transforma um ângulo em radianos num ângulo em graus.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>DEGREES(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DEGREES(0,78) é igual a 44,69</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O DEGREES(1) é igual a 57,29</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="RADIANS"
>RADIANS</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="PI">
<title
>PI</title>
<para
>A função PI() devolve o valor de PI.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>PI()</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O PI() é igual a 3,141592654...</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="RADIANS">
<title
>RADIANS</title>
<para
>Esta função transforma um ângulo em graus num ângulo em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>RADIANS(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (graus)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RADIANS(75) é igual a 1,308</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O RADIANS(90) é igual a 1,5707</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="DEGREES"
>DEGREES</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SEC">
<title
>SEC</title>
<para
>A função SEC() devolve a secante de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SEC(Vírgula flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SEC(0) é igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SECH">
<title
>SECH</title>
<para
>A função SECH() devolve a secante hiperbólica de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SECH(Vírgula flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SECH(0) é igual a 1</para
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SIN">
<title
>SIN</title>
<para
>A função SIN() devolve o seno de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SIN(Vírgula Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SIN(0) é igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SIN(PI()/2) é igual a 1</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="COS"
>COS</link
>&nbsp;</member>
<member
><link linkend="ASIN"
>ASIN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="SINH">
<title
>SINH</title>
<para
>A função SINH() devolve o seno hiperbólico de x, que está definido matematicamente como (EXP(x) - EXP(-x)) / 2.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>SINH(Float)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SINH(0,8) é igual a 0,88810598</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O SINH(0) é igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ASINH"
>ASINH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TAN">
<title
>TAN</title>
<para
>A função TAN() devolve a tangente de x, em que x é dado em radianos.</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TAN(Vírgula Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>

<listitem
><para
>A TAN(0,7) é igual a 0,84228838</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TAN(0) é igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ATAN"
>ATAN</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="TANH">
<title
>TANH</title>
<para
>A função TANH() devolve a tangente hiperbólica de x, que está definida matematicamente como SINH(x)/COSH(x).</para>
<para
><segmentedlist
><segtitle
>Tipo devolvido</segtitle>
<seglistitem
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para>
<variablelist>
<varlistentry
><term
>Sintaxe</term>
<listitem
><para
>TANH(Vírgula Flutuante)</para
></listitem>
</varlistentry>
<varlistentry
><term
>Parâmetros</term>
<listitem
><para
><segmentedlist
><segtitle
>Comentário</segtitle
><segtitle
>Tipo</segtitle>
<seglistitem
><seg
>Ângulo (radianos)</seg
><seg
>Um valor de vírgula flutuante (como 1,3; 0,343; 253 )</seg
></seglistitem
></segmentedlist
></para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TANH(0,8) é igual a 0,66403677</para
></listitem>
</varlistentry>
<varlistentry
><term
>Exemplos</term>
<listitem
><para
>O TANH(0) é igual a 0</para
></listitem>
</varlistentry>
<varlistentry
><term
>Funções Relacionadas</term>
<listitem
><simplelist>
<member
><link linkend="ATANH"
>ATANH</link
>&nbsp;</member>
</simplelist
></listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2>
</sect1>
</chapter>
 

